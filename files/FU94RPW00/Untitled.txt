  " unite.vim
  call dein#add('Shougo/unite.vim')
  let g:unite_enable_start_insert = 1
  let g:unite_enable_ignore_case = 1
  let g:unite_enable_smart_case = 1
  " バッファ一覧
  nnoremap <C-b> :Unite buffer<CR>
  " ファイル一覧 なければ新規ファイル
  noremap <C-N> :Unite file -buffer-name=file file/new<CR>
  " 再帰的にファイル検索
  nnoremap <leader>rec :Unite file_rec<CR>
  " 最近使ったファイルの一覧
  noremap <C-Z> :Unite file_mru<CR>
  " sourcesを「今開いているファイルのディレクトリ」とする
  noremap :uff :<C-u>UniteWithBufferDir file file/new -buffer-name=file<CR>
  " 新規ファイル作成
  noremap :file_new :Unite -buffer-name=file file/new
  " ウィンドウを分割して開く
  au FileType unite nnoremap <silent> <buffer> <expr> <C-J> unite#do_action('split')
  au FileType unite inoremap <silent> <buffer> <expr> <C-J> unite#do_action('split')
  " ウィンドウを縦に分割して開く
  au FileType unite nnoremap <silent> <buffer> <expr> <C-K> unite#do_action('vsplit')
  au FileType unite inoremap <silent> <buffer> <expr> <C-K> unite#do_action('vsplit')
  " ESCキーを2回押すと終了する
  au FileType unite nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
  au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>:q<CR>
  " grep検索 起点を変更してgrep
  nnoremap <silent> <leader>g :<C-u>Unite grep: -buffer-name=search-buffer<CR>
  " カーソル位置の単語をgrep検索
  nnoremap <silent> <leader>cg :<C-u>Unite grep:. -buffer-name=search-buffer<CR><C-R><C-W>
  " grep検索結果の再呼び出し
  nnoremap <silent> <leader>ur :<C-u>UniteResume search-buffer<CR>

  " Unite.vimで最近使ったファイルを表示できるようにする
  call dein#add('Shougo/neomru.vim')

  " denite.nvim
  " call dein#add('Shougo/denite.nvim')
  " if !has('nvim')
  "   call dein#add('roxma/nvim-yarp')
  "   call dein#add('roxma/vim-hug-neovim-rpc')
  " endif
  let g:python3_host_prog = '~/.asdf/shims/python'
  " nnoremap <leader>rec :Denite file_rec<CR>

  " vin-devicons
  call dein#add('ryanoasis/vim-devicons')
  let g:WebDeviconsUnicodeDecorateFolderNodes = 1
  let g:webdevicons_conceal_nerdtree_brackets = 1
  let g:WebDevIconsNerdTreeAfterGlyphPadding = ' '

  " ファイルをtree表示してくれる
  call dein#add('scrooloose/nerdtree')
  nnoremap <silent><C-e> :NERDTree<CR>

  " vim-elixir シンタックスハイライト
  call dein#add('elixir-editors/vim-elixir')
  " vim-mix :Mix でコマンド実行可能
  call dein#add('mattreduce/vim-mix')
  " vim-extest テスト実行プラグイン
  call dein#add('BjRo/vim-extest')
  " elixir alchemist.vim
  call dein#add('slashmili/alchemist.vim')

  " NerdTreeのカラーリング
  call dein#add('tiagofumo/vim-nerdtree-syntax-highlight')
  let s:rspec_red = 'FE405F'
  let s:git_orange = 'F54D27'
  let g:NERDTreeExactMatchHighlightColor = {} " this line is needed to avoid error
  let g:NERDTreeExactMatchHighlightColor['.gitignore'] = s:git_orange " sets the color for .gitignore files
  let g:NERDTreePatternMatchHighlightColor = {} " this line is needed to avoid error
  let g:NERDTreePatternMatchHighlightColor['.*_spec\.rb$'] = s:rspec_red " sets the color for files ending with _spec.rb
  let g:NERDTreeLimitedSyntax = 1


echomsg 'インターネットください'
finish
