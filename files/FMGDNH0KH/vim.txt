let s:sp = fnamemodify('.', ':p')[-1:]

function! s:parse_element(pre, element) abort
	let list = []
	for [key, value] in items(a:element)
		let pre_element = a:pre .. s:sp .. key
		if v:t_dict ==# type(value)
			let list += s:parse_element(pre_element, value)
		else
			call add(list, {pre_element: value})
		endif
	endfor

	return list
endfunction

function! s:parse_file(file) abort
	let json_data = json_decode(join(readfile(a:file), ""))
	let list = s:parse_element(".", json_data)

	let files = []
	let directories = []

	for element in list
		if values(element)[0] ==# 'f'
			call add(files, keys(element)[0])
		else
			call add(directories, keys(element)[0])
		endif
	endfor

	for file in files
		for dir in directories
			let element = split(file, s:sp)[:-1][0]
			if  element !=# dir && element != '.'
				call add(directories, element)
			endif
		endfor
	endfor

	echo files directories
endfunction

call s:parse_file("define")
