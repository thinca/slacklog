$ grep -nr '^func ([^)]*) Seek(' .
./archive/tar/reader_test.go:763:func (rbs *readBadSeeker) Seek(int64, int) (int64, error) { return 0, fmt.Errorf("illegal seek") }
./archive/tar/tar_test.go:81:func (f *testFile) Seek(pos int64, whence int) (int64, error) {
./bytes/reader.go:117:func (r *Reader) Seek(offset int64, whence int) (int64, error) {
./debug/dwarf/entry.go:746:func (r *Reader) Seek(off Offset) {
./debug/dwarf/line.go:665:func (r *LineReader) Seek(pos LineReaderPos) {
./debug/dwarf/typeunit.go:117:func (tur *typeUnitReader) Seek(off Offset) {
./debug/elf/reader.go:25:func (r errorReader) Seek(offset int64, whence int) (int64, error) {
./debug/elf/reader.go:63:func (r *readSeekerFromReader) Seek(offset int64, whence int) (int64, error) {
./internal/poll/fd_unix.go:399:func (fd *FD) Seek(offset int64, whence int) (int64, error) {
./internal/poll/fd_windows.go:954:func (fd *FD) Seek(offset int64, whence int) (int64, error) {
./io/io.go:486:func (s *SectionReader) Seek(offset int64, whence int) (int64, error) {
./os/file.go:211:func (f *File) Seek(offset int64, whence int) (ret int64, err error) {
./strings/reader.go:110:func (r *Reader) Seek(offset int64, whence int) (int64, error) {
./vendor/golang.org/x/text/unicode/norm/iter.go:66:func (i *Iter) Seek(offset int64, whence int) (int64, error) {