	let s:Options = vital#{your plugin name}#import('Options')
			\.new('my_awesome_pluing')
	
	call s:Options.define('git_executable', {
	    \  'default': 'git',
	    \  'type': 'string',
	    \  'validator': {
	    \     value -> executable(value) ? 0
	    \     : 'Specify executalbe path.'},
	    \ })

	call s:Options.define('mode', {
	    \  'default': 'edit',
	    \  'select': ['edit', 'split', 'vsplit'],
	    \ })

	call s:Options.define('enable_at_startup', {
	    \  'default': 0,
	    \  'deprecated': 1,
	    \  'formatted_type': 'bool',
	    \ })

	call s:Options.define_user_setter('my#awesome#options#set')

	" You should provide the port function
	function! my#awesome#options()
	    return s:Options
	endfunction

	" -----

	" Your plugin users can ...
	call my#awesome#options#set('enable_at_startup', '1')

	call my#awesome#options#set('mode', 'new')
	" -> got error like "[my_awesome_pluing/mode] Invalid value
	"   'mode'. Selections are ['edit', 'split', 'vsplit']."

	" -----

	" You can make documents about options like this
	" let doc = join(s:Options.generate_document(), "\n")