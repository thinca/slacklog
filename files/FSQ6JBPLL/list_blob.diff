diff --git a/src/list.c b/src/list.c
index 68be0345..1f0fe782 100644
--- a/src/list.c
+++ b/src/list.c
@@ -1687,17 +1687,17 @@ filter_map(typval_T *argvars, typval_T *rettv, int map)
 	}
 	else if (argvars[0].v_type == VAR_BLOB)
 	{
-	    int		i;
+	    int		start, prev_rem, new_len;
 	    typval_T	tv;
 	    varnumber_T	val;
 
 	    // set_vim_var_nr() doesn't set the type
 	    set_vim_var_type(VV_KEY, VAR_NUMBER);
 
-	    for (i = 0; i < b->bv_ga.ga_len; i++)
+	    for (idx = start = prev_rem = new_len = 0; idx < b->bv_ga.ga_len; idx++)
 	    {
 		tv.v_type = VAR_NUMBER;
-		val = blob_get(b, i);
+		val = blob_get(b, idx);
 		tv.vval.v_number = val;
 		set_vim_var_nr(VV_KEY, idx);
 		if (filter_map_one(&tv, expr, map, &rem) == FAIL || did_emsg)
@@ -1710,18 +1710,32 @@ filter_map(typval_T *argvars, typval_T *rettv, int map)
 		if (map)
 		{
 		    if (tv.vval.v_number != val)
-			blob_set(b, i, tv.vval.v_number);
+			blob_set(b, idx, tv.vval.v_number);
 		}
-		else if (rem)
+		else if (rem != prev_rem)
 		{
-		    char_u *p = (char_u *)argvars[0].vval.v_blob->bv_ga.ga_data;
-
-		    mch_memmove(p + i, p + i + 1,
-					      (size_t)b->bv_ga.ga_len - i - 1);
-		    --b->bv_ga.ga_len;
-		    --i;
+		    if (rem)
+		    {
+			char_u *p = (char_u *)b->bv_ga.ga_data;
+			mch_memmove(p + new_len, p + start, (size_t)(idx - start));
+			new_len += idx - start;
+		    }
+		    else
+		    {
+			start = idx;
+		    }
+		    prev_rem = rem;
 		}
-		++idx;
+	    }
+	    if (!map)
+	    {
+		if (!rem)
+		{
+		    char_u *p = (char_u *)b->bv_ga.ga_data;
+		    mch_memmove(p + new_len, p + start, (size_t)(idx - start));
+		    new_len += idx - start;
+		}
+		b->bv_ga.ga_len = new_len;
 	    }
 	}
 	else // argvars[0].v_type == VAR_LIST
