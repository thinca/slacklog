let buffer_name = 'vimrc-reading://next/a'
echomsg buffer_name
execute 'badd ' . buffer_name

if exists('+shellslash')
  let backup_shellslash = &shellslash
  set shellslash
  echomsg &shellslash
endif
if exists('+completeslash')
  let backup_completeslash = &completeslash
  set completeslash=slash
  echomsg &completeslash
endif
let buffer_name = 'vimrc-reading://next/b'
echomsg buffer_name
execute 'badd ' . buffer_name
if exists('backup_shellslash')
  let &shellslash = backup_shellslash
endif
if exists('backup_completeslash')
  let &completeslash = backup_completeslash
endif

if exists('+shellslash')
  let backup_shellslash = &shellslash
  set noshellslash
  echomsg &shellslash
endif
if exists('+completeslash')
  let backup_completeslash = &completeslash
  set completeslash=backslash
  echomsg &completeslash
endif
let buffer_name = 'vimrc-reading://next/c'
echomsg buffer_name
execute 'badd ' . buffer_name
if exists('backup_shellslash')
  let &shellslash = backup_shellslash
endif
if exists('backup_completeslash')
  let &completeslash = backup_completeslash
endif


vimrc-reading://next/a
1
slash
vimrc-reading://next/b
0
backslash
vimrc-reading://next/c


  2 %a + "[無名]"                       行 2
  3      "vimrc-reading:\next\a"        行 1
  4      "vimrc-reading:\next\b"        行 1
  5      "vimrc-reading:\next\c"        行 1
  6 #h   "split"                        行 1

