[[plugins]]
# repo = 'soramugi/auto-ctags.vim'
repo = 'tsuyoshicho/auto-ctags.vim'
rev  = 'feature/asyncprocess'
on_if= 'executable("ctags")'
hook_add = '''
  " in .ctags
  let g:auto_ctags_tags_args = ['--tag-relative=yes', '--recurse=yes', '--sort=yes', '--extra=+f']
  " universal ctags need
  let g:auto_ctags_tags_args = get(g:,'auto_ctags_tags_args',[]) + ['--output-format=e-ctags']

  let g:auto_ctags = 1
  " let g:auto_ctags_filetype_mode = 1
  let g:auto_ctags_directory_list = ['.git', '.svn', '.hg', '.bzr', 'CVS', '.']
  let g:auto_ctags_search_recursively = 1
  let g:auto_ctags_absolute_path = 1
  let s:home = ''
  if has('path_extra')
    let s:home = ';$HOME'
  endif
  for s:dir in g:auto_ctags_directory_list
    if s:dir !=? '.'
      execute 'set tags+=./' . s:dir . '/tags' . s:home
    endif
  endfor

  " git リポジトリ内などでも直にtagsを生成する関数
  function! DirectAutoCtags()
    let s:ctags_list_backup = copy(g:auto_ctags_directory_list)
    let s:ctags_search_backup = g:auto_ctags_search_recursively

    " set current only
    let g:auto_ctags_directory_list = ['.']
    let g:auto_ctags_search_recursively = 1

    " call ctags create process
    call auto_ctags#ctags(1)

    " recover backups
    let g:auto_ctags_directory_list = copy(s:ctags_list_backup)
    let g:auto_ctags_search_recursively = s:ctags_search_backup

    unlet s:ctags_list_backup
    unlet s:ctags_search_backup
  endfunction

  " コマンド定義
  command! CtagsDirect call DirectAutoCtags()
'''
