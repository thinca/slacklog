[{"client_msg_id":"7c73ac17-498f-4565-a2f0-e803772c71c9","type":"message","user":"U01H161HVPS","text":"補足しておくと別にこの挙動に困っているわけではなくて、むしろこれが仕様であってほしいと思っています（エラーになるとしたらリロードされうるスクリプト内で `const` / `lockvar` をうかつに使えなくなるので・・）","ts":"1608334227.048700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jIgT"}]},{"client_msg_id":"188f19b0-9d57-4972-9246-64c94244cd40","type":"message","user":"U01H161HVPS","text":"help にそのあたりの処理の違いについて説明されている部分ってあります？　探したけど見つからないんですよね...","ts":"1608332844.048200","edited":{"user":"U01H161HVPS","ts":"1608333106.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"sGPq/"}]},{"client_msg_id":"89944bf3-fbc1-4760-be4f-a3366b7dc560","type":"message","user":"U01H161HVPS","text":"ですよね","ts":"1608332708.047200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"SoVL8"}]},{"type":"message","user":"UGH7U3SF2","text":"これをスクリプトに書いてfooの中書き換えて複数回読み込ませてもエラーにはならない","ts":"1608332652.046700","files":[{"id":"F01H314PZC6","created":1608332562,"timestamp":1608332562,"name":"image.png","title":"image.png","mimetype":"image/png","image_exif_rotation":0,"filetype":"png","pretty_type":"PNG","user":"UGH7U3SF2","mode":"hosted","editable":false,"is_external":false,"external_type":"","size":4886,"url":"","url_download":"","url_private":"https://files.slack.com/files-pri/T03C4RC8V-F01H314PZC6/image.png","url_private_download":"https://files.slack.com/files-pri/T03C4RC8V-F01H314PZC6/download/image.png","original_h":120,"original_w":192,"thumb_64":"https://files.slack.com/files-tmb/T03C4RC8V-F01H314PZC6-5b08d690da/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T03C4RC8V-F01H314PZC6-5b08d690da/image_80.png","thumb_160":"https://files.slack.com/files-tmb/T03C4RC8V-F01H314PZC6-5b08d690da/image_160.png","thumb_360":"https://files.slack.com/files-tmb/T03C4RC8V-F01H314PZC6-5b08d690da/image_360.png","thumb_360_gif":"","thumb_360_w":192,"thumb_360_h":120,"thumb_480":"","thumb_480_w":0,"thumb_480_h":0,"thumb_720":"","thumb_720_w":0,"thumb_720_h":0,"thumb_960":"","thumb_960_w":0,"thumb_960_h":0,"thumb_1024":"","thumb_1024_w":0,"thumb_1024_h":0,"permalink":"https://vim-jp.slack.com/files/UGH7U3SF2/F01H314PZC6/image.png","permalink_public":"https://slack-files.com/T03C4RC8V-F01H314PZC6-f5840deae5","edit_link":"","preview":"","preview_highlight":"","lines":0,"lines_more":0,"is_public":true,"public_url_shared":false,"channels":null,"groups":null,"ims":null,"initial_comment":{},"comments_count":0,"num_stars":0,"is_starred":false,"shares":{"public":null,"private":null},"display_as_bot":false,"has_rich_preview":false,"thumb_tiny":"AwAeADCkAT0owaVOp5xwaVc7eGApANxRg+hp+OeGHPWgEhtoYfWi4DME9qMH0p4JJzv596RySeTn6UAIpAOSM8UAgAfLz60lFACkjI+X60BgP4eKSigAJBPAxRRRQB//2Q==","username":""}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"+Gh"}]},{"type":"message","user":"UGH7U3SF2","text":"ちゃんとエラーになるやつ","ts":"1608332507.044800","files":[{"id":"F01H9UMT4H1","created":1608332503,"timestamp":1608332503,"name":"image.png","title":"image.png","mimetype":"image/png","image_exif_rotation":0,"filetype":"png","pretty_type":"PNG","user":"UGH7U3SF2","mode":"hosted","editable":false,"is_external":false,"external_type":"","size":12789,"url":"","url_download":"","url_private":"https://files.slack.com/files-pri/T03C4RC8V-F01H9UMT4H1/image.png","url_private_download":"https://files.slack.com/files-pri/T03C4RC8V-F01H9UMT4H1/download/image.png","original_h":180,"original_w":384,"thumb_64":"https://files.slack.com/files-tmb/T03C4RC8V-F01H9UMT4H1-094ac0aa3f/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T03C4RC8V-F01H9UMT4H1-094ac0aa3f/image_80.png","thumb_160":"https://files.slack.com/files-tmb/T03C4RC8V-F01H9UMT4H1-094ac0aa3f/image_160.png","thumb_360":"https://files.slack.com/files-tmb/T03C4RC8V-F01H9UMT4H1-094ac0aa3f/image_360.png","thumb_360_gif":"","thumb_360_w":360,"thumb_360_h":169,"thumb_480":"","thumb_480_w":0,"thumb_480_h":0,"thumb_720":"","thumb_720_w":0,"thumb_720_h":0,"thumb_960":"","thumb_960_w":0,"thumb_960_h":0,"thumb_1024":"","thumb_1024_w":0,"thumb_1024_h":0,"permalink":"https://vim-jp.slack.com/files/UGH7U3SF2/F01H9UMT4H1/image.png","permalink_public":"https://slack-files.com/T03C4RC8V-F01H9UMT4H1-60d75d5f23","edit_link":"","preview":"","preview_highlight":"","lines":0,"lines_more":0,"is_public":true,"public_url_shared":false,"channels":null,"groups":null,"ims":null,"initial_comment":{},"comments_count":0,"num_stars":0,"is_starred":false,"shares":{"public":null,"private":null},"display_as_bot":false,"has_rich_preview":false,"thumb_tiny":"AwAWADCmBnFG31ozgClNIBNtIeDT8+/603PrQAlFHHYGimAZI70bj6miigAJz1ooooAKKKKAP//Z","username":""}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"k+tz"}]},{"client_msg_id":"bba6289c-e9ed-4f19-99ab-1e5e2f0c8a35","type":"message","user":"UGH7U3SF2","text":"読み込み直しと内部の関数を使うとかは違うはず...","ts":"1608332503.044600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"K/7"}]},{"client_msg_id":"cc661542-d34d-4f5e-a735-1d01bc0e93f8","type":"message","user":"U01H161HVPS","text":"（例外があるのところ）","ts":"1608332474.044000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=5lP8"}]},{"type":"message","user":"UPZHKAM7W","text":"```\n                                                                *E127* *E122*\n                        この名前で定義される関数が既に定義済みで [!] が使用さ\n                        れなかった場合、エラーとなる。1つの例外がある: スクリ\n                        プトを再読み込みすると、そのスクリプトで以前に定義され\n                        ていた関数は、静かに置き換えられる。\n                        [!] が使用されていれば、それまで存在していた関数は、速\n                        やかに新しいものへ置換えられる。\n                        NOTE: ! は十分に注意して使用すること。注意せずに使用し\n                        た場合は既存の関数を期待せず置き換える可能性があり、デ\n                        バッグが難しくなる。\n                        NOTE: Vim9 スクリプトのスクリプトローカル関数は、削除\n                        または再定義はできない。\n \n                        引数{arguments}については|function-argument|を参照。\n```","ts":"1608332439.043500","bot_id":"BPM858KEE","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"fb105624-c911-428b-bcaa-3c800ac8caa0","type":"message","user":"U01H161HVPS","text":":h E127\nこれと同じような話ですかね...？","ts":"1608332438.043400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=cL"}]},{"client_msg_id":"797716af-4d81-491b-853a-cb76c62c5ac0","type":"message","user":"U01H161HVPS","text":"```let s:foo = 'bar'\nlockvar s:foo```\nというスクリプトを複数回実行してもエラーにならないのって仕様ですか？\n2 回目以降では  `lockvar` でロックされた `s:foo` がすでに存在しているので、 `let` で `s:foo` の値を変更しようとするとエラーになるのではと思ったんですが・・・","ts":"1608330701.042400","edited":{"user":"U01H161HVPS","ts":"1608331638.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"A=x"}]},{"type":"message","user":"UPZHKAM7W","text":"```\n:lockv[ar][!] [depth] {name} ...                        *:lockvar* *:lockv*\n                        内部変数{name}をロックする。ロックすると、それ以降変更\n                        ができなくなる(アンロックするまで)。\n                        ロックされた変数を削除することはできる:  \n                                :lockvar v\n                                :let v = 'asdf'         \" 失敗!\n                                :unlet v\n```","ts":"1608330611.041800","bot_id":"BPM858KEE","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"77299c9a-469a-45f7-af28-cf605c593476","type":"message","user":"U01H161HVPS","text":":h :lockvar","ts":"1608330611.041700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"mQr"}]},{"type":"message","user":"UPZHKAM7W","text":"```\n                                                *:cons* *:const*\n:cons[t] {var-name} = {expr1}\n:cons[t] [{name1}, {name2}, ...] = {expr1}\n:cons[t] [{name}, ..., ; {lastname}] = {expr1}\n:cons[t] {var-name} =\u0026lt;\u0026lt; [trim] {marker}\ntext...\ntext...\n{marker}\n                        |:let|に似ているが、加えて、値がセットされたあとに変数\n                        がロックされる。これは、ロックされた変数と同じで、\n                        |:let|のすぐ後に|:lockvar|を使うことで変数をロックする\n                        ことと同義である。したがって:  \n                                :const x = 1\n                        は、以下と同義である:  \n                                :let x = 1\n                                :lockvar 1 x\n                        これは、変数が変更されないことを確実にしたいときに便利\n                        である。\n```","ts":"1608330585.041400","bot_id":"BPM858KEE","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"2f89536f-372d-439d-86c4-eb2f9ae34d04","type":"message","user":"U01H161HVPS","text":":h :const","ts":"1608330584.041300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Qix"}]}]
