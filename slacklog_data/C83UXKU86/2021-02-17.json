[{"type":"message","user":"U01NGV9L85P","text":"\u003c@U01NGV9L85P\u003e has joined the channel","ts":"1613567368.156600","subtype":"channel_join","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"cc07c9f7-f960-4004-8124-94387a9b5aba","type":"message","user":"U06ECBRTJ","text":"docker-vim の守護者ですね","ts":"1613560685.156300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"03mT"}]},{"client_msg_id":"EC1093CB-781D-4F7C-B5A7-73CDFE42A9BB","type":"message","user":"U782D5DF1","text":"関係なかった","ts":"1613560556.156000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0RgS0"}]},{"client_msg_id":"a15090ac-d9ee-4186-9da6-3ccbabc711b2","type":"message","user":"U03C71D7H","text":"quickrun は一切関係がない","ts":"1613560519.155700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"31P"}]},{"client_msg_id":"5E1158C8-C74E-4E77-A9AB-D4111FF2E193","type":"message","user":"U782D5DF1","text":"quickrunの守護者みある","ts":"1613560498.155500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"DCK"}]},{"client_msg_id":"7054360e-047b-458f-be16-ae60e57d949c","type":"message","user":"U03C71D7H","text":"なぜ使いもしない処理系を追っているのか自分でもわからぬ (asdf で racket 入れるようにしたら自動的に最新版が降ってくるようになったので気付いてしまった)","ts":"1613556889.154700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"tDds7"}]},{"client_msg_id":"87800ee4-fff3-4729-8515-858d3fa52760","type":"message","user":"U03C71D7H","text":"先週 Racket 8.0 が出たのだけど、if_mzscheme でのビルドに失敗した。ビルド時に mzscheme のインストール場所を探すのに使われる一時スクリプト `mzdirs.scm` がうまく動かないようだ","ts":"1613556855.154100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"L4PJ3"}]},{"client_msg_id":"98df6488-b711-4d17-96fd-ead78fab9bf1","type":"message","user":"U9S4G0LJW","text":"eskk.vimが :bram: に殺されたのは記憶に新しいですね :innocent:","ts":"1613554613.153000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"fj82h"}]},{"client_msg_id":"43b0e7da-fde4-402c-85c4-ef15b05b483b","type":"message","user":"U03C71D7H","text":"速度的にクリティカルな部分だけ Lua で書く、みたいなことはやってる人がいましたね?","ts":"1613535813.152000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"IKg"}]},{"client_msg_id":"3d115373-8b8a-4931-b012-53eee2f201a2","type":"message","user":"U03C71D7H","text":"Vim9 の方が速いので、動くなら Vim9、なくても遅くていいので動いてほしいのでその場合は通常の Vim script、と言う両対応の要求はあるとは思う\n絶対めんどいので私はやらないけど","ts":"1613535769.151500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"o9K"}]},{"client_msg_id":"4f530ef9-bf40-4d93-a7ed-7b5bf1f045bc","type":"message","user":"UAZ33BKV2","text":"よほど速度に影響のでる関数とか\n全体のシーケンスは同じだからで、個々の処理をVim9にするとか...\nか?","ts":"1613534795.150500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"SQz"}]},{"client_msg_id":"2c81f7cd-27e4-40e4-8361-46c7f3da7197","type":"message","user":"U7JL1UKKL","text":"やるなら全部書き換えないと意味がない","ts":"1613534723.149700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"zOKI"}]},{"client_msg_id":"51726f67-7bc0-4663-a8e6-fcb06369ebf0","type":"message","user":"U7JL1UKKL","text":"一部だけVim9にしてうれしい場面はないと思うんだよね","ts":"1613534709.149200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"aD0bW"}]},{"client_msg_id":"0b167372-ea79-412d-8f78-dcea61ba9476","type":"message","user":"UAZ33BKV2","text":"過去互換なんだろうけど...まあ、vimrcが1ファイルでいけるとか?\n基本は分離記述したほうがいいよねとは思う...","ts":"1613531394.148600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jLlh2"}]},{"client_msg_id":"38600c76-b36d-4e37-8a4a-431a2cabf59d","type":"message","user":"U9S4G0LJW","text":"混在できて嬉しい場面というのが思い付かない","ts":"1613531313.148000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"OJch"}]},{"client_msg_id":"3d53b509-3a46-447a-9819-357fb72328e0","type":"message","user":"U9S4G0LJW","text":"Vim9の文法受け付ける環境であればVim9使うだろうし両対応する必要ないのではとずっと思っている","ts":"1613531290.147500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"GrrN"}]},{"client_msg_id":"e989d3a6-a37a-45a1-a13e-e6bb35af460a","type":"message","user":"U7JL1UKKL","text":"Vim9は両対応ができるようにしてると思うんだけど、トラブルの元なので私個人としては完全に分離した方がよいと思うなぁ","ts":"1613531182.146200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"L+hk"}]},{"client_msg_id":"59eb071b-bfac-4866-ba82-8d4af68a9543","type":"message","user":"U7JL1UKKL","text":"お、直った","ts":"1613531132.144900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"da0"}]},{"client_msg_id":"e3306bcf-52f8-4b1f-b48e-e4619a77cb4c","type":"message","user":"U7JL1UKKL","text":"なんかすごくつらそうな感じである","ts":"1613530810.143100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"3tMxm"}]},{"client_msg_id":"aa1ed57f-c8a0-44a4-a37d-c4165f64afe3","type":"message","user":"U7JL1UKKL","text":"\u003chttps://github.com/vim/vim/issues/7851|https://github.com/vim/vim/issues/7851\u003e","ts":"1613530803.142800","thread_ts":"1613530803.142800","attachments":[{"fallback":"GitHub: How to implement vim9 and non-vim9 scripts together · Issue #7851 · vim/vim","id":1,"title":"How to implement vim9 and non-vim9 scripts together · Issue #7851 · vim/vim","title_link":"https://github.com/vim/vim/issues/7851","text":"I am modifying some functions in my script to work on different vim versions. For example, the following Add() works fine on the latest vim which has vim9 feature, 1 if !exists(\u0026amp;#39;:def\u0026amp;#39;) 2 fu...","thumb_url":"https://avatars.githubusercontent.com/u/11618545?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/issues/7851","original_url":"https://github.com/vim/vim/issues/7851"}],"edited":{"user":"U7JL1UKKL","ts":"1613531125.000000"},"reply_count":2,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"tl5"}]},{"client_msg_id":"476bed46-5887-4afc-9c81-f8b5672ddab2","type":"message","user":"U6XP9LZ6V","text":"```C:/msys64/mingw32/bin/../lib/gcc/i686-w64-mingw32/10.2.0/libgcc_s.a(d000121.o)\n                              C:/msys64/mingw32/bin/../lib/gcc/i686-w64-mingw32/10.2.0/../../../../i686-w64-mingw32/lib/../lib/libmingwex.a(lib32_libmingwex_a-mingw_pformat.o) (__umoddi3)```\nこれは、`libmingwex.a` の中の `lib32_libmingwex_a-mingw_pformat.o` が `__umoddi3` というシンボルを参照しており、`libgcc_s.a` の中の `d000121.o` でそのシンボルが見つかったということ。\nで、マップファイル内を上に向かって `lib32_libmingwex_a-mingw_pformat.o` で検索すると、これを使用しているところが分かる。順に上にたどっていけば vim のソースのどこかにたどり着く。","ts":"1613523395.142400","team":"T03C4RC8V","reactions":[{"name":"naruhodo","count":1,"users":["UAZ33BKV2"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"RXZK"}]},{"client_msg_id":"a3ab7dcf-52ef-4c45-becf-a9ed5b43386e","type":"message","user":"U6XP9LZ6V","text":"gccのマップファイルの読み方がようやくちょっと分かってきた気がする。","ts":"1613522716.138100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"6RNA3"}]},{"client_msg_id":"ea51a062-f998-4ba2-b1b3-ceb5aebc2adc","type":"message","user":"U6XP9LZ6V","text":"閉じたった\n\u003chttps://github.com/vim/vim/issues/7852\u003e","ts":"1613522279.137200","attachments":[{"fallback":"GitHub: GVim 32bits Build fails under new version of MSYS2 msys2-x86_64-20210105 and GCC version 10.2.0 · Issue #7852 · vim/vim","id":1,"title":"GVim 32bits Build fails under new version of MSYS2 msys2-x86_64-20210105 and GCC version 10.2.0 · Issue #7852 · vim/vim","title_link":"https://github.com/vim/vim/issues/7852","text":"Describe the bug GVim 32bits Build fails with new MSYS2 32bits following installPC.txt instructions section MSYS To Reproduce Detailed steps to reproduce the behavior: Download installer: msys2-x86...","thumb_url":"https://avatars.githubusercontent.com/u/11618545?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/issues/7852","original_url":"https://github.com/vim/vim/issues/7852"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rMX"}]},{"client_msg_id":"f54bae34-2248-410c-bf41-023b186d05a3","type":"message","user":"U6XP9LZ6V","text":"libgcc_s_dw2-1.dll を使わないようにするための回避策は、\n1. 32bit mingw64 を捨てて 64bit に移行する。\n2. 32bit mingw64 を捨てて MSVC に移行する。\n3. DirectWrite, if_ole をオフにして `CFLAGS` に `-D__USE_MINGW_ANSI_STDIO=0` を足す。\n4. `__umoddi3` のソースを持ってきて自分で静的リンクする。\nぐらいですかね。","ts":"1613520773.136900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"gRO"}]},{"client_msg_id":"5f29e540-7797-4630-be58-13aed289d474","type":"message","user":"U03C6TEAZ","text":"うへぇ \u0026gt; new","ts":"1613519979.133800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"pnF37"}]},{"client_msg_id":"1835b89d-8c79-4aab-b882-ee7b80e0a237","type":"message","user":"U6XP9LZ6V","text":"`new` を使っただけで printf 系関数が使われるようなので、回避不可能","ts":"1613519188.133600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"RUhR"}]},{"client_msg_id":"a94fe464-8fb3-495d-a722-fcbba7e3bef3","type":"message","user":"U6XP9LZ6V","text":"で、`CFLAGS` に `-D__USE_MINGW_ANSI_STDIO=0` を追加すれば解決かと思いきや、DirectWrite を有効にしていると libstdc++ の中からも printf 系関数が使われており、結局 libgcc_s_dw2-1.dll の依存は外せないことが判明しました。残念。","ts":"1613518982.132800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"B6wy"}]},{"client_msg_id":"73ef2351-9e51-494c-8e36-4598342d0629","type":"message","user":"U6XP9LZ6V","text":"`__umoddi3` の件、`__USE_MINGW_ANSI_STDIO` が関係なくもなかった。\n今の mingw64 は、デフォルトで `C:/msys64/mingw32/i686-w64-mingw32/include/_mingw.h` で `__USE_MINGW_ANSI_STDIO` が 1 に定義されるようになってました。これが 1 になっていると、mingw64 で用意されている printf 系関数が使われ、その中で `__umoddi3` が使われているため、libgcc_s_dw2-1.dll が必要になってしまいます。","ts":"1613518744.130000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"d3K6"}]},{"client_msg_id":"0807d801-ecaa-4e07-bb97-525657ee4c95","type":"message","user":"U6XP9LZ6V","text":"リンク先が変","ts":"1613530958.143700","thread_ts":"1613530803.142800","parent_user_id":"U7JL1UKKL","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"m/Ev8"}]},{"client_msg_id":"8eab2dab-37d7-4018-88c2-d204865db360","type":"message","user":"U7JL1UKKL","text":"訂正したのに直らない…","ts":"1613531063.143900","thread_ts":"1613530803.142800","parent_user_id":"U7JL1UKKL","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Heuil"}]}]
