[{"client_msg_id":"06ed3384-280f-4eb6-be2a-24ecba30b695","type":"message","user":"UGXMRNBUM","text":"このへんの衝突回避の仕組み、ワークアラウンド味が溢れてて破綻してないのが不思議だと思ってみている","ts":"1612704913.013200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"hZP"}]},{"client_msg_id":"02b02f7f-1cb9-48ab-a837-4a1d2e659ad3","type":"message","user":"UGXMRNBUM","text":"`*.mod` のautocmd止めちゃうしかすべがないのは強引さがあるなあと思ったりしましたね","ts":"1612704873.012400","edited":{"user":"UGXMRNBUM","ts":"1612704884.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"7lTZ/"}]},{"client_msg_id":"58e72922-f1b0-40e4-9ab1-a8906a1dab78","type":"message","user":"UGXMRNBUM","text":"逆に","ts":"1612704857.012000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"hMa"}]},{"client_msg_id":"b7401701-69de-465d-94f4-fb6beb7d1edc","type":"message","user":"U01D44KSY9Z","text":"見た感じ、 `did_filetype()` を見てるので重複が起こらないのかなと","ts":"1612703688.011000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xeJ"}]},{"client_msg_id":"2750597f-64b1-4cc0-ac8c-8f2366eb37bd","type":"message","user":"UAZ33BKV2","text":"\u003chttps://vim-jp.slack.com/archives/CUPKWMQFK/p1612703035034200\u003e\n\u003c@U01D44KSY9Z\u003e さんが引いてた","ts":"1612703622.009900","attachments":[{"fallback":"[February 7th, 2021 5:03 AM] vim-jp-bot: ```\n:setf[iletype] [FALLBACK] {filetype}                    *:setf* *:setfiletype*\n                        オプション 'filetype' に対して {filetype} を設定する。\n                        ただし autocommand の中 (入れ子になっているときは、外\n                        側も含めて) でまだ実行されていないときのみ有効である。\n                        これは以下のコマンドの略である。  \n                                :if !did_filetype()\n                                :  setlocal filetype={filetype}\n                                :endif\n                        このコマンドは filetype.vim の中で使われ、オプション\n                        'filetype' が2度設定されて別の設定や構文ファイルが読み\n                        込まれることがないようにしている。\n \n                        任意の引数 FALLBACK が存在すると、後の :setfiletype コ\n                        マンドは 'filetype' を上書きする。これはファイルタイプ\n                        の決定を正確に推測するために使われる。|did_filetype()|\n                        はこのコマンドの後では false を返すだろう。\n```","id":1,"author_id":"UPZHKAM7W","author_subname":"vim-jp-bot","author_link":"https://vim-jp.slack.com/services/BPM858KEE","author_icon":"https://a.slack-edge.com/80588/img/services/hubot_48.png","text":"```\n:setf[iletype] [FALLBACK] {filetype}                    *:setf* *:setfiletype*\n                        オプション 'filetype' に対して {filetype} を設定する。\n                        ただし autocommand の中 (入れ子になっているときは、外\n                        側も含めて) でまだ実行されていないときのみ有効である。\n                        これは以下のコマンドの略である。  \n                                :if !did_filetype()\n                                :  setlocal filetype={filetype}\n                                :endif\n                        このコマンドは filetype.vim の中で使われ、オプション\n                        'filetype' が2度設定されて別の設定や構文ファイルが読み\n                        込まれることがないようにしている。\n \n                        任意の引数 FALLBACK が存在すると、後の :setfiletype コ\n                        マンドは 'filetype' を上書きする。これはファイルタイプ\n                        の決定を正確に推測するために使われる。|did_filetype()|\n                        はこのコマンドの後では false を返すだろう。\n```","mrkdwn_in":["text"],"blocks":null,"footer":"Posted in #lang-vim-script","ts":1612703035.034200,"from_url":"https://vim-jp.slack.com/archives/CUPKWMQFK/p1612703035034200","original_url":"https://vim-jp.slack.com/archives/CUPKWMQFK/p1612703035034200"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"U/d"}]},{"client_msg_id":"f6bd3bfb-6671-48a1-b774-10327fb94f2c","type":"message","user":"UAZ33BKV2","text":"set filetypeと setfiletype で若干動作に違いがあったような...","ts":"1612703557.009600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xzYt"}]},{"client_msg_id":"46e52883-cc03-484a-a7ab-91c1873c2ef9","type":"message","user":"UGXMRNBUM","text":"作っちゃったけど","ts":"1612703281.009100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"d+N"}]},{"client_msg_id":"88190853-6637-4b5b-ac51-d1c939e7d1d4","type":"message","user":"UGXMRNBUM","text":"まぁ、でもそう、 go のfiletype周りだけ欲しくなるんですよ","ts":"1612703276.008900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rQdR"}]},{"client_msg_id":"121f1b0b-b650-488d-bca6-3ef1e892ce57","type":"message","user":"UGXMRNBUM","text":"2種類のftpluginが呼ばれる、か。なるほど…","ts":"1612703129.008300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Y6rhn"}]},{"client_msg_id":"c8500f90-fd51-4eb5-a3ec-b847014d378a","type":"message","user":"UGXMRNBUM","text":"`set filetype` だと駄目なんかなァ","ts":"1612702809.007900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"SZpWB"}]},{"client_msg_id":"1cd0e0e8-c518-4524-b3a1-05ebb970c018","type":"message","user":"UGXMRNBUM","text":"go.modのftdetect、なんでみんな `setfiletype` を使って `*.mod` を消しに行くんだろう","ts":"1612702763.007300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"eO4s"}]},{"client_msg_id":"de2d93f8-c617-4fb7-ad52-a6d129ee451e","type":"message","user":"UGXMRNBUM","text":"僕も昨日作ってた…","ts":"1612702640.006300","thread_ts":"1612691649.000700","subtype":"thread_broadcast","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"e0D4c"}],"root":{"client_msg_id":"a23d41c7-8936-4139-aa01-86a4072cd9b0","type":"message","user":"U7H4TJEG0","text":"\u003chttps://github.com/johejo/gomod.vim\u003e\n\u003chttps://github.com/mattn/vim-gomod\u003e\n増えてる","ts":"1612691649.000700","thread_ts":"1612691649.000700","attachments":[{"fallback":"GitHub: johejo/gomod.vim","id":1,"title":"johejo/gomod.vim","title_link":"https://github.com/johejo/gomod.vim","text":"Vim syntax highlight for go.mod. Contribute to johejo/gomod.vim development by creating an account on GitHub.","thumb_url":"https://avatars.githubusercontent.com/u/25817501?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":133,"thumb_height":133,"from_url":"https://github.com/johejo/gomod.vim","original_url":"https://github.com/johejo/gomod.vim"},{"fallback":"GitHub: mattn/vim-gomod","id":2,"title":"mattn/vim-gomod","title_link":"https://github.com/mattn/vim-gomod","text":"Contribute to mattn/vim-gomod development by creating an account on GitHub.","thumb_url":"https://avatars.githubusercontent.com/u/10111?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/mattn/vim-gomod","original_url":"https://github.com/mattn/vim-gomod"}],"reply_count":1,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"7l6"}]}},{"client_msg_id":"09fb30a9-c5a9-4dd3-b564-bc51d8b68ac6","type":"message","user":"UERCTTT8B","text":"Gophers Slack とマルチポストになっちゃうんですが、ここにも\n\u0026gt; I have a question about the implementation of runtime. When `runtime·check` is called, `g` seems `g0` where `morestack`  or `morestack_noctxt` cannot be called. (\u003chttps://github.com/golang/go/blob/3d40895e36e5f16654fa6b75f7fdf59edb18d2e0/src/runtime/asm_arm64.s#L69-L74\u003e) However, as `check` is a regular functions, `morestack_noctxt` is inserted. How do they work?\nruntime.check を呼ぶときに g が g0 になっているようにみえるが、ちゃんと動くのはなんででしょう","ts":"1612695372.005600","attachments":[{"fallback":"GitHub: golang/go","id":1,"title":"golang/go","title_link":"https://github.com/golang/go/blob/3d40895e36e5f16654fa6b75f7fdf59edb18d2e0/src/runtime/asm_arm64.s#L69-L74","text":"The Go programming language. Contribute to golang/go development by creating an account on GitHub.","thumb_url":"https://avatars.githubusercontent.com/u/4314092?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/golang/go/blob/3d40895e36e5f16654fa6b75f7fdf59edb18d2e0/src/runtime/asm_arm64.s#L69-L74","original_url":"https://github.com/golang/go/blob/3d40895e36e5f16654fa6b75f7fdf59edb18d2e0/src/runtime/asm_arm64.s#L69-L74"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0vkl9"}]},{"client_msg_id":"a510e1a2-f72b-445d-8ed3-965a899fecf9","type":"message","user":"UNJ2DANJC","text":"vscode-goはキーワードとしては処理してないのかな\n\u003chttps://github.com/golang/vscode-go/blob/master/syntaxes/go.mod.tmGrammar.json\u003e","ts":"1612695347.004900","attachments":[{"fallback":"GitHub: golang/vscode-go","id":1,"title":"golang/vscode-go","title_link":"https://github.com/golang/vscode-go/blob/master/syntaxes/go.mod.tmGrammar.json","text":"Go extension for VS Code. Contribute to golang/vscode-go development by creating an account on GitHub.","thumb_url":"https://avatars.githubusercontent.com/u/4314092?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/golang/vscode-go/blob/master/syntaxes/go.mod.tmGrammar.json","original_url":"https://github.com/golang/vscode-go/blob/master/syntaxes/go.mod.tmGrammar.json"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dyld4"}]},{"client_msg_id":"cc2d1f22-5dcc-4663-bdf6-aeb0be12b15a","type":"message","user":"UNJ2DANJC","text":"GoLandはretract対応済みか 早いなあ\n\u003chttps://youtrack.jetbrains.com/issue/GO-10323\u003e","ts":"1612693654.004100","attachments":[{"fallback":"YouTrack: Go 1.16: New retract directive in go.mod files : GO-10323","id":1,"title":"Go 1.16: New retract directive in go.mod files : GO-10323","title_link":"https://youtrack.jetbrains.com/issue/GO-10323","text":"As of Go 1.16, a new \"retract\" directive will be available in \"go.mod\" files. This will mark versions that should not be used by users. From the documentation: «The \"retract\" directive comes in two forms:retract v1.0.0 // single version retract [v1.1.0, v1.2.0] // closed interval» The \"go\" directive for specifying a Go version does not seem to matter when using this. E.g. I can have a file like this: module awesomeProject37 go 1.11 retract v1.0.0 // single version retract [v1.1.0, v1.2.0] // closed interval As long as I'm using Go 1.16+ as the SDK. The related to Go issue: \u003chttps://github.com/golang/go/issues/24031\u003e The implementation is done here: \u003chttps://go-review.googlesource.com/c/mod/+/228039\u003e *** A new \"-retracted\" flag is also available for \"go list\", see \u003chttps://go-review.googlesource.com/c/go/+/228382\u003e *** We should also consider notifying users if they use dependencies with retracted versions (that's probably a good separate issue).…","blocks":null,"service_name":"YouTrack","service_icon":"https://youtrack.jetbrains.com/favicon.ico","from_url":"https://youtrack.jetbrains.com/issue/GO-10323","original_url":"https://youtrack.jetbrains.com/issue/GO-10323"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"sEzn"}]},{"client_msg_id":"78ec9b31-da6a-4896-9250-e2a3cae33932","type":"message","user":"U7H4TJEG0","text":"まーじありがとうございますっ","ts":"1612692887.003100","team":"T03C4RC8V","reactions":[{"name":"+1","count":1,"users":["UNJ2DANJC"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"4i83f"}]},{"client_msg_id":"de69b8ce-e9ac-435f-a66c-679d011742e2","type":"message","user":"UNJ2DANJC","text":"そういえば1.16でretractが来るんだっけか","ts":"1612692771.002900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Lmx+"}]},{"client_msg_id":"f86b8f29-6cc7-4727-9b5f-5c84e59b07ed","type":"message","user":"UNJ2DANJC","text":"\u003chttps://github.com/maralla/gomod.vim\u003e","ts":"1612692214.001800","attachments":[{"fallback":"GitHub: maralla/gomod.vim","id":1,"title":"maralla/gomod.vim","title_link":"https://github.com/maralla/gomod.vim","text":"Golang go.mod syntax highlighting. Contribute to maralla/gomod.vim development by creating an account on GitHub.","thumb_url":"https://avatars.githubusercontent.com/u/2238118?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/maralla/gomod.vim","original_url":"https://github.com/maralla/gomod.vim"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1q+6O"}]},{"client_msg_id":"afdcf7b3-d255-4fd5-bc1c-b5410df343e8","type":"message","user":"UNJ2DANJC","text":"実際同じようなことやっている人他にも結構いるのでは","ts":"1612692212.001600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"6DzJ"}]},{"client_msg_id":"a23d41c7-8936-4139-aa01-86a4072cd9b0","type":"message","user":"U7H4TJEG0","text":"\u003chttps://github.com/johejo/gomod.vim\u003e\n\u003chttps://github.com/mattn/vim-gomod\u003e\n増えてる","ts":"1612691649.000700","thread_ts":"1612691649.000700","attachments":[{"fallback":"GitHub: johejo/gomod.vim","id":1,"title":"johejo/gomod.vim","title_link":"https://github.com/johejo/gomod.vim","text":"Vim syntax highlight for go.mod. Contribute to johejo/gomod.vim development by creating an account on GitHub.","thumb_url":"https://avatars.githubusercontent.com/u/25817501?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":133,"thumb_height":133,"from_url":"https://github.com/johejo/gomod.vim","original_url":"https://github.com/johejo/gomod.vim"},{"fallback":"GitHub: mattn/vim-gomod","id":2,"title":"mattn/vim-gomod","title_link":"https://github.com/mattn/vim-gomod","text":"Contribute to mattn/vim-gomod development by creating an account on GitHub.","thumb_url":"https://avatars.githubusercontent.com/u/10111?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/mattn/vim-gomod","original_url":"https://github.com/mattn/vim-gomod"}],"reply_count":1,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"7l6"}]}]
