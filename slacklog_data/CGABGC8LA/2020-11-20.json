[{"type":"message","user":"U01F6FYD13M","text":"\u003c@U01F6FYD13M\u003e has joined the channel","ts":"1605850940.005300","subtype":"channel_join","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"ca0929f2-9927-498b-ae55-46519db282e0","type":"message","user":"UERCTTT8B","text":"int の多倍長整数化は無理そう、やるなら別の言語でやるわ、とのこと","ts":"1605846661.005100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"N0o"}]},{"client_msg_id":"a7e0f455-4f36-468c-ba39-b32be215e6ce","type":"message","user":"UERCTTT8B","text":"\u003chttps://github.com/golang/go/issues/19623#issuecomment-730603684\u003e","ts":"1605846640.004500","attachments":[{"fallback":"GitHub: proposal: spec: change int to be arbitrary precision · Issue #19623 · golang/go","id":1,"title":"proposal: spec: change int to be arbitrary precision · Issue #19623 · golang/go","title_link":"https://github.com/golang/go/issues/19623#issuecomment-730603684","text":"An idea that has been kicking around for years, but never written down: The current definition of int (and correspondingly uint) is that it is either 32 or 64 bits. This causes a variety of problem...","thumb_url":"https://avatars3.githubusercontent.com/u/4314092?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/golang/go/issues/19623#issuecomment-730603684","original_url":"https://github.com/golang/go/issues/19623#issuecomment-730603684"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"3+3z"}]},{"client_msg_id":"5bcf1b73-67fc-424d-9b44-49af0cb52803","type":"message","user":"UERCTTT8B","text":"大抵の場合は並行かつ並列であるが、片方だけのケースも少なからずある、という記述があると親切かなあとおもいました","ts":"1605836895.003900","thread_ts":"1605833871.000400","subtype":"thread_broadcast","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rsD"}],"root":{"client_msg_id":"ddf5dbe9-1fe9-4a35-90af-9f33d25c5860","type":"message","user":"U06BRP8VD","text":"\u003chttps://twitter.com/kaoriya/status/1329243555924066304\u003e","ts":"1605833871.000400","thread_ts":"1605833871.000400","attachments":[{"fallback":"\u003chttps://twitter.com/kaoriya|@kaoriya\u003e: なんとなく書き下してみた。 \u003chttps://pbs.twimg.com/media/EnJr3BPVEAEO4Zk.png\u003e","id":1,"author_name":"MURAOKA Taro","author_subname":"@kaoriya","author_link":"https://twitter.com/kaoriya/status/1329243555924066304","author_icon":"https://pbs.twimg.com/profile_images/1196794099/avatar_normal.JPEG","text":"なんとなく書き下してみた。 \u003chttps://pbs.twimg.com/media/EnJr3BPVEAEO4Zk.png\u003e","image_url":"https://pbs.twimg.com/media/EnJr3BPVEAEO4Zk.png","blocks":null,"footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png","ts":1605751334,"service_name":"twitter","from_url":"https://twitter.com/kaoriya/status/1329243555924066304","original_url":"https://twitter.com/kaoriya/status/1329243555924066304"}],"reply_count":2,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"HQJsr"}]}},{"client_msg_id":"0ca919fa-d7e3-4724-ba76-668cd4d86b26","type":"message","user":"U03C6TEAZ","text":"処理系やイディオムの話をコンテキストにすると必ず議論になるし分からなくなりますよね。","ts":"1605836824.003400","team":"T03C4RC8V","reactions":[{"name":"desune","count":1,"users":["UGXMRNBUM"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=2H"}]},{"client_msg_id":"35dfe91e-017e-478e-90e0-326d5386a719","type":"message","user":"UGXMRNBUM","text":"\u003chttps://blog.kaakaa.dev/posts/concurrent_parallel/\u003e\n概念レベルでわからなくなったときはここのまとめを読むようにしてるんですが、\nで、実際どうなんだっけ？ってなるので","ts":"1605833975.002000","attachments":[{"fallback":"ConcurrentとParallel","id":1,"title":"ConcurrentとParallel","title_link":"https://blog.kaakaa.dev/posts/concurrent_parallel/","text":"はじめに O’Reilly Japan - Go言語による並行処理 を読んでいると、気になるフレーズが出てきました。 「並行性はコードの性質を指し、並列性は動作しているプログ","thumb_url":"https://blog.kaakaa.dev/images/avatar.png","blocks":null,"service_name":"blog.kaakaa.dev","thumb_width":460,"thumb_height":460,"from_url":"https://blog.kaakaa.dev/posts/concurrent_parallel/","original_url":"https://blog.kaakaa.dev/posts/concurrent_parallel/"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"+7ok"}]},{"client_msg_id":"ab1b0424-2ca8-4dd1-b4ea-f3371281f5c9","type":"message","user":"UGXMRNBUM","text":"KoRoNさんが解説するときはいつも実益と言うか、\n効果側の視点というか、中身の話に言及されてて助かります","ts":"1605833955.001600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"+tT"}]},{"client_msg_id":"5e150677-34ad-45e2-8e61-d7f5bf8641a9","type":"message","user":"U06BRP8VD","text":"↑比較的真面目版","ts":"1605833886.000900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"b1S"}]},{"client_msg_id":"ddf5dbe9-1fe9-4a35-90af-9f33d25c5860","type":"message","user":"U06BRP8VD","text":"\u003chttps://twitter.com/kaoriya/status/1329243555924066304\u003e","ts":"1605833871.000400","thread_ts":"1605833871.000400","attachments":[{"fallback":"\u003chttps://twitter.com/kaoriya|@kaoriya\u003e: なんとなく書き下してみた。 \u003chttps://pbs.twimg.com/media/EnJr3BPVEAEO4Zk.png\u003e","id":1,"author_name":"MURAOKA Taro","author_subname":"@kaoriya","author_link":"https://twitter.com/kaoriya/status/1329243555924066304","author_icon":"https://pbs.twimg.com/profile_images/1196794099/avatar_normal.JPEG","text":"なんとなく書き下してみた。 \u003chttps://pbs.twimg.com/media/EnJr3BPVEAEO4Zk.png\u003e","image_url":"https://pbs.twimg.com/media/EnJr3BPVEAEO4Zk.png","blocks":null,"footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png","ts":1605751334,"service_name":"twitter","from_url":"https://twitter.com/kaoriya/status/1329243555924066304","original_url":"https://twitter.com/kaoriya/status/1329243555924066304"}],"reply_count":2,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"HQJsr"}]},{"client_msg_id":"2b634944-dda0-4a3d-83b8-73f35ba97293","type":"message","user":"UGXMRNBUM","text":"concurrent/parallelはシンプルに説明されると大いに誤解してしまう…","ts":"1605833298.499600","team":"T03C4RC8V","reactions":[{"name":"sorena","count":1,"users":["U06BRP8VD"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"kUN3"}]},{"client_msg_id":"b86fe6c8-1284-4ded-8ea0-16d56e8b75b6","type":"message","user":"UNJ2DANJC","text":"ループぶん回すときとかついつい考えてしまう\nそんなこと気にするよりさっさとコードをかけと言われればそれまでなんだけど...","ts":"1605804616.497100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"eH/Jq"}]},{"client_msg_id":"9f92fd24-7a8b-49dd-8e54-431871c55301","type":"message","user":"UNJ2DANJC","text":"runtimeが賢いとコメントしづらいですね。\nコンパイラの最適化云々も安易にコメントすると外したりするので裏がしっかりとれるまで濁してしまう。\n（たぶん）ヒープに乗ってる構造体の一部のプロパティを関数内で参照用にローカル変数（たぶんスタック）にいったんコピーしたほうが良いとか気にせんでもいいとか","ts":"1605804412.495400","edited":{"user":"UNJ2DANJC","ts":"1605804648.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0rkch"}]},{"client_msg_id":"c5be9db3-2394-4f03-81e6-0cd6a766cb23","type":"message","user":"U03C6TEAZ","text":"今だとメモリアロケーションのタイミングで OS スレッドをスイッチしたりもする。","ts":"1605803784.489100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"KcB"}]},{"client_msg_id":"b19f1e53-3eb3-41c0-8345-a54affcf6a25","type":"message","user":"U03C6TEAZ","text":"goroutine はこの辺の定義をぶち壊す様な事をやってるので説明が辛い。","ts":"1605803745.488700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"gQxzv"}]},{"client_msg_id":"c9afdf8e-3c82-455a-8e0a-cb31798debb7","type":"message","user":"UNJ2DANJC","text":"CPUレベルでいうとパイプラインもあるしなあ\n定義がだいたい揉める","ts":"1605803246.486400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"WohU+"}]},{"client_msg_id":"b53e4fff-a946-4473-82a0-329671bd3f8f","type":"message","user":"UERCTTT8B","text":"うーん厳密性には欠けますね","ts":"1605799446.484600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Iq3i"}]},{"client_msg_id":"3950af83-b678-49bd-bc1e-70ea92e1b127","type":"message","user":"U03C6TEAZ","text":"concurrent と parallel の分かりやすい図だ。\n\n\u003chttps://joearms.github.io/published/2013-04-05-concurrent-and-parallel-programming.html\u003e","ts":"1605799134.484300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1qbt"}]},{"client_msg_id":"8cc4ad64-ff2c-44e6-87a8-acc756aea41b","type":"message","user":"U06BRP8VD","text":"んーなんかここに書いたコンテキストでそれ書くのは違うなって思います。","ts":"1605836985.004200","thread_ts":"1605833871.000400","parent_user_id":"U06BRP8VD","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Fgn"}]}]
