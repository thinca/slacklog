[{"client_msg_id":"d6a5a22e-0616-4045-9d5a-50d079254aa7","type":"message","user":"UNJ2DANJC","text":"そもそもデフォルトのproxy.golang.orgがむっちゃ速いので高速化のために自前で立てる意味はあんまりなさそうですね。\nデカイJenkinsのクラスタとかを自前運用してるとことかならトラフィック抑えるために使ったりするんかなと思いましたが。","ts":"1570289082.238500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"fa199557-72f6-4c0b-aa73-c5045a9994e7","type":"message","user":"U03C6TEAZ","text":"あー、なるほど。通常は go mod はキャッシュされるけど docker とかだと揮発するので取り直しになりますね。","ts":"1570289284.239400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7dd7d677-4d14-4234-bbc7-ca1b613b5306","type":"message","user":"UNJ2DANJC","text":"サイドカー的にathensを起動しといてキャッシュしてもらえればdocker buildだろうとホストマシン上のgo buildだろうとGOPATH/pkgを気にせず速くなるかなと思ってAzure Pipelines上で試してみましたが速くはならず。。。\nどうやらstorageへの負荷が結構高いみたいです。storageをinmemoryとtmpfsを両方試してみましたが、初回のgo getが遅い。。。\n使い捨て用途ではないみたいですね。。。","ts":"1570290926.243000","files":[{"id":"FP580LQQ6","created":1570290925,"timestamp":1570290925,"name":"Screenshot from 2019-10-06 00-53-16.png","title":"Screenshot from 2019-10-06 00-53-16.png","mimetype":"image/png","image_exif_rotation":1,"filetype":"png","pretty_type":"PNG","user":"UNJ2DANJC","mode":"hosted","editable":false,"is_external":false,"external_type":"","size":25324,"url":"","url_download":"","url_private":"https://files.slack.com/files-pri/T03C4RC8V-FP580LQQ6/screenshot_from_2019-10-06_00-53-16.png","url_private_download":"https://files.slack.com/files-pri/T03C4RC8V-FP580LQQ6/download/screenshot_from_2019-10-06_00-53-16.png","original_h":401,"original_w":676,"thumb_64":"https://files.slack.com/files-tmb/T03C4RC8V-FP580LQQ6-e89e654a21/screenshot_from_2019-10-06_00-53-16_64.png","thumb_80":"https://files.slack.com/files-tmb/T03C4RC8V-FP580LQQ6-e89e654a21/screenshot_from_2019-10-06_00-53-16_80.png","thumb_160":"https://files.slack.com/files-tmb/T03C4RC8V-FP580LQQ6-e89e654a21/screenshot_from_2019-10-06_00-53-16_160.png","thumb_360":"https://files.slack.com/files-tmb/T03C4RC8V-FP580LQQ6-e89e654a21/screenshot_from_2019-10-06_00-53-16_360.png","thumb_360_gif":"","thumb_360_w":360,"thumb_360_h":214,"thumb_480":"https://files.slack.com/files-tmb/T03C4RC8V-FP580LQQ6-e89e654a21/screenshot_from_2019-10-06_00-53-16_480.png","thumb_480_w":480,"thumb_480_h":285,"thumb_720":"","thumb_720_w":0,"thumb_720_h":0,"thumb_960":"","thumb_960_w":0,"thumb_960_h":0,"thumb_1024":"","thumb_1024_w":0,"thumb_1024_h":0,"permalink":"https://vim-jp.slack.com/files/UNJ2DANJC/FP580LQQ6/screenshot_from_2019-10-06_00-53-16.png","permalink_public":"https://slack-files.com/T03C4RC8V-FP580LQQ6-47672203fd","edit_link":"","preview":"","preview_highlight":"","lines":0,"lines_more":0,"is_public":true,"public_url_shared":false,"channels":null,"groups":null,"ims":null,"initial_comment":{},"comments_count":0,"num_stars":0,"is_starred":false,"shares":{"public":null,"private":null},"display_as_bot":false,"has_rich_preview":false,"thumb_tiny":"AwAcADDR/CgHP8J/KnCigBO3SkJA9fypT9KX86AG5HofypR1pfxo70AJ2pM/7JpaKAEz7GnCkooAWjvSUtAH/9k=","username":""}],"upload":true,"replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"88b240b6-ddc9-4844-8b88-eba20ce83ab9","type":"message","user":"U03C90T1L","text":"<http://kamichidu.hatenablog.com/entry/2019/10/03/103702>","ts":"1570332488.243400","attachments":[{"fallback":"なるはやで いい感じの 動作確認: 開発時にdockerを使ってmavenをいい感じに動かす - なるはやで いい感じの 動作確認","id":1,"title":"開発時にdockerを使ってmavenをいい感じに動かす - なるはやで いい感じの 動作確認","title_link":"http://kamichidu.hatenablog.com/entry/2019/10/03/103702","text":"dockerを使ってJavaの開発しているとき、時折docker buildの遅さが気になる。 遅さというのは、ほぼ mvn package 実行時の依存解決にかかる時間に対して言っています。 というのも、例えば以下のようなDockerfileがあったとき # Dockerfile FROM maven:3.6.2-jdk-13 as builder COPY . /usr/src/ WORKDIR /usr/src/ RUN mvn -B package FROM openjdk:13-alpine COPY --from=builder /usr/src/target/example-1.…","image_url":"https://ogimage.blog.st-hatena.com/8599973812317846885/26006613444058334/1570067410","blocks":null,"ts":1570066622,"service_name":"なるはやで いい感じの 動作確認","service_icon":"https://cdn.blog.st-hatena.com/images/touch-icon-iphone-retina.png","from_url":"http://kamichidu.hatenablog.com/entry/2019/10/03/103702","original_url":"http://kamichidu.hatenablog.com/entry/2019/10/03/103702"}],"team":"T03C4RC8V","reactions":[{"name":"eyes","count":1,"users":["UNJ2DANJC"]}],"replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"00347486-d851-4124-92dc-cb98830c0265","type":"message","user":"U03C90T1L","text":"私はこんな感じで高速化してます","ts":"1570332504.244100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"3d436873-f7ac-41cd-bad9-0311391677b2","type":"message","user":"U03C90T1L","text":"docker build --from-cacheという手もあります","ts":"1570332518.244600","edited":{"user":"U03C90T1L","ts":"1570332524.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"984d89aa-0bc9-4ab2-ba80-8138267e0fa5","type":"message","user":"U03C90T1L","text":"↑の記事はjavaのmavenを対象にしてますけど、go modulesの動きも近いからそのまま応用可能です","ts":"1570332599.246000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"}]
