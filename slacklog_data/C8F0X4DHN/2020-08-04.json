[{"client_msg_id":"62841941-ed8b-417b-81f1-c0a571c891a9","type":"message","user":"U776661HA","text":"Async.Promise を非同期のまま直列実行するための関数追加PR出しました。\nPromiseなので犬さんをレビュワーに当てていますが、それ以外の方もレビューしていただけると助かります。\n<https://github.com/vim-jp/vital.vim/pull/752>","ts":"1596546221.242100","attachments":[{"fallback":"GitHub: Async.Promise: Add \"chain\" function by lambdalisue · Pull Request #752 · vim-jp/vital.vim","id":1,"title":"Async.Promise: Add \"chain\" function by lambdalisue · Pull Request #752 · vim-jp/vital.vim","title_link":"https://github.com/vim-jp/vital.vim/pull/752","text":"Vim does not have async/await syntax support thus it&amp;#39;s a bit tough work to write similar function as below (js) async for(const url of urls) { const r = await request(url); ...","thumb_url":"https://avatars2.githubusercontent.com/u/1051958?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/vim-jp/vital.vim/pull/752","original_url":"https://github.com/vim-jp/vital.vim/pull/752"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"l7yJA"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4401df06-59de-49ce-84dd-8b51069c40b2","type":"message","user":"U776661HA","text":"Vim 再起関数何回まで呼べるのかな","ts":"1596546329.242500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"8/t7"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"a18ef33c-3018-4f4d-898f-84a596f0f390","type":"message","user":"U776661HA","text":"なんか他にいい方法あればいいんだけれども...","ts":"1596546356.242800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"wSYqo"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"UPZHKAM7W","text":"<@UPZHKAM7W> has joined the channel","ts":"1596546433.243300","subtype":"channel_join","inviter":"U9S4G0LJW","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"4930cba3-4fdc-48aa-aba8-97996a48861e","type":"message","user":"U9S4G0LJW","text":":h maxfuncdepth","ts":"1596546439.243500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"U/DRC"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"UPZHKAM7W","text":"```\n                                                *'maxfuncdepth'* *'mfd'*\n'maxfuncdepth' 'mfd'    数値    (既定では 100)\n                        グローバル\n                        {|+eval| 機能付きでコンパイルされたときのみ有効}\n        ユーザー定義関数の関数呼び出しの深さの最大値。これは普通、終わらない再\n        帰呼び出しを捉えるために使われる。関数のさらに深い再帰呼び出しを使うと\n        きは、オプション 'maxfuncdepth' に、さらに大きい値を設定すること。しか\n        しこうするとメモリを余計に消費するので、メモリを使い果たしたときに落ち\n        る危険がある。\n        この制限を200より大きな値に増やした場合、Exコマンドの再帰の最大値も変\n        更される。|E169| 参照。\n        |:function| も参照。\n```","ts":"1596546440.243600","bot_id":"BPM858KEE","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"5dfdba3c-aafc-4fbc-afae-83a35f031b2b","type":"message","user":"U9S4G0LJW","text":"増やしすぎるとSEGVする","ts":"1596546457.243900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"aeA"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7506a85d-294e-49d7-951a-33752f9cc7c9","type":"message","user":"U776661HA","text":"だよなぁ","ts":"1596546594.244300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"DFRfS"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"83595746-c3ad-46ae-b37f-c0e2781cadfa","type":"message","user":"U776661HA","text":"ただ Promise を chain するという性質上仕方ないとも言える","ts":"1596546615.244600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1wNG"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"077e014d-f509-4dd6-8fd4-865dbdc67c02","type":"message","user":"U776661HA","text":"手で書いても関数の再起呼び出しになるわけだしorz","ts":"1596546630.244900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=etlR"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"}]
