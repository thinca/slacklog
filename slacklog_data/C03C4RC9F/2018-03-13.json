[{"type":"message","user":"U03C6TEAZ","text":"NUL 文字扱えるのは正直難しい（いろんな意味で）ので","ts":"1520867300.000722","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C6TEAZ","text":"現実的には channel の io-mode で hex ってのが妥当じゃなかろうか。","ts":"1520867346.000482","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C6TEAZ","text":"今は nl と json だけどこれを F01B みたいな hex 文字として送れる感じ。","ts":"1520867370.000428","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"number のリストとかはどうか","ts":"1520869377.000206","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U0M7GCBPD","text":"number のリスト++","ts":"1520869425.000973","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U0M7GCBPD","text":"それがあればかなり便利そげです","ts":"1520869444.000609","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C6TEAZ","text":"I/O に使うのであればすぐ出来そうだけど。","ts":"1520869503.000786","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C6TEAZ","text":"`writefile_bin({number-list}, {fname})`","ts":"1520869551.000554","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"writefile なら一応頑張れば現状でもバイナリ対応可能。行単位の文字列のリストで、文字列内に改行文字入れておけばそれが NUL になる仕様なので","ts":"1520869692.000826","team":"T03C4RC8V","reactions":[{"name":"subara","count":1,"users":["U0M7GCBPD"]}],"replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C6TEAZ","text":"結局 I/O 以外の何に使うかで実装が変わりそう。","ts":"1520869714.000280","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"バイナリが欲しいのは channel ですかね、たぶん","ts":"1520869715.000499","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"仮に number のリストの対応したとして、全体で外部とバイナリ(というか NUL 文字)をやりとりする方法に一貫性が持たせられないのがつらい","ts":"1520869795.000342","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U0M7GCBPD","text":"バイナリを number のリストで持つ事にしたとして、文字列から number のリストに変換するケース (=完全な変換ができないケース) があるかな","ts":"1520870022.000626","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U0M7GCBPD","text":"自分は今のところ channel でほしいだけだけど、バイナリが欲しいケースは他にもありそう\n<http://tyru.hatenablog.com/entry/2018/02/08/015007>","ts":"1520870059.000282","attachments":[{"fallback":"Humanity: Vim script で Chrome Debugging Protocol を扱うライブラリを作りたい - Humanity","id":1,"title":"Vim script で Chrome Debugging Protocol を扱うライブラリを作りたい - Humanity","title_link":"http://tyru.hatenablog.com/entry/2018/02/08/015007","text":"<http://github.com|github.com> タイトルの通りなのですが、Chrome Debugging Protocol (以下 CDP) を扱うためには、 CDP は WebSocket ベースなので WebSocket を実装しなきゃならない バイト列をパースする際にヌルバイトを Vim では扱えない となって悩んでいます。 ヌルバイトを扱う部分は Python/Ruby/Lua インターフェースを使ったり、外部コマンドでやったりと策がないわけではないのですが、 どうせなら Vim で扱う方法を考えてみようというわけです。 CDP を実装しようとしたきっかけ Chrome を (CDP が許す限り) 意のままに…","thumb_url":"https://cdn.blog.st-hatena.com/images/theme/og-image-1500.png","blocks":null,"ts":1518022207,"service_name":"Humanity","service_icon":"https://cdn.blog.st-hatena.com/images/favicon.ico","thumb_width":1500,"thumb_height":1051,"from_url":"http://tyru.hatenablog.com/entry/2018/02/08/015007"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U0M7GCBPD","text":"そういえばバイトオーダーどうするかって話もあった\n<https://github.com/vim-jp/issues/issues/1149>\n↑のは `ch_open()` なのでバイト列のオーダーはネットワークオーダー固定で、Vim のバイトオーダーを知る方法がないって issue だけど、もしバイト列自体のオーダーもバイト列のオブジェクト自体が保存する必要があるならもっとリッチな構造になりそう","ts":"1520870455.000256","attachments":[{"fallback":"GitHub: Vim script で CPU のエンディアンを取得する方法 · Issue #1149 · vim-jp/issues","id":1,"title":"Vim script で CPU のエンディアンを取得する方法 · Issue #1149 · vim-jp/issues","title_link":"https://github.com/vim-jp/issues/issues/1149","text":"質問・報告の内容 ch_open() でソケット通信を行う時に以下のいずれかの機能が欲しくなりました。 CPU のエンディアンを知る方法 バイト列のバイトオーダーを CPU のエンディアンで扱うオーダーにする方法 どちらかと言えば汎用的な方が他の用途にも使えるので、1番目の方がいいと考えています。 API の一つの案としては、v:byteorder (\"big\" or \"little\")...","thumb_url":"https://avatars2.githubusercontent.com/u/48169?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/bfaba/img/unfurl_icons/github.png","thumb_width":250,"thumb_height":250,"from_url":"https://github.com/vim-jp/issues/issues/1149"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C6TEAZ","text":"プロトコルが決まっているなら CPU のバイトオーダーを知る必要無いのでは。","ts":"1520870602.000944","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U0M7GCBPD","text":"あ、なるほど。文字列にデコードする場合は必要かと思ったんですが、number のリストで持つなら必要ないって話ですかね…？","ts":"1520870754.000471","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U0M7GCBPD","text":"~s/文字列/数値/ でした (多分)~ →間違いでした","ts":"1520870828.000085","edited":{"user":"U0M7GCBPD","ts":"1520871306.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C6TEAZ","text":"number-list の 1 element が byte なら必要ないですし、64bit number をエンコードして I/O したいという話であれば network byte order というプロトコルだけ決まってるなら Vim 側が処理すればいいので呼び出し側が意識する必要はないかと。文字列にするなら必要ですね。","ts":"1520870895.000273","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C6TEAZ","text":"byte array にするなら関数は 0 &lt;= b &lt;= 255 のチェックをするべきでしょうね。","ts":"1520871012.000249","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U0M7GCBPD","text":"ふむ…なるほど\nネットワークプログラミングの経験があまりなくて理解が怪しい…","ts":"1520871038.000426","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U0M7GCBPD","text":"ちなみに文字列って 0 &lt;= b &lt;= 255 の範囲であれば問題ないけど2バイトにまたがるマルチバイト文字とかになった時問題が起こるって理解であってます…？","ts":"1520871247.000172","edited":{"user":"U0M7GCBPD","ts":"1520871338.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ad99a5dd-596f-455d-9fa1-7861ddcecf8d","type":"message","user":"U0M7GCBPD","text":"あ、いや `join(bytes, '')` した時にダメって話なのかな…？（ぐるぐるしてきた）","ts":"1520876179.000064","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C6TEAZ","text":"Vim script 上だと 0x00 を含む文字列は表現出来ないので script 内では [0x33, 0xF1, 0xA5] の様な物を持ちまわるんですが、もしかしたらユーザの入力が [0x1FD] みたいなのかもしれないので、チェックが必要という意味でした。","ts":"1520900516.000256","thread_ts":"1520900516.000256","reply_count":1,"replies":[{"user":"U0M7GCBPD","ts":"1520915013.000115"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U782D5DF1","text":"vimはタブ使わないなぁ。Emacsだと普通に使うのですが何でだろう？","ts":"1520902082.000194","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":"ふむふむ &gt; 0x1FDつまり255以上","ts":"1520902503.000279","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"昔、自分がVimの文字列をbyte配列の代わりにした時、0x00はどう処理したっけなぁ。","ts":"1520903768.000205","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"実は `[0x33, 0xf1, 0xa5]` よりも `\"33F1A5\"` な表現のほうがVim的には効率的だったりしそうw","ts":"1520903896.000213","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"いや実際に効率的だろうな。","ts":"1520903978.000165","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":":tashikani:","ts":"1520904225.000064","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"操作まで想定すると文字列はちょっといじる度に全コピーが走るのが気になるかなぁ。結局何をするか次第な気が","ts":"1520907547.000117","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"あれ文字列って、コピー作らずに部分的に書き換えられなかったっけ? (覚えてない","ts":"1520909401.000161","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"内部はわからないですが Vim script では代入や引数/戻り値の受け渡しだけで文字列全コピーのはず","ts":"1520909440.000126","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"配列に包むと参照コピーになるので巨大な文字列は配列に入れた状態で持ち回るバッドノウハウが存在します","ts":"1520909492.000079","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"…ではバッファを文字列代わりに使うのが一番効率よいのか。確か、ループもバッファをベースにするのが一番速かったって昔の記憶がある。","ts":"1520909544.000056","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"つらすぎる…","ts":"1520909566.000134","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"文字列を扱うテキストエディタのスクリプトで文字列がまともな速度で扱えない現状","ts":"1520909592.000282","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"コピーの問題だけであれば何かしら対応方法は作れると思うけれど。まぁ、元がバイナリを扱うにはって話ですしねw","ts":"1520909656.000240","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"文字列でバイナリ扱おうと思ったらまずは C 形式の文字列から脱却する必要が…大工事になりそう…","ts":"1520909706.000147","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"やっぱここはbyte配列型の導入じゃないですかね。","ts":"1520909754.000227","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"新型の方が現実味ありますねー","ts":"1520909773.000202","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"`b\"hogehoge\"` (適当)","ts":"1520909795.000180","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"互換性壊す心配ないし。","ts":"1520909795.000184","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"byte配列型はちゃんと参照カウントにしてほしい","ts":"1520909839.000157","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"そして文字列の代わりに使われていく… 「文字列なんてなかった」","ts":"1520909854.000100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"参照カウントが良いかはまたアレですが…","ts":"1520909971.000073","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"うーん、しかし巨大になりうる値が、変数間でやりとりしただけで全コピー発生するのはどうにも使いづらいかと…","ts":"1520910015.000243","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"ああ、参照カウント=GCの方法と考えていて、コピー発生の有無とは考えていませんでした。","ts":"1520910060.000153","edited":{"user":"U06BRP8VD","ts":"1520910086.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"既存の List や Dictionary と同様に、参照値で持ち回りたい的な意味でした","ts":"1520910099.000153","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"ラジャラジャ","ts":"1520910108.000109","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"List や Dict は参照カウントだったはず","ts":"1520910110.000139","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"CoW だと良いですよねぇ。","ts":"1520910119.000273","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"ので、まあ必然的に同じになるかな、くらいのアレ","ts":"1520910120.000132","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"もしくはgolangの配列+スライスの概念か。罠多いけど。","ts":"1520910138.000008","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"CoW よさ","ts":"1520910138.000036","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":"CoW良さ","ts":"1520910153.000231","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":":cow:","ts":"1520910166.000188","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"スライスは使う前にしっかり理解していないと罠踏みそう","ts":"1520910179.000239","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"速さ+簡潔さ求めるなら配列+スライスが良さそう。罠踏みたくなきゃ文字列でガンバレみたいな。","ts":"1520910201.000080","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"Go みたいに低レイヤ寄りの言語なら良さそうだけど LL 寄りだとあまりしっくり来ない気も","ts":"1520910240.000257","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"速さ求めると低レイヤにならざるを得ないと考えているんですよね。で、だったら半端なことするよりも振り切っても良いかなと。","ts":"1520910311.000020","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"あとは文字列をコピーせずに中身を書き換える関数があってもよいのか。","ts":"1520910324.000089","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":"Vim scriptはLLか低レイヤか問題","ts":"1520910341.000210","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":"Low level or low layer","ts":"1520910353.000016","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"Lightweight Language ではなかった","ts":"1520910372.000275","team":"T03C4RC8V","reactions":[{"name":"kiokuryoku","count":2,"users":["U03C4RC8X","U8CC7MDCL"]}],"replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":"lightweight languageだった・・・","ts":"1520910381.000164","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"あー文字列型って長さ持ってねぇのかw (ソース眺めてた)","ts":"1520910396.000118","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":"まさにC","ts":"1520910405.000139","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"ですです。Cの文字列そのまんま","ts":"1520910412.000199","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":"りゃくしてまさしですね","ts":"1520910424.000191","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"いやね。 `set_string(s, 12, 'a')` みたいなのを許すとしても、境界チェックくらいすべきだろって考えて毎回 strlen() はねぇよなぁ…みたいなw","ts":"1520910473.000198","edited":{"user":"U06BRP8VD","ts":"1520910526.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"リストに至っては双方向連結リストだしなぁ。","ts":"1520910507.000020","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"ランダムアクセスに弱い","ts":"1520910518.000135","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"なんか…既存の文字列を、CoW的なやつで置き換えるというのが現実的な気がしてきた。","ts":"1520910616.000197","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"`v_string` で grep して使用箇所を全て直していく作業","ts":"1520910649.000013","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"294 箇所","ts":"1520910660.000091","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"ここもう char_u じゃなくて string_T にして len とかも持たせると良さそう","ts":"1520910687.000115","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"そうそう","ts":"1520910694.000033","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"しかしあちこちで直接 strcpy とかしていた気がして直すのすごいつらそう","ts":"1520910708.000112","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"で、CoWに対応して、参照カウンタかなにかにする。","ts":"1520910708.000183","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"いやそれはstring_Tのメソッド相当の関数作れば良いだけなんじゃないかな。","ts":"1520910732.000146","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"ですね。1つずつ置き換えていく…","ts":"1520910743.000071","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"差分やばいことになりそうなのでまずは Bram さんに提案して、方針 OK もらってからやるのが確実そう","ts":"1520910769.000014","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"あとは…誰がやるねん","ts":"1520910777.000251","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"たぶん `v_string` 使ってる場所を、 `get_strptr(v_string)` みたいにするだけで動く、ってところまではできそう。そっから本来なら入らないコピーの部分を潰して、速度測ってみたいなことするんがよさげ。","ts":"1520910829.000191","edited":{"user":"U06BRP8VD","ts":"1520910843.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"実は len をもたせることによって既存の文字列型が NUL を持つことが可能になり(バッファで使ってるデータとの互換考えると完全じゃないだろうけど)、バイナリの問題もそこそこ解決しそう","ts":"1520910891.000019","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"代表的なスクリプトでコピーにかかってるオーバーヘッドを測って、効果が示せれば説得材料にはなりそう。","ts":"1520910935.000113","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"良さそう","ts":"1520910942.000068","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C71D7H","text":"あとは外部インターフェースとかがめんどそうだな…やることは同じだと思うけど","ts":"1520910958.000182","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U06BRP8VD","text":"`v_string` を左辺値で使ってるところがいくらかあるな。そこがキモか。","ts":"1520910998.000048","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":"移行期間中旧形式と新形式両方混在できればいいわけか","ts":"1520911089.000120","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4a775704-7812-40fc-906a-b4a46eef3681","type":"message","user":"U0M7GCBPD","text":"なるほどです","ts":"1520915013.000115","thread_ts":"1520900516.000256","parent_user_id":"U03C6TEAZ","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"eb2c32f2-8996-4b7b-9bf2-5e130348c2f5","type":"message","user":"U0M7GCBPD","text":"string_T + CoW よさ","ts":"1520915585.000068","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U8CC7MDCL","text":":cow2:","ts":"1520917406.000076","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":"<https://twitter.com/pomeranian99/status/973022871311257601> :benri: そう","ts":"1520920116.000172","attachments":[{"fallback":"<https://twitter.com/pomeranian99|@pomeranian99>: The \"Vim Clutch\": A USB footpedal that connects to Vim and toggles you in and out of \"insert\" mode -- <https://github.com/alevchuk/vim-clutch> (Paging vim fans of my acquaintance; <https://twitter.com/saronyitbarek|@saronyitbarek> you're still a Vim person?) <https://pbs.twimg.com/media/DYDfHueXcAE7PhL.jpg>","id":1,"author_name":"Clive Thompson","author_subname":"@pomeranian99","author_link":"https://twitter.com/pomeranian99/status/973022871311257601","author_icon":"https://pbs.twimg.com/profile_images/378800000407595163/163d76384315dfd651daa13e44b724e4_normal.jpeg","text":"The \"Vim Clutch\": A USB footpedal that connects to Vim and toggles you in and out of \"insert\" mode -- <https://github.com/alevchuk/vim-clutch> (Paging vim fans of my acquaintance; <https://twitter.com/saronyitbarek|@saronyitbarek> you're still a Vim person?) <https://pbs.twimg.com/media/DYDfHueXcAE7PhL.jpg>","image_url":"https://pbs.twimg.com/media/DYDfHueXcAE7PhL.jpg","blocks":null,"footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png","ts":1520821705,"service_name":"twitter","from_url":"https://twitter.com/pomeranian99/status/973022871311257601"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U7986PPFH","text":"ユーザコマンドの定義で、 `-nargs=0` かつ `-complete=` に何か設定するのは意味ないですか？","ts":"1520920126.000161","edited":{"user":"U7986PPFH","ts":"1520920138.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U03C4RC8X","text":"なさそう <https://emoji.slack-edge.com/T024TE4C9/nasasou/0cc3da7e0b090491.png>","ts":"1520920204.000014","attachments":[{"fallback":"128x128px image","id":1,"image_url":"https://emoji.slack-edge.com/T024TE4C9/nasasou/0cc3da7e0b090491.png","blocks":null,"from_url":"https://emoji.slack-edge.com/T024TE4C9/nasasou/0cc3da7e0b090491.png"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U7986PPFH","text":"<https://github.com/vim/vim/blob/master/src/testdir/test_usercommands.vim#L187-L193>","ts":"1520920477.000010","attachments":[{"fallback":"GitHub: vim/vim","id":1,"title":"vim/vim","title_link":"https://github.com/vim/vim/blob/master/src/testdir/test_usercommands.vim#L187-L193","text":"vim - The official Vim repository","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/bfaba/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/blob/master/src/testdir/test_usercommands.vim#L187-L193"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U7986PPFH","text":"すると、 `:com -complete=(何か) DoCmd :` で定義したコマンドの引数部分で `&lt;C-A&gt;` や `&lt;C-D&gt;` した時に候補が出るのは動作としておかしいですかね？","ts":"1520920663.000219","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"}]
