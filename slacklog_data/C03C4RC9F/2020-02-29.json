[{"client_msg_id":"EFF59527-D99B-4A1F-B0FC-1D5E5F85F2DF","type":"message","user":"UBQ2H65JQ","text":"Github ActionsでWindowsのVimビルドも簡単でいいね。","ts":"1582978467.261100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"NPYX"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"USLACKBOT","text":"Reminder: vimrc読書会はじまるのでは <https://gitter.im/vim-jp/reading-vimrc>","ts":"1582984230.261200","attachments":[{"fallback":"vim-jp/reading-vimrc","id":1,"title":"vim-jp/reading-vimrc","title_link":"https://gitter.im/vim-jp/reading-vimrc","text":"vimrc読書会 <http://vim-jp.org/reading-vimrc/>","thumb_url":"https://avatars-02.gitter.im/group/iv/4/57542c13c43b8c601976faa9","blocks":null,"service_name":"gitter.im","service_icon":"http://cdn03.gitter.im/_s/c1769f9d9/images/favicon-normal.ico","thumb_width":128,"thumb_height":128,"from_url":"https://gitter.im/vim-jp/reading-vimrc","original_url":"https://gitter.im/vim-jp/reading-vimrc"}],"edited":{"user":"B01","ts":"1582984232.000000"},"bot_id":"B01","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"84a495d3-ca01-4b8d-a349-308ecff8bebf","type":"message","user":"UAZ33BKV2","text":"いまだとreplaeで繋げる、もあるので、だいぶ楽できそう?","ts":"1582902019.248200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"yjAcC"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"b3bdaf05-859e-4d35-ac4a-f03f1c13a731","type":"message","user":"U03C6TEAZ","text":"<https://vim.blue/vim-command-run/|https://vim.blue/vim-command-run/>","ts":"1582934799.248700","attachments":[{"fallback":"Vim入門: [Vim問題] VimからOSコマンドを直接実行する方法は何通り？","id":1,"title":"[Vim問題] VimからOSコマンドを直接実行する方法は何通り？","title_link":"https://vim.blue/vim-command-run/","text":"この記事では、Vimでプラグインを使わずに「OSコマンドを直接実行する」ためのコマンドについて、ご紹介します。","image_url":"https://vim.blue/wp-content/uploads/2019/07/eyecatch-vim-command-run.png","blocks":null,"ts":1563721220,"service_name":"Vim入門","service_icon":"https://vim.blue/wp-content/uploads/2019/04/site_icon-200x200.png","from_url":"https://vim.blue/vim-command-run/","original_url":"https://vim.blue/vim-command-run/"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"cBR"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"882f0623-2684-4ae2-8ff3-a8d3d203e970","type":"message","user":"U03C6TEAZ","text":":py などを OS コマンドと一緒にするのはまずそう。","ts":"1582934832.249700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"KuSlP"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"81bb30cc-2fc0-404b-bb5c-3ab9ad439803","type":"message","user":"U03C6TEAZ","text":"(スクリプトで宣言した変数や関数は vim 内に保持されてしまうので)","ts":"1582934944.251200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"g9q"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c1b59fa6-516b-4e48-b373-006a2d18b8dc","type":"message","user":"U6XP9LZ6V","text":"`system()` とか `job_start()` がない","ts":"1582935146.252100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"pFC"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"be2b8f47-f570-4d8a-bcff-aadb21d7afe1","type":"message","user":"U03C6TEAZ","text":"あと\n```\n:e `xxx`\n```\nというのもありますね。","ts":"1582935339.253100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"kyXE="}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ddfa37fd-9ee2-4a44-911e-1b4aac550895","type":"message","user":"UDDCM376D","text":"&gt; 他にもいくつか似たようなコマンドがあり、部分的にOSコマンドを実行したのと同じ効果が得られます。\nって書いてあるから、大丈夫そうな","ts":"1582940215.254700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"eh="}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"59fb0728-1f7e-4466-9b50-ef18b4f81695","type":"message","user":"U03C6TEAZ","text":"だとすると2つと限定しない方が良かったかも。","ts":"1582940460.255300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"wwPws"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ddc5bfc0-4804-4620-a519-23aa82cc048c","type":"message","user":"U03C6TEAZ","text":"まぁ細かいっちゃぁ細かいな。この紹介を見て `:py` が外部コマンドの様に扱えると思う人がいなければいいなと思う程度の老婆心です。","ts":"1582941450.256700","team":"T03C4RC8V","reactions":[{"name":"+1","count":1,"users":["UDDCM376D"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"vfu7j"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"747e2c89-c16a-4f3a-9174-ab5157c00ef2","type":"message","user":"UAZ33BKV2","text":"if_xxxのsystem()相当の機能も含めると多そう","ts":"1582941645.257100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"a7Gy2"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ac518b70-3b68-456a-a981-2fe4c6ffb7c6","type":"message","user":"U03C6TEAZ","text":"`:py` が外部コマンドとして扱えると思ってしまうと適当なネームスペースとか変数名を付けてしまうんですよね。","ts":"1582941690.257800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"l3Sj"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e81c3e6e-7814-490c-b8e3-13387da73cf7","type":"message","user":"U03C6TEAZ","text":"`:pyfile foo.py` と `:pyfile bar.py` で同じ関数名を宣言してたらバッティングする。","ts":"1582941733.258900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"nnss"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"9af3391f-2780-4d12-ac2d-579cbc408aba","type":"message","user":"UBNPMJJGM","text":"<https://github.com/Arkweid/lefthook|https://github.com/Arkweid/lefthook> で解決できる気がしますが別途ツールは導入したくない感じですかね？","ts":"1582960216.259200","thread_ts":"1582900375.240700","attachments":[{"fallback":"GitHub: Arkweid/lefthook","id":1,"title":"Arkweid/lefthook","title_link":"https://github.com/Arkweid/lefthook","text":"Fast and powerful Git hooks manager for any type of projects. - Arkweid/lefthook","thumb_url":"https://repository-images.githubusercontent.com/169250119/0bf8ef80-96c8-11e9-98c4-5c275172132d","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":500,"thumb_height":250,"from_url":"https://github.com/Arkweid/lefthook","original_url":"https://github.com/Arkweid/lefthook"}],"subtype":"thread_broadcast","reactions":[{"name":"eyes","count":1,"users":["U7B4ZD49X"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rFeZ7"}],"root":{"client_msg_id":"7469e7d2-aacc-4848-9eea-4a7f2aa9a385","type":"message","user":"U7B4ZD49X","text":"いつかできると思ってたけど、未だにgitのコミットメッセージの規約チェックがうまいこと管理できないのはなぜなんだろう・・・\npre-commitをリポジトリごとに格納して.git/hookにclone時に自動的に入れてくれればいいだけなんですけど。\n今の所解としては、\n1. ~/.gitconfig の [init]でテンプレートにしてhookを自動格納する\n2.  cloneしたあとに `git config core.hooksPath .githooks` して設定する\nとかしかないように思われる。。。\n\nただ単にdotfilesのコミットにthincaスタイルでプレフィックスをつけることにしたんですが、忘れまくるんでワーニング出してほしいだけなんですけどね・・・","ts":"1582900375.240700","thread_ts":"1582900375.240700","reply_count":1,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"iTDX"}]}},{"client_msg_id":"2fee27a8-fd09-4b1a-b47a-3c03cfd5420e","type":"message","user":"U7B4ZD49X","text":"お、知らないツールです。試してみます。ありがとうございます。","ts":"1582960669.259600","team":"T03C4RC8V","reactions":[{"name":"+1","count":1,"users":["UBNPMJJGM"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Gps"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"}]
