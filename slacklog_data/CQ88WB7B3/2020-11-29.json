[{"client_msg_id":"163538f5-ffcd-426f-a333-b65338fa6a4a","type":"message","user":"U01BY3SDBRS","text":"後はwasmだとjsのpackageにして配布しないといけないのでどっちみちバイナリを配布するのと工数ややることが同じ、というのもあります","ts":"1606648650.238300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"+BzU"}]},{"client_msg_id":"fc3b46e3-6d5d-4ab0-a6d8-68f50217d947","type":"message","user":"U01BY3SDBRS","text":"個人的にやりたかったのが 「deinのtomlのformatやvalidation」で、cocの後はvim-lspとかでも実装して頒布したい、というモチベだったので","ts":"1606648447.235000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"gsvxI"}]},{"client_msg_id":"190d5175-f9d4-48a6-bb5f-284022010a6d","type":"message","user":"U01BY3SDBRS","text":"本家の方はwasmでコンパイルしたものを挟んでいるんです\nそれではじめ(というか今のcoc-tomlのmaster)は同じやり方をしようと思っていたんですが、\ntamasfeさんが「vimとかに使うならstdioな方がいいよね」って事で\n「どうしたらいいんすかね?このままだとwasm専用っすよね、直したいけど自分がRustクソ初心者でわからないっす」\nとissueで会話をしていたら最終的にstandaloneなやつを作ってくれた、という感じです","ts":"1606648329.233200","edited":{"user":"U01BY3SDBRS","ts":"1606648847.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"nqK"}]},{"client_msg_id":"8ad0f9ff-7a2f-4a05-9b8f-f3157b63f450","type":"message","user":"U8R597E9H","text":"でも冷静に考えるとどうやって。。。？って感じですね。（rust 製のはずなのに。。。）","ts":"1606646240.229100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"lmzm"}]},{"client_msg_id":"d32cae1d-6f65-4e8f-bde4-e6fb800b611c","type":"message","user":"U8R597E9H","text":"taplo の VSCode の拡張は node-ipc でつなげてるみたいですね。\n\u003chttps://github.com/tamasfe/taplo/blob/master/js/vscode/src/extension.ts\u003e","ts":"1606646175.228500","attachments":[{"fallback":"GitHub: tamasfe/taplo","id":1,"title":"tamasfe/taplo","title_link":"https://github.com/tamasfe/taplo/blob/master/js/vscode/src/extension.ts","text":"A TOML parser and analyzer library written in Rust - tamasfe/taplo","thumb_url":"https://avatars0.githubusercontent.com/u/25967296?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/tamasfe/taplo/blob/master/js/vscode/src/extension.ts","original_url":"https://github.com/tamasfe/taplo/blob/master/js/vscode/src/extension.ts"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"QeU3"}]},{"client_msg_id":"4bb49a92-94ec-48db-954d-1f120628ff6c","type":"message","user":"U8R597E9H","text":"かなり目を凝らして見ましたが、おかしそうなところは見当たりませんでした。。。","ts":"1606646045.228000","team":"T03C4RC8V","reactions":[{"name":"heart","count":1,"users":["U01BY3SDBRS"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"aSN"}]},{"client_msg_id":"352a37e9-9d0b-4e92-8cce-d34649905efe","type":"message","user":"U8R597E9H","text":"りかいです。ちょっとあとでもう一度目グレップしてみます","ts":"1606642137.227500","team":"T03C4RC8V","reactions":[{"name":"heart","count":1,"users":["U01BY3SDBRS"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"5iSoT"}]},{"client_msg_id":"d9f89acf-d53e-43c5-ac4f-b696c944b993","type":"message","user":"U01BY3SDBRS","text":"cocのreleaseブランチを引っ張っていてそれをmasterにするよりも早かったので、結果的にアンダースコアの方で試しました(ズルしてすみません)","ts":"1606641505.226000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"24i"}]},{"client_msg_id":"bcbdb00d-fb77-4ec9-a0bc-c54820036d38","type":"message","user":"U8R597E9H","text":"(T_T)\n別原因なのかもしれないですね…。coc を更新しても駄目だったということですよね？(master ブランチ側でしょうか？)","ts":"1606640985.225800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Fx/"}]},{"client_msg_id":"f78c5b35-9f49-4188-8786-94e7a8cfee0e","type":"message","user":"U01BY3SDBRS","text":"だめでした・・・ 一応もう少し試してみます","ts":"1606640571.224500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"V2HF"}]},{"client_msg_id":"2bae22ef-a9e0-4c6f-b64b-f6e4d5887f9e","type":"message","user":"U8R597E9H","text":"もしくは、チャンネル名をアンダースコアで区切るなどもお手軽かもしれません。","ts":"1606639333.221800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"hrn"}]},{"client_msg_id":"85062090-a5e2-47c9-b920-a4bb13515e21","type":"message","user":"U01BY3SDBRS","text":"ありがとうございます、ちょっと更新して再度試してみます！","ts":"1606639316.221400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"x=6G0"}]},{"client_msg_id":"6d7e753a-8f0d-4186-8206-58df64ee3350","type":"message","user":"U8R597E9H","text":"_このコミットメッセージの `channel name` とかいうのが `outputChannel` も含んでいるならそのものずばりっぽいなと_","ts":"1606639239.220700","edited":{"user":"U8R597E9H","ts":"1606639254.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xDBO"}]},{"client_msg_id":"fc2ffdff-aa22-480c-ba7a-38efe0c26e80","type":"message","user":"U8R597E9H","text":"\u003chttps://github.com/kkiyama117/coc-toml/blob/new-taplo/src/client.ts#L55\u003e","ts":"1606639222.220000","attachments":[{"fallback":"GitHub: kkiyama117/coc-toml","id":1,"title":"kkiyama117/coc-toml","title_link":"https://github.com/kkiyama117/coc-toml/blob/new-taplo/src/client.ts#L55","text":"(!Alpha version) Toml extension for coc-nvim using taplo - kkiyama117/coc-toml","thumb_url":"https://avatars0.githubusercontent.com/u/27989936?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":320,"thumb_height":320,"from_url":"https://github.com/kkiyama117/coc-toml/blob/new-taplo/src/client.ts#L55","original_url":"https://github.com/kkiyama117/coc-toml/blob/new-taplo/src/client.ts#L55"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"zLZ5"}]},{"client_msg_id":"2d44ea44-cb47-4723-b31b-96cd80752b94","type":"message","user":"U8R597E9H","text":"\u003chttps://github.com/neoclide/coc.nvim/commit/351404e736f9bc6adef193aa238a900778887f6d\u003e","ts":"1606639208.219300","attachments":[{"fallback":"GitHub: fix(channels): support whitespace in channel name · neoclide/coc.nvim@351404e","id":1,"title":"fix(channels): support whitespace in channel name · neoclide/coc.nvim@351404e","title_link":"https://github.com/neoclide/coc.nvim/commit/351404e736f9bc6adef193aa238a900778887f6d","text":"Intellisense engine for Vim8 \u0026amp; Neovim, full language server protocol support as VSCode - neoclide/coc.nvim","thumb_url":"https://repository-images.githubusercontent.com/131770422/d9632780-1eb5-11eb-8f04-5f7042ba6365","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":425,"thumb_height":250,"from_url":"https://github.com/neoclide/coc.nvim/commit/351404e736f9bc6adef193aa238a900778887f6d","original_url":"https://github.com/neoclide/coc.nvim/commit/351404e736f9bc6adef193aa238a900778887f6d"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"551Q"}]},{"client_msg_id":"341e8005-fcfa-4ced-8741-22c39be95b39","type":"message","user":"U8R597E9H","text":"\u003c@U01BY3SDBRS\u003e 正直ここまでくると自信はないですが、最新の coc.nvim で治ったやつな気がしました。","ts":"1606639200.219100","team":"T03C4RC8V","reactions":[{"name":"eyes","count":1,"users":["U01BY3SDBRS"]},{"name":"sasu","count":2,"users":["U7B4ZD49X","U01ATUT6PL3"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"DLI81"}]},{"client_msg_id":"72c0939b-7adc-42e8-b8fc-5a43f9a3ec79","type":"message","user":"U01BY3SDBRS","text":"お返事ありがとうございます・・・\n\u003chttps://github.com/kkiyama117/coc-toml/tree/new-taplo\u003e\nです","ts":"1606638963.217900","thread_ts":"1606638346.216400","attachments":[{"fallback":"GitHub: kkiyama117/coc-toml","id":1,"title":"kkiyama117/coc-toml","title_link":"https://github.com/kkiyama117/coc-toml/tree/new-taplo","text":"(!Alpha version) Toml extension for coc-nvim using taplo - kkiyama117/coc-toml","thumb_url":"https://avatars0.githubusercontent.com/u/27989936?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":320,"thumb_height":320,"from_url":"https://github.com/kkiyama117/coc-toml/tree/new-taplo","original_url":"https://github.com/kkiyama117/coc-toml/tree/new-taplo"}],"subtype":"thread_broadcast","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qIm"}],"root":{"client_msg_id":"29e78c61-1d3c-4dae-9746-060479ba3a11","type":"message","user":"U8R597E9H","text":"実際に終わらない方のコードを見てみないと難しそうです。","ts":"1606638346.216400","thread_ts":"1606638346.216400","reply_count":2,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"CPD"}]}},{"client_msg_id":"6889f536-7084-4a78-8815-51826df87ab7","type":"message","user":"U8R597E9H","text":"やっと coc がやっているマッチング処理とほぼ同等レベルのマッチング処理ができました。。。\nbora -\u0026gt; border-radius\nfmodify -\u0026gt; fnamemodify\nの両方がヒットするやつです。","ts":"1606638416.217200","team":"T03C4RC8V","reactions":[{"name":"subara","count":2,"users":["U7B4ZD49X","U01BY3SDBRS"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"9UI"}]},{"client_msg_id":"29e78c61-1d3c-4dae-9746-060479ba3a11","type":"message","user":"U8R597E9H","text":"実際に終わらない方のコードを見てみないと難しそうです。","ts":"1606638346.216400","thread_ts":"1606638346.216400","reply_count":2,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"CPD"}]},{"client_msg_id":"fcb1cac9-314d-403e-9186-5079948c01ab","type":"message","user":"U01BY3SDBRS","text":"cocの拡張機能作成時に await client.onReady() が終わらない、という現象に陥ったのですが原因の調べ方ってあるんでしょうか? 素人質問で申し訳ないんですがどなたかわかる方いらっしゃればと思いまして……\n\n追記しますと\n\u003chttps://github.com/fannheyward/coc-rust-analyzer/blob/42109e326f3edf03c7c20819410638441f8c2fba/src/ctx.ts#L38\u003e みたいな処理なんですが、この中のonReady の前に入れたloggerは走ってるんですが後ろが走らず、どの条件が間違っているかがわからなくなり伺った次第です\n```async startServer(args: string[] = ['run']) {\n    const bin = this.resolveBin();\n    if (!bin) {\n      return;\n    }\n    const client = createClient(bin, args);\n    await client.onReady();\n    this.client = client;\n}```","ts":"1606637744.215900","attachments":[{"fallback":"GitHub: fannheyward/coc-rust-analyzer","id":1,"title":"fannheyward/coc-rust-analyzer","title_link":"https://github.com/fannheyward/coc-rust-analyzer/blob/42109e326f3edf03c7c20819410638441f8c2fba/src/ctx.ts#L38","text":"rust-analyzer extension for coc.nvim. Contribute to fannheyward/coc-rust-analyzer development by creating an account on GitHub.","thumb_url":"https://avatars2.githubusercontent.com/u/345274?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/fannheyward/coc-rust-analyzer/blob/42109e326f3edf03c7c20819410638441f8c2fba/src/ctx.ts#L38","original_url":"https://github.com/fannheyward/coc-rust-analyzer/blob/42109e326f3edf03c7c20819410638441f8c2fba/src/ctx.ts#L38"}],"edited":{"user":"U01BY3SDBRS","ts":"1606638233.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xO/"}]},{"client_msg_id":"743d3c35-5e1b-40eb-91c2-612110389c97","type":"message","user":"U7B4ZD49X","text":"結局diagnostic-languageserverを使うことにした。開発者がNeovimユーザーのほうがなにかと便利だろうという結論になった。","ts":"1606582616.211700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xW/"}]},{"client_msg_id":"b954ded1-ff56-472d-8351-833751d094ea","type":"message","user":"U01BY3SDBRS","text":"ただ、申し訳ないですがまだlinux以外の `taplo` (toml-lsp)のbuildを用意できていないので\n\u003chttps://github.com/tamasfe/taplo/tree/feat-lsp\u003e\nこいつが必要、とかいう曲者です・・・","ts":"1606639210.219400","thread_ts":"1606638346.216400","attachments":[{"fallback":"GitHub: tamasfe/taplo","id":1,"title":"tamasfe/taplo","title_link":"https://github.com/tamasfe/taplo/tree/feat-lsp","text":"A TOML parser and analyzer library written in Rust - tamasfe/taplo","thumb_url":"https://avatars0.githubusercontent.com/u/25967296?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/tamasfe/taplo/tree/feat-lsp","original_url":"https://github.com/tamasfe/taplo/tree/feat-lsp"}],"parent_user_id":"U8R597E9H","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"V3/"}]}]
