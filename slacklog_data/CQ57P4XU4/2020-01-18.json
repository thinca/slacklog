[{"client_msg_id":"3093842b-4a2b-405e-bcd5-ac638292f6b9","type":"message","user":"UG6DF6W87","text":"`&lt;Plug&gt;(lsp-definition)` への mapping を textDocument/definition をサーバが提供している場合のみ設定したいんですが、よい方法ないでしょうか?\nソース漁ってると `lsp#capabilities#has_definition_provider()` が使えそうだと思ったんですが、current buffer で動いている`server_name` どうやって取得しようかなぁというとこで詰まってしまいました","ts":"1579277568.051800","thread_ts":"1579277568.051800","reply_count":1,"replies":[{"user":"UG6DF6W87","ts":"1579320535.059600"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"SOue"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f2d2b2f0-a5a4-49bc-9109-c2832e5257b7","type":"message","user":"UG6DF6W87","text":"あ、`lsp#get_server_names()` と `lsp#get_server_status()` で頑張れますね","ts":"1579277891.052900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Vu1"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U76GA7MFA","text":"<@U76GA7MFA> has joined the channel","ts":"1579278754.053200","subtype":"channel_join","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"b40a9575-e668-4af2-924f-3ba6bc1410fb","type":"message","user":"UNJ2DANJC","text":"vim-lspとyaml-language-serverがvim-lsp-settingsで起動した状態でgithub actionsのworkflow fileを開いたらモリモリcompletionとdiagnosticが効いて非常に驚きました。これどこかでschemaを読み込ませてくれているんでしょうか？","ts":"1579285781.056300","edited":{"user":"UNJ2DANJC","ts":"1579285830.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"IsIp"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"be0fa928-2f96-48d4-a911-6f707a8cff7f","type":"message","user":"UAZ33BKV2","text":"completionでの説明もちゃんと中身になっていますねえ、どっからとってるんだろ?","ts":"1579309205.057100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Tfm3I"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"14b89f45-af62-4a45-88af-dcfb9dad1e3b","type":"message","user":"UAZ33BKV2","text":"説明自体は たとえば usesならここ\n<https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions>","ts":"1579309311.057500","attachments":[{"fallback":"Workflow syntax for GitHub Actions - GitHub Help","id":1,"title":"Workflow syntax for GitHub Actions - GitHub Help","title_link":"https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions","text":"A workflow is a configurable automated process made up of one or more jobs. You must create a YAML file to define your workflow configuration.","blocks":null,"service_name":"help.github.com","service_icon":"https://help.github.com/assets/images/site/favicon.ico","from_url":"https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions","original_url":"https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Z2x/"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"299c2e4e-cb8c-4cf2-8695-a0597596f1c7","type":"message","user":"UAZ33BKV2","text":"ぽい","ts":"1579309315.057800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"2rw"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5A83744A-B9D8-4742-9DAA-DE642ABF2EE2","type":"message","user":"UFYACJ537","text":"<https://qiita.com/yasuhiroki/items/ad47a0c9ac2150574af5|https://qiita.com/yasuhiroki/items/ad47a0c9ac2150574af5> 入れてるとか？","ts":"1579309424.058200","attachments":[{"fallback":"Qiita: Vim Plugin for GitHub Actions (YAML) - Qiita","id":1,"title":"Vim Plugin for GitHub Actions (YAML) - Qiita","title_link":"https://qiita.com/yasuhiroki/items/ad47a0c9ac2150574af5","text":"GitHub Actions (YAML) 用の Vim Plugin を作っています。 <https://github.com/yasuhiroki/github-actions-yaml.vim> ![image.png](http...","image_url":"https://qiita-user-contents.imgix.net/https%3A%2F%2Fcdn.qiita.com%2Fassets%2Fpublic%2Fogp-background-1150d8b18a7c15795b701a55ae908f94.png?ixlib=rb-1.2.2&w=1200&mark=https%3A%2F%2Fqiita-user-contents.imgix.net%2F~text%3Fixlib%3Drb-1.2.2%26w%3D840%26h%3D380%26txt%3DVim%2520Plugin%2520for%2520GitHub%2520Actions%2520%2528YAML%2529%26txt-color%3D%2523333%26txt-font%3DAvenir-Black%26txt-size%3D54%26txt-clip%3Dellipsis%26txt-align%3Dcenter%252Cmiddle%26s%3Da0c4236fd546074a06662fcf0f272173&mark-align=center%2Cmiddle&blend=https%3A%2F%2Fqiita-user-contents.imgix.net%2F~text%3Fixlib%3Drb-1.2.2%26w%3D840%26h%3D500%26txt%3D%2540yasuhiroki%26txt-color%3D%2523333%26txt-font%3DAvenir-Black%26txt-size%3D45%26txt-align%3Dright%252Cbottom%26s%3D1267adb4cd710db44294ef81574d22fa&blend-align=center%2Cmiddle&blend-mode=normal&s=d6c45f78ab3cab7762f2ed3fb2351075","blocks":null,"service_name":"Qiita","service_icon":"https://cdn.qiita.com/assets/favicons/public/apple-touch-icon-ec5ba42a24ae923f16825592efdc356f.png","from_url":"https://qiita.com/yasuhiroki/items/ad47a0c9ac2150574af5","original_url":"https://qiita.com/yasuhiroki/items/ad47a0c9ac2150574af5"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"2VggU"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7d828a60-6d1e-45fb-864f-bd0da61efb2c","type":"message","user":"UAZ33BKV2","text":"あ、入れてるのわすれてた\n自分はそうだなw","ts":"1579309588.058600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"TEJy"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"01158314-e5a2-49eb-8b96-e8c428440677","type":"message","user":"UAZ33BKV2","text":"いや、あれ効いてはないか","ts":"1579310939.058900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"fVn"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"824dfd26-1fdc-427a-8c56-6fb7c842f01d","type":"message","user":"UAZ33BKV2","text":"hoverで説明でるから、やっぱりyaml-lang-servが出してるっぽい","ts":"1579311071.059500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"uQY2Y"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ad2e3222-cdb2-43b5-a808-dd3daed28182","type":"message","user":"UG6DF6W87","text":"```function! s:has_definition_provider() abort\n  let l:names = lsp#get_server_names()\n  call filter(l:names, { _, name -&gt; s:is_running(name) })\n  for name in l:names\n    if lsp#capabilities#has_definition_provider(name)\n      return v:true\n    endif\n  endfor\n  return v:false\nendfunction\n\nfunction! s:is_running(server_name) abort\n  return lsp#get_server_status(a:server_name) ==# 'running'\nendfunction\n\n  augroup LSPMapping\n    autocmd!\n    autocmd User lsp_server_init if s:has_definition_provider() | nmap &lt;C-]&gt; &lt;Plug&gt;(lsp-definition) | endif\n  augroup END```\nこんな感じでいけた!","ts":"1579320535.059600","thread_ts":"1579277568.051800","subtype":"thread_broadcast","reactions":[{"name":"+1::skin-tone-5","count":2,"users":["UAZ33BKV2","U78A6ESHM"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"VKIG"}],"root":{"client_msg_id":"3093842b-4a2b-405e-bcd5-ac638292f6b9","type":"message","user":"UG6DF6W87","text":"`&lt;Plug&gt;(lsp-definition)` への mapping を textDocument/definition をサーバが提供している場合のみ設定したいんですが、よい方法ないでしょうか?\nソース漁ってると `lsp#capabilities#has_definition_provider()` が使えそうだと思ったんですが、current buffer で動いている`server_name` どうやって取得しようかなぁというとこで詰まってしまいました","ts":"1579277568.051800","thread_ts":"1579277568.051800","reply_count":1,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"SOue"}]}},{"client_msg_id":"4192dfe4-3669-486b-a373-92ee0ba4c072","type":"message","user":"UNJ2DANJC","text":"そのプラグイン入れてないので本当にyaml-language-serverが返してるのか... 感心","ts":"1579326034.062900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"cw="}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"64fc84dc-f98e-4fac-b43b-83203cf3291b","type":"message","user":"UG6DF6W87","text":"decralation と definition の違いがよく分からなくなってきた...","ts":"1579344165.064500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"LMLBA"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"8345dec0-46df-4e82-9c13-f196154fea7b","type":"message","user":"U03C71D7H","text":"C++ みたいに宣言と実装が分かれている言語だと意味があるみたいな?","ts":"1579344214.065100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Fkyo"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"cdd7f3ed-fb56-4875-bb95-e173412d841b","type":"message","user":"UG6DF6W87","text":"```hoge(int a); // &lt;- decralation\nhoge(int a) { // &lt;- definition\n  printf(\"%d\\n\", a);\n}```\nということですよね(C だと)","ts":"1579344395.067200","edited":{"user":"UG6DF6W87","ts":"1579344431.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"gciw="}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"a6f0e071-9c8f-45b7-a5bf-1e0f123a7b95","type":"message","user":"U03C71D7H","text":"たぶんそう","ts":"1579344506.068000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"LmRh"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"51d9dc25-0ced-4a43-b644-8feb5863ec26","type":"message","user":"UG6DF6W87","text":"Go とか Ruby みたいな言語だと decralation と definition に違いは無いと思っていいですよね?","ts":"1579344772.069600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"5o/60"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"b313fb2f-a44c-4dae-aa2e-3e63ca37f771","type":"message","user":"UG6DF6W87","text":"いや、どっちにしろあれか、go to decraration と go to definition で何に飛ぶかは LS の実装に依るし、LS を書いた人がどう捉えたかだけか...\n// clangd 動かしてて、なんで :LspDefinition でこれに飛ぶんだ...みたいなのを考えてました","ts":"1579345091.071800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"PtC=y"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"75b3eabe-74b2-44cf-8a52-1ec442434480","type":"message","user":"U03C6TEAZ","text":"clangd のあれはバグってると思います。","ts":"1579345195.072300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Fd8u"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"0f2914f4-7ddd-4067-a9c0-218b2d858aa4","type":"message","user":"UG6DF6W87","text":"お、なるほど\n私がやったのは、上の hoge() の呼出部分で :LspDefinition すると hoge() のプロトタイプ宣言に飛んで、なんでそれ? ってなってました","ts":"1579345488.075100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"fAYB7"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7919cad6-59b4-497c-bb88-33ee44ea0a12","type":"message","user":"U03C6TEAZ","text":"vim とかだと proto ディレクトリの下にプロトタイプ宣言があってそっちが開いてしまう。","ts":"1579345628.076000","team":"T03C4RC8V","reactions":[{"name":"totemoturai","count":2,"users":["UG6DF6W87","UEB0VGD7E"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"HPyvu"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"62754b72-f6a5-4a11-80b3-07dabb45c530","type":"message","user":"UG6DF6W87","text":"あ、そもそもなんで LS の挙動を調べてたのか思い出した\nユーザとしては go to declaration (// ずっと typo してたはずかしい) と go to definition の違いってあんまり意識したくないので、LS に双方提供されてたらどう mapping するかなぁ... みたいなのを考えてたんでした","ts":"1579346319.079400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"twg"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"30f5921f-7769-47da-8219-bc9da312df1b","type":"message","user":"UG6DF6W87","text":"declaration と definition が区別されるような言語で、LS も双方実装している場合でも、宣言/定義元に飛ぶぞ、と思ってキーを入力すると、quickfix とかに選択肢として出して欲しい気がしています\nこの辺り、上手く扱いたいときの設定を考えてました","ts":"1579346788.083800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"C6E"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"94ab76c6-1c56-4ba3-88e9-99ed02dbd160","type":"message","user":"UAZ33BKV2","text":"あーあるとよさそう/あるいはコマンドウィンドウにDef/Declarが選べるとかもいいかも\nとはいえ、宣言に飛びたいときのユースケースってどんなもんでしょうね...","ts":"1579346860.085000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"FB5k"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f141e906-6b17-4bb6-bd8f-b6ce77e1e700","type":"message","user":"UAZ33BKV2","text":"個人的に、宣言と定義を同期して変更反映してくれる、とかがほしい...(lspじゃないだろ)","ts":"1579346883.085600","edited":{"user":"UAZ33BKV2","ts":"1579346949.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xPo6y"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"a7e785f9-74ee-4bde-8ab6-19cd134f2c6c","type":"message","user":"UAZ33BKV2","text":"thincaさんのqfeditでやれるけど、微妙に面倒...","ts":"1579346976.086800","team":"T03C4RC8V","reactions":[{"name":"eyes","count":1,"users":["UG6DF6W87"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Jo0s"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"28c830c0-b423-4410-8195-65f722e4d9bb","type":"message","user":"UG6DF6W87","text":"もっと言うと go to * な仕様(declaration/definition/type definition/implementation) 全体でいい感じに組み合わせたい...","ts":"1579347014.087600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"zfwW"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e380f1b2-1bdf-4f1a-b8cf-b51ac60e31b7","type":"message","user":"UG6DF6W87","text":"// でも \"いい感じ\" の中身はまだはっきりと分かってない...","ts":"1579347115.087800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"DLTKt"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"735cd0bc-3332-41b1-a778-0377ab558bed","type":"message","user":"UG6DF6W87","text":"<https://github.com/itchyny/vim-qfedit>\n// itchyny さんだった","ts":"1579347303.088200","attachments":[{"fallback":"GitHub: itchyny/vim-qfedit","id":1,"title":"itchyny/vim-qfedit","title_link":"https://github.com/itchyny/vim-qfedit","text":"Edit the quickfix/location list freely. Contribute to itchyny/vim-qfedit development by creating an account on GitHub.","thumb_url":"https://avatars3.githubusercontent.com/u/375258?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/itchyny/vim-qfedit","original_url":"https://github.com/itchyny/vim-qfedit"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"uSKNT"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"611ca7d8-0361-4494-9f55-368ba87453fa","type":"message","user":"UAZ33BKV2","text":"おっと、すみません","ts":"1579347322.088600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"44P"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"59f5a609-68b2-48f1-af77-2fbb2a983607","type":"message","user":"UAZ33BKV2","text":"<https://thinca.hatenablog.com/entry/20130708/1373210009>\n読んでた記憶が強かったようです","ts":"1579347354.088900","attachments":[{"fallback":"永遠に未完成: quickfix を便利に使う設定 - 永遠に未完成","id":1,"title":"quickfix を便利に使う設定 - 永遠に未完成","title_link":"https://thinca.hatenablog.com/entry/20130708/1373210009","text":"Vim Advent Calendar 2012 の 220 日目の記事です。 最近の Vim Advent Calendar は子供が生まれたり結婚したりで大変めでたいことが続いていますね。良いことです。みなさんも Vim Advent Calendar で執筆すれば御利益があるかもしれませんよ? あ、ちなみに私はいつも通りです。特に変わったことはありません。さて、今回は私が quickfix で行っている設定をいくつか晒してみたいと思います。 設定方法 quickfix ウィンドウは filetype=qf が設定されます。なので、filetype qf に対する ftplugin を書け…","image_url":"https://ogimage.blog.st-hatena.com/10328537792366815717/10328537792366815954/1457813147","blocks":null,"ts":1373210009,"service_name":"永遠に未完成","service_icon":"https://cdn.blog.st-hatena.com/images/touch-icon-iphone-retina.png","from_url":"https://thinca.hatenablog.com/entry/20130708/1373210009","original_url":"https://thinca.hatenablog.com/entry/20130708/1373210009"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"XQSW"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"cab3c76f-36fa-4b9b-b51f-e66c2ca7db0b","type":"message","user":"UAZ33BKV2","text":"と、置き換えは\n<https://github.com/thinca/vim-qfreplace>\nだからですね...","ts":"1579350620.089300","attachments":[{"fallback":"GitHub: thinca/vim-qfreplace","id":1,"title":"thinca/vim-qfreplace","title_link":"https://github.com/thinca/vim-qfreplace","text":"Perform the replacement in quickfix. Contribute to thinca/vim-qfreplace development by creating an account on GitHub.","thumb_url":"https://avatars1.githubusercontent.com/u/20474?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/thinca/vim-qfreplace","original_url":"https://github.com/thinca/vim-qfreplace"}],"team":"T03C4RC8V","reactions":[{"name":"naruhodo","count":1,"users":["UG6DF6W87"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"QQjjn"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"39c4710f-fcee-4611-af06-3d169eb220a5","type":"message","user":"U77U7B85A","text":"&gt; go to * な仕様(declaration/definition/type definition/implementation) 全体でいい感じに組み合わせたい...\nworkspace/symbolが近いかなーと思ってます","ts":"1579351053.090100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"67hJ"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"022d15fc-c1e2-4161-b5ce-96117103895f","type":"message","user":"UG6DF6W87","text":"あ、確かにそうかもしれないですね","ts":"1579352745.090700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Whl"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ea005089-0c6f-4a38-98e1-68b8c96a8f6f","type":"message","user":"UG6DF6W87","text":"ただ、implementation が難しそう...?","ts":"1579352961.091400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"220"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"580e793d-c65e-4775-9112-1cff7b3f3e92","type":"message","user":"U7TMPGWJ0","text":"json-languageserver は vim-lsp だと補完とかうまく動かないなー、coc.nvim なら何もしなくて動くし、VSCodeが動くのはそれは当たり前にだろうし。って感じで自分の中で認識してたのですがちゃんと設定したら vim-lsp でもバリバリ補完動いた。便利。あとは schema の取得先の schemastore の一覧ページを見つけたので安心  <http://schemastore.org/json/>","ts":"1579356082.092600","attachments":[{"fallback":"JSON Schema Store","id":1,"title":"JSON Schema Store","title_link":"http://schemastore.org/json/","text":"JSON Schemas for common JSON file formats","thumb_url":"http://schemastore.org/img/json-logo.png","blocks":null,"service_name":"schemastore.org","service_icon":"http://schemastore.org/img/favicon/apple-touch-icon-57x57.png","thumb_width":160,"thumb_height":160,"from_url":"http://schemastore.org/json/","original_url":"http://schemastore.org/json/"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rVq"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c9c3d5f7-55a8-4cc5-8de7-783b6469b1a2","type":"message","user":"U03C6TEAZ","text":"詳細プリーズ","ts":"1579356827.092900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"tWZ9R"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4a516632-2e1a-486c-804a-9f3477ec10ef","type":"message","user":"U7TMPGWJ0","text":"すいません。ちゃんと schema 設定したらちゃんと動いたー、やったー！！って話なだけでしたw。フォーマッターおそらく html-langserver の `-bin` が古いのと同じだと思うので動きませんでしたが。\n```if executable('json-languageserver')\n  augroup LspJson\n    au!\n    au User lsp_setup call lsp#register_server({\n        \\ 'name': 'json-languageserver',\n        \\ 'cmd': {server_info-&gt;[&amp;shell, &amp;shellcmdflag, 'json-languageserver --stdio']},\n        \\ 'whitelist': ['json'],\n        \\ 'workspace_config': {\n        \\   'json': {\n        \\     'format': { 'enable': v:true },\n        \\     'schemas': [\n        \\       {\n        \\         'fileMatch': ['/package.json'],\n        \\         'url': '<http://json.schemastore.org/package>'\n        \\       },\n        \\       {\n        \\         'fileMatch': ['/composer.json'],\n        \\         'url': '<http://json.schemastore.org/composer>'\n        \\       },\n        \\     ],\n        \\   },\n        \\ }})\n  augroup end\nendif```","ts":"1579357833.094500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"zF7"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"8bb76138-62dd-4d43-8943-920d62f71ed9","type":"message","user":"U7TMPGWJ0","text":"たとえば babelrc なら上の一覧ページのこれをurlに指定するとか。 <http://json.schemastore.org/babelrc>","ts":"1579357937.096300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"FgFpn"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"bb8df648-0a32-45db-a182-54c6a237dad1","type":"message","user":"U7TMPGWJ0","text":"tsconfig.json もありますし、便利ーって感じです。","ts":"1579358051.097500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"P2Ntj"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5f247d4f-c743-4309-8d55-eecd47db3ae5","type":"message","user":"U03C6TEAZ","text":"なるほど。lsp-settings だとこんな感じすね。\n```let g:lsp_settings = {\n\\  'json-languageserver': {\n\\    'workspace_config': {\n\\      'json': {\n\\        'format': { 'enable': v:true },\n\\        'schemas': [\n\\          {\n\\            'fileMatch': ['/package.json'],\n\\            'url': '<http://json.schemastore.org/package>'\n\\          },\n\\          {\n\\            'fileMatch': ['/composer.json'],\n\\            'url': '<http://json.schemastore.org/composer>'\n\\          },\n\\        ],\n\\      },\n\\    },\n\\  },\n\\}```\n","ts":"1579358062.097800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/jdWP"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"fd44f393-2a16-4201-abd0-7bd7dd30bb54","type":"message","user":"U7TMPGWJ0","text":"ひとつだけ気になってることがあるのですが。coc.nvim ではこの catalog.json を使っています。特にLS側で設定なしで対応しているものは補完が効くんですよね。これを vim-lsp で設定できたらいいなーとは思ってるのですが。 <https://github.com/SchemaStore/schemastore/blob/master/src/api/json/catalog.json>","ts":"1579358232.099600","attachments":[{"fallback":"GitHub: SchemaStore/schemastore","id":1,"title":"SchemaStore/schemastore","title_link":"https://github.com/SchemaStore/schemastore/blob/master/src/api/json/catalog.json","text":"A collection of JSON schema files including full API - SchemaStore/schemastore","thumb_url":"https://avatars1.githubusercontent.com/u/9812707?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/SchemaStore/schemastore/blob/master/src/api/json/catalog.json","original_url":"https://github.com/SchemaStore/schemastore/blob/master/src/api/json/catalog.json"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"cBqx"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"603314de-b738-4747-90ec-a9c30bfdfd19","type":"message","user":"U7TMPGWJ0","text":"全部のスキーマの URL 等の情報入りのものですね。","ts":"1579358271.100200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"L76"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"29ffa426-b8f7-4abb-b1f7-7d58b28130e5","type":"message","user":"U03C6TEAZ","text":"全部盛りなんですね。","ts":"1579358308.100400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"mh4"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"a0770443-8a6a-4d9a-8c90-547ca8466edb","type":"message","user":"U7TMPGWJ0","text":"Vim scriptでパースしちゃえば...いいだけかな","ts":"1579358376.102000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"mYLz"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f332d2cd-67ec-44a9-bf44-a750b1b06636","type":"message","user":"U03C6TEAZ","text":"これ json そのままなので ↑ の schemas の所で `json_decode(join(readfile('/path/to/catalog.json'), \"\\n\"))` してあげればいけそう。","ts":"1579358386.102300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"z6hs"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"fbde4143-1635-404e-9f16-153e15434dfe","type":"message","user":"U03C6TEAZ","text":"```let g:lsp_settings = {\n\\  'json-languageserver': {\n\\    'workspace_config': {\n\\      'json': {\n\\        'format': { 'enable': v:true },\n\\        'schemas': json_decode(join(readfile('/path/to/catalog.json'), \"\\n\"))['schemas']\n\\      },\n\\    },\n\\  },\n\\}```","ts":"1579358456.103100","edited":{"user":"U03C6TEAZ","ts":"1579358489.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"9s+"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"88ef1577-fa6d-4a2f-84fd-5d77c0d5b2e8","type":"message","user":"U03C6TEAZ","text":"こうかな。","ts":"1579358502.103800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"msQY"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"bc39ed04-9d49-4cfa-b812-fe06cdf934a9","type":"message","user":"U03C6TEAZ","text":"いっそ lsp-settings デフォ(オプショナル？)にしてもいいかも。","ts":"1579358530.104400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"f08/"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"23bd7bad-ce50-402f-99b4-e2d0e5c7a7bc","type":"message","user":"U03C6TEAZ","text":"バンドルしちゃって。","ts":"1579358545.104600","team":"T03C4RC8V","reactions":[{"name":"goodpoem","count":2,"users":["UFYACJ537","U7TMPGWJ0"]},{"name":"+1","count":2,"users":["U78A6ESHM","U7TMPGWJ0"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0ct"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"cd2f2c98-90e9-4e21-8e97-7e1aa4920519","type":"message","user":"U7TMPGWJ0","text":"はい、デフォの設定としてすごくいいと思います。","ts":"1579358639.105200","edited":{"user":"U7TMPGWJ0","ts":"1579358656.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qj/Mi"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"744a8086-06f4-46a9-93f9-2d3958f39ddf","type":"message","user":"U03C6TEAZ","ts":"1579358674.105800","files":[{"id":"FSU8V9HSR","created":1579358671,"timestamp":1579358671,"name":"image.png","title":"image.png","mimetype":"image/png","image_exif_rotation":1,"filetype":"png","pretty_type":"PNG","user":"U03C6TEAZ","mode":"hosted","editable":false,"is_external":false,"external_type":"","size":30468,"url":"","url_download":"","url_private":"https://files.slack.com/files-pri/T03C4RC8V-FSU8V9HSR/image.png","url_private_download":"https://files.slack.com/files-pri/T03C4RC8V-FSU8V9HSR/download/image.png","original_h":398,"original_w":521,"thumb_64":"https://files.slack.com/files-tmb/T03C4RC8V-FSU8V9HSR-6ae81f71e3/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T03C4RC8V-FSU8V9HSR-6ae81f71e3/image_80.png","thumb_160":"https://files.slack.com/files-tmb/T03C4RC8V-FSU8V9HSR-6ae81f71e3/image_160.png","thumb_360":"https://files.slack.com/files-tmb/T03C4RC8V-FSU8V9HSR-6ae81f71e3/image_360.png","thumb_360_gif":"","thumb_360_w":360,"thumb_360_h":275,"thumb_480":"https://files.slack.com/files-tmb/T03C4RC8V-FSU8V9HSR-6ae81f71e3/image_480.png","thumb_480_w":480,"thumb_480_h":367,"thumb_720":"","thumb_720_w":0,"thumb_720_h":0,"thumb_960":"","thumb_960_w":0,"thumb_960_h":0,"thumb_1024":"","thumb_1024_w":0,"thumb_1024_h":0,"permalink":"https://vim-jp.slack.com/files/U03C6TEAZ/FSU8V9HSR/image.png","permalink_public":"https://slack-files.com/T03C4RC8V-FSU8V9HSR-74c4063ea5","edit_link":"","preview":"","preview_highlight":"","lines":0,"lines_more":0,"is_public":true,"public_url_shared":false,"channels":null,"groups":null,"ims":null,"initial_comment":{},"comments_count":0,"num_stars":0,"is_starred":false,"shares":{"public":null,"private":null},"display_as_bot":false,"has_rich_preview":false,"thumb_tiny":"AwAkADBDqDqSNg6/3qP7Tb/nmv8A30apMctz601h3NAF7+02/uD/AL6pf7Tf/nmP++jWbUi/doAvf2k+M+WMf7xo/tN858tf++jVTP7nH+2f5CmUADdfxpH6dfwpT1P1ooAjqRfu0m0UvQYoAd/yy/4Gf5U2lyduO2c0lAAepooPU/WigAooooAKKKKAP//Z","username":""}],"upload":true,"replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"fd1109af-56d8-43da-a393-715cbec61225","type":"message","user":"U03C6TEAZ","text":"いい感じ","ts":"1579358680.106300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rr71+"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"48644552-3249-466c-bf02-3ba7eb5e8fa3","type":"message","user":"U7TMPGWJ0","text":"&gt; JSON Schemas are available for the following 223 files:\n","ts":"1579358682.106400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"q1O5M"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"699b044f-ee46-4d12-835f-6c30d14ac400","type":"message","user":"U7TMPGWJ0","text":"一気に223個のjson補完が可能になりました。","ts":"1579358701.106800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0EJ"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6cd47db3-652f-4852-8812-a96b691eaec1","type":"message","user":"U7TMPGWJ0","text":"一気にjsonにすごく強い子な Vim (vim-lsp) になった...","ts":"1579358957.107600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"lFZZd"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"829b8523-da99-4fe5-b8b5-5e906d7ae584","type":"message","user":"U03C6TEAZ","text":"遅延させて自前設定時は読み込まない様にした。 <https://github.com/mattn/vim-lsp-settings/pull/90>","ts":"1579359237.108300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"RhG9l"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"27e6ce0b-dc66-4870-8cde-d84af3d5cabf","type":"message","user":"U03C6TEAZ","text":"けど、たぶん自前設定する人いないかな。","ts":"1579359243.108700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"y5U"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"78d65bbf-aa17-4b82-bd59-0a24e1ddbcc9","type":"message","user":"U7TMPGWJ0","text":"schema stone については VSCode の JSON のでも書いてる情報なので使うものとしては問題ないと思います。あとは coc.nvim もバンドルしてます。 <https://code.visualstudio.com/docs/languages/json>","ts":"1579359312.109900","attachments":[{"fallback":"JSON editing in Visual Studio Code","id":1,"title":"JSON editing in Visual Studio Code","title_link":"https://code.visualstudio.com/docs/languages/json","text":"Edit JSON files in Visual Studio Code","image_url":"https://code.visualstudio.com/opengraphimg/opengraph-docs.png","blocks":null,"service_name":"code.visualstudio.com","service_icon":"https://code.visualstudio.com/apple-touch-icon.png","from_url":"https://code.visualstudio.com/docs/languages/json","original_url":"https://code.visualstudio.com/docs/languages/json"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"l/o3"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7bdb383d-016d-4d7d-b1aa-53949e4b3675","type":"message","user":"U03C6TEAZ","text":"はい。lsp-settings もバンドルします。(一応 README で出元だけ明らかにして)","ts":"1579359368.111000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ulf"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"98e18e3c-94f3-40c9-945f-dc16146c90d8","type":"message","user":"U7TMPGWJ0","text":"これでまたひとつ、coc.nvim だとアレができるのに vim-lsp ではできないが 1つなくなりました。","ts":"1579359375.111200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"olI1"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"84d14f75-a298-4cb8-acbf-616ba5ca0ff5","type":"message","user":"U03C6TEAZ","text":"yaml も無いのかなぁ。","ts":"1579359395.111500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"wFAN"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ba73900f-e020-453a-9094-616a94f0b235","type":"message","user":"U03C6TEAZ","text":"<https://github.com/SchemaStore/schemastore/tree/master/src/api>","ts":"1579359428.112200","attachments":[{"fallback":"GitHub: SchemaStore/schemastore","id":1,"title":"SchemaStore/schemastore","title_link":"https://github.com/SchemaStore/schemastore/tree/master/src/api","text":"A collection of JSON schema files including full API - SchemaStore/schemastore","thumb_url":"https://avatars1.githubusercontent.com/u/9812707?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/SchemaStore/schemastore/tree/master/src/api","original_url":"https://github.com/SchemaStore/schemastore/tree/master/src/api"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dd/8"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"3a7f663d-c7e3-4c60-ae7a-5cc9452b43f4","type":"message","user":"U7TMPGWJ0","text":"一応 yaml もそれ見にいくようにするみたいなんですよね。専用のとかあるのかな。","ts":"1579359433.112500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"s8ysU"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5a4b7b17-9071-42fe-a8aa-341842f116b8","type":"message","user":"U7TMPGWJ0","text":"たとえばREADMEに書いてあったり <https://github.com/redhat-developer/yaml-language-server>","ts":"1579359480.112800","attachments":[{"fallback":"GitHub: redhat-developer/yaml-language-server","id":1,"title":"redhat-developer/yaml-language-server","title_link":"https://github.com/redhat-developer/yaml-language-server","text":"Language Server for Yaml Files. Contribute to redhat-developer/yaml-language-server development by creating an account on GitHub.","thumb_url":"https://avatars0.githubusercontent.com/u/11033755?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/redhat-developer/yaml-language-server","original_url":"https://github.com/redhat-developer/yaml-language-server"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=LPY"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ab4e2c58-82f1-48ab-89b6-9cd4610a0318","type":"message","user":"U7TMPGWJ0","text":"コードにこんなのあったり <https://github.com/redhat-developer/yaml-language-server/blob/master/src/server.ts#L32-L33>","ts":"1579359518.113100","attachments":[{"fallback":"GitHub: redhat-developer/yaml-language-server","id":1,"title":"redhat-developer/yaml-language-server","title_link":"https://github.com/redhat-developer/yaml-language-server/blob/master/src/server.ts#L32-L33","text":"Language Server for Yaml Files. Contribute to redhat-developer/yaml-language-server development by creating an account on GitHub.","thumb_url":"https://avatars0.githubusercontent.com/u/11033755?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/redhat-developer/yaml-language-server/blob/master/src/server.ts#L32-L33","original_url":"https://github.com/redhat-developer/yaml-language-server/blob/master/src/server.ts#L32-L33"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/pfd"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"}]
