[{"client_msg_id":"ada29f89-6ad6-4a1d-b2a8-4d9a05c4322b","type":"message","user":"UG6DF6W87","text":"fixed\nワークスペースのあつかい難しい","ts":"1599392779.009500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"9u8UG"}]},{"client_msg_id":"bb11e336-c111-4999-96b4-26c7a67d819c","type":"message","user":"UG6DF6W87","text":"しまった、一つ関数を読みとばしてしまって、ちょっと嘘を書いてしまった","ts":"1599388235.008700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Kp2Kr"}]},{"client_msg_id":"4d4ac841-d7f0-4a70-9d4d-53b4a878eac0","type":"message","user":"UG6DF6W87","text":"\u003chttps://tennashi.hatenablog.com/entry/2020/09/06/191524\u003e\n今週号かいた\ngopls 編2回で終わるかな、と思ったが...予想より手強い","ts":"1599387595.008200","attachments":[{"fallback":"あれ: LSP 実装メモ(gopls cache `View` 生成編) - あれ","id":1,"title":"LSP 実装メモ(gopls cache `View` 生成編) - あれ","title_link":"https://tennashi.hatenablog.com/entry/2020/09/06/191524","text":"前回 \u003chttp://tennashi.hatenablog.com|tennashi.hatenablog.com\u003e 引き続き、gopls の cache 実装を読む。 前回のまとめ gopls で採用されている cache は 3 層で前回読んだのは Cache/Session の 2 層だ。 Cache 素朴な OS ファイルシステム上のファイルの cache cache 自体の実体は source.FileHandle 型(の実装) Session LSP の Text Document Synchronization でやりとりされる TextDocument の cache cache 自体の実体は source.Overlay 型(の実装) S…","image_url":"https://ogimage.blog.st-hatena.com/17680117127203294009/26006613624452456/1599387365","blocks":null,"ts":1599387324,"service_name":"あれ","service_icon":"https://cdn.image.st-hatena.com/image/apple_touch_icon/ecf1550c56dff759d6bc80aa8ba975b2d0f7b1b4/version=1/https%3A%2F%2Fcdn.user.blog.st-hatena.com%2Fblog_custom_icon%2F154545380%2F1560952205141962","from_url":"https://tennashi.hatenablog.com/entry/2020/09/06/191524","original_url":"https://tennashi.hatenablog.com/entry/2020/09/06/191524"}],"team":"T03C4RC8V","reactions":[{"name":"eyes","count":1,"users":["U016GRZN0GJ"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"9gr6"}]}]
