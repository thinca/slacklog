[{"client_msg_id":"ED2D7E60-3A0D-420C-89F2-23718CB77096","type":"message","user":"U80CX6XDZ","text":"deoplete-lspはnvim-lsp専用なのです。","ts":"1580916704.174100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"4l1"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"D176C2ED-D0C1-4E11-BD19-32574B9080CA","type":"message","user":"U80CX6XDZ","text":"今週末のMeguro.vimでsqlsテーブル補完まで持っていきたい。","ts":"1580916845.175300","team":"T03C4RC8V","reactions":[{"name":"goodpoem","count":5,"users":["U03C6TEAZ","U7TMPGWJ0","UN1NW3ZCP","U78A6ESHM","U72TB62UF"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jgUx"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c229d7bd-adc8-4256-b12e-54f682b7f464","type":"message","user":"U77U7B85A","text":"goplsでworkspace/symbolが使えるようになったのでmeguro.vimで色々と試してみます","ts":"1580948275.176500","team":"T03C4RC8V","reactions":[{"name":"goodpoem","count":8,"users":["U03C6TEAZ","UDDCM376D","UKHUVMBJR","U7TMPGWJ0","U80CX6XDZ","U03C71D7H","U78A6ESHM","U06BRP8VD"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qHW"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f0e85d20-cfcb-498d-a8df-19463eba580a","type":"message","user":"U03C6TEAZ","text":"たぶん vim-lsp 側の問題だと思うけど workspace symbols で loclist に出てくるパスから Windows のドライブレターが消えてるな。","ts":"1580956924.178300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"mWxP"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f0f3cccb-cd33-4ab9-95d7-39bb1fb2df99","type":"message","user":"U03C6TEAZ","text":"ログ見たらドライブレターあるので vim-lsp 確定か。","ts":"1580957001.178700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"DM+R"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"32f540d3-f667-4b79-82c0-210ccecf3995","type":"message","user":"U03C6TEAZ","text":"てか vim じゃん","ts":"1580957149.178900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"8DsB"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7b506816-4849-416e-8b71-df2bf06261cd","type":"message","user":"UAZ33BKV2","text":"根元までいく...","ts":"1580957370.179100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"DJmh"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e3a871a4-b2b9-4157-8de2-314cd4855c30","type":"message","user":"U03C6TEAZ","text":"<https://github.com/golang/go/issues/37076>","ts":"1580959818.179400","attachments":[{"fallback":"GitHub: x/tools/gopls: high memory usage in sigs.k8s.io/cluster-api · Issue #37076 · golang/go","id":1,"title":"x/tools/gopls: high memory usage in sigs.k8s.io/cluster-api · Issue #37076 · golang/go","title_link":"https://github.com/golang/go/issues/37076","text":"What version of Go are you using (go version)? $ go version go version go1.13.7 darwin/amd64 Does this issue reproduce with the latest release? Yes What operating system and processor architecture ...","thumb_url":"https://avatars3.githubusercontent.com/u/4314092?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/golang/go/issues/37076","original_url":"https://github.com/golang/go/issues/37076"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"k/B7L"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"322b53c8-7c6b-4eb7-a75e-5fbe75e06b06","type":"message","user":"U03C6TEAZ","text":"30GB は凄いなぁ。","ts":"1580959824.179700","team":"T03C4RC8V","reactions":[{"name":"laughing","count":2,"users":["U06BRP8VD","UEACRCY0Z"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"KG=IZ"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"1344fe06-24e2-418b-8ffd-56d5ad307d97","type":"message","user":"U03C6TEAZ","text":"僕が過去に見てきた中ではトップかも。","ts":"1580959845.180300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"4cYI"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5accba83-9cfe-44c4-ad2a-d36a79375507","type":"message","user":"U03C6TEAZ","text":"(他人事)","ts":"1580959857.180600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"B3V+E"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"628d049b-8550-445c-8a68-08b7bdfaddc9","type":"message","user":"UEACRCY0Z","text":"vim-lsp-settings 良さそう。JS使えるし flowtype でも使えるかな？","ts":"1580975558.182700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"M0Onu"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c5ca42d0-9c12-46a0-b104-598ba1f03a88","type":"message","user":"U8R597E9H","text":"remove-prefix ブランチ試してみていますが、\n\n- snippetSupport = true (vssnip 入れて有効になってる状態）\n- vim-language-server\n- asyncomplete.vim + asyncomplete-lsp.vim\n\nな状態で `call g|` までうって、getbufline がでてこない状態になっていそうです。","ts":"1580978079.184700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"U/F"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"94e522fb-c2e6-48d7-ad20-22f468605fd1","type":"message","user":"U8R597E9H","text":"print デバッグしてみた感じ、\nasyncomplete は `call g|` の状態で補完リクエストをサーバに送信するが、この時の startcol は `g の手前` になっていて、\nvim-lsp 側では `call g` の状態になっているので、`getbufline -&gt; etbufline` に変換がかかって、`g 始まりの文字列` じゃなくなってフィルタされていそうです。","ts":"1580978159.186200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"wm59Q"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5aa9631a-ce40-4294-a7c7-4fcdf389d53d","type":"message","user":"U03C6TEAZ","text":"oh","ts":"1580978268.186600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rykp6"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"cc6f51a0-f8c6-4ca8-90db-b29fd43a502b","type":"message","user":"U8R597E9H","text":"では、どうすればいのか？というのは考えてみていますが、難しい。。。startcol 以前の文字列とかぶっている場合は削る。が必要なんだろうか。","ts":"1580978333.187400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"TFhds"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4814d7fb-2f61-4008-8e0e-bf4ea82b473f","type":"message","user":"U8R597E9H","text":"VSCode にも overflowAfter やら、overflowBefore やらを計算する処理があるようなので、正着手な方向性だとは思ってるのだが…","ts":"1580978617.190300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Vh53W"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"27aa4965-3962-43b3-8bcb-4bd47f1d0cfb","type":"message","user":"U8R597E9H","text":"_今日は寒すぎる…_","ts":"1580978634.190900","team":"T03C4RC8V","reactions":[{"name":"cool","count":3,"users":["U03C6TEAZ","UEACRCY0Z","U8CC7MDCL"]},{"name":"cold_sweat","count":1,"users":["UAZ33BKV2"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"B5vQ"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"1648bcd3-be63-402a-8c75-4029b4aa246f","type":"message","user":"U8R597E9H","text":"おそらく、そんな気がする。complete の startcol 以前の文字とマッチする prefix を削りたい。\nでも、startcol がどこなのかはこの段階ではわからなそうな気がする。","ts":"1580978883.193500","edited":{"user":"U8R597E9H","ts":"1580978891.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1Ue+"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"9979086e-cd1a-46db-b11d-39f3f6237ef8","type":"message","user":"U03C6TEAZ","text":"filterText がそれだったりしませんかね？","ts":"1580979013.195100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"KCLqA"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"0d4b1269-8ae3-4bcf-9e01-fd0340969dde","type":"message","user":"U03C6TEAZ","text":"あ、startcol か。","ts":"1580979021.195400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"GcW"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"890cd84e-fc60-45c5-a35f-e26aea291c53","type":"message","user":"U03C6TEAZ","text":"まぁでも `col('.') - len(filetrText)` だったり？","ts":"1580979051.196300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"DfJxR"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"53585640-ed16-49de-a7ff-a26af107798f","type":"message","user":"U03C6TEAZ","text":"たしか vim-lsp は typed_pattern というのから逆算してた様な気がしなくない。","ts":"1580979082.197200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"JWIjb"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d45082d2-2d82-4433-b5d4-a51e39265bf5","type":"message","user":"U8R597E9H","text":"1. vim-lsp にサーバごとの補完パターンを設定できるようにする -&gt; これはすでに一応そうなっている。（typed_pattern）\n2. asyncomplete-lsp は、asyncomplete と vim-lsp の双方を知っていていいので、vim-lsp から手に入れた typed_pattern を asyncomplete のソースパラメタとして渡す\n3. vim-lsp は typed_pattern の定義をしっているので、それを使って切り出し位置を決める\n\nこういう感じが自分としてはイメージが湧きました。","ts":"1580979085.197400","edited":{"user":"U8R597E9H","ts":"1580979117.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"8XTH"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7599412d-ac1b-4469-b021-2f9c3e2ceca9","type":"message","user":"U8R597E9H","text":"filterText の中身がどうなってるのか見てみよう","ts":"1580979145.198000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"OVqd"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"3ff8d576-2a13-485c-8125-63052092977f","type":"message","user":"U8R597E9H","text":"vim-language-server は filterText を入れていなさそう。\nやっぱり、typed_pattern を vim-lsp -&gt; asyncomplete-lsp -&gt; asyncomplete な依存で設定できるようにしてしまえば、全員同じパターンを知っている状態を作れるので、それが安全そうかもしれません。","ts":"1580979347.199400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"UyYIQ"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"72e3aeae-e5d7-47d5-830c-ae668f528b2b","type":"message","user":"U8R597E9H","text":"asyncomplete.vim の `b:asyncomplete_refresh_pattern` をソース引数から渡せるように。。。って思ったが、複数のソースがいるからどうしたものか。。。","ts":"1580979429.200400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Xae"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6991c771-563d-4763-9d50-821d35874c1c","type":"message","user":"U8R597E9H","text":"startcol が特定できる方法があればシンプルではあるんですが。。。うーん。","ts":"1580979519.201100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"6e+o"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"8ed8a328-f6b4-4c76-bce1-fd292a13a407","type":"message","user":"U03C6TEAZ","text":"そうですね。。。","ts":"1580979586.202200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"DpF"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f96f00b7-d0ae-421a-9678-8d2bb605c47a","type":"message","user":"U8R597E9H","text":"`call g|` の場合は `call |` の位置以前にマッチする文字列を削りたい（例えば `call getbufline` をサーバが返してきても `getbufline` になってきれいに動く）\n`let $v|` の場合は `let $|` の位置以前にマッチする文字列が削りたい（例えば `$variable` をサーバが返してきても `variable` になってきれいに動く）\nやっぱり、方向性自体は正しいとしか思えないが難しいですねこれ。。。","ts":"1580979666.203600","edited":{"user":"U8R597E9H","ts":"1580979746.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"4RBH"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"47376c6e-2166-4b74-b355-48ab4127a145","type":"message","user":"U03C6TEAZ","text":"vscode どうやってるんや。。。","ts":"1580979766.204200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"6HH8S"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4b072efe-a231-4b8d-94ed-791d595f23cf","type":"message","user":"U8R597E9H","text":"これ、vim-lsp が asyncomplete を知っていてもいい（逆も許容）、という前提があるなら動かせそうな気がするんですよね。\nomni 系関数を呼び出すのはもとを辿れば asyncomplete なので、asyncomplete が使う予定の補完パターンを vim-lsp に渡してしまえる。\nそうすれば、vim-lsp は startcol を計算可能になるので、補完文字列を削ってしまえる。","ts":"1580979907.207400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ZF="}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"a5135f10-01c4-487f-8a36-a261a2e0a070","type":"message","user":"UAZ33BKV2","text":"vscode、 構造体メンバで `aaa.a|aa` みたいなので、誤爆しないのか気になる(迂闊なマッチがやばい)","ts":"1580979922.208400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"8Xq"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ecd29abb-1651-4201-85fb-ef73df3a21aa","type":"message","user":"U8R597E9H","text":"VSCode は全部一緒くたになっているからそれらが可能なのかもしれない？","ts":"1580979927.208700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"BW6tq"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4e3b459b-8e4f-47aa-baf5-8da6c9e94c51","type":"message","user":"U03C6TEAZ","text":"css のプロパティ名に - が含まれるとか知ってないと startcol 得るの難しいと思うんやけどなぁ。","ts":"1580979929.208800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"pVIa"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e1ad9b05-919e-45c7-80dc-ac910f411372","type":"message","user":"UAZ33BKV2","text":"まあ、.とかで切れてるから平気か...","ts":"1580979967.209100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Ycfz1"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"882da44b-f436-4cc4-a5de-dc50fe242081","type":"message","user":"U03C6TEAZ","text":"あ、そうか。各言語の vscode 拡張が位置決めをやるのか。","ts":"1580980024.210200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/F+"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"b555a8db-cdb5-47f0-aa84-d922c0682ec0","type":"message","user":"U8R597E9H","text":"これ、asyncomplete 側が削る責務を負うべき説ありますかね。","ts":"1580980101.211600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"CSX=t"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"a2f1b505-3f9a-4cb2-a400-13ea0db1062c","type":"message","user":"U03C6TEAZ","text":"あーたしかに。","ts":"1580980202.212200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"GnDl"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"82efb6f3-1c2b-40bb-b05a-3f84242ccd8c","type":"message","user":"U8R597E9H","text":"この仕組で仮に壊れるとしたら rust とかの `use std:|` ここで補完して「: はすでに一個入力済みだからサーバは `:io` しか返さないよ〜」ってケースくらいしか浮かばないですね。","ts":"1580980263.213100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"KSCG"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"74060a52-af97-4a67-8ca4-9ed097fb9132","type":"message","user":"U8R597E9H","text":"サーバがそれでも `::io` を返してくれば、この仕組でうまく動く。","ts":"1580980350.213900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qJs6j"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"83d6f642-c550-4540-b2ee-b85e57b11c10","type":"message","user":"U03C6TEAZ","text":"startcol を知っていて返ってきた補完候補も知ってるのは asyncomplete ですしね。`:` も正確にけずれるのでは。","ts":"1580980373.214500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"5pgID"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"68119f3d-46b2-47b3-844e-2240883c7ec3","type":"message","user":"U03C6TEAZ","text":"`col('.') - startcol` を各 item.word の先頭からカットすればいい。ただしマッチしてる場合だけ？","ts":"1580980447.215400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"7Cjg"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d25338e4-af11-4e5f-969a-00d5c32fc70d","type":"message","user":"U8R597E9H","text":"`\\t\\t\\tcall get|` に対して `call getbufline` が仮に返却されたことを考えてみると（startcol は `\\t\\t\\tcall |`）\n\n `\\t\\t\\tcall ` に対して、ワードが末尾にマッチする文字数分削りたいのですが、自分では 1 文字ずつずらしてマッチするか見てみるしか思いつかないｗ","ts":"1580980606.217100","edited":{"user":"U8R597E9H","ts":"1580980629.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"G/m"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"1a630133-d151-44db-a5f0-6b422d05cc66","type":"message","user":"U8R597E9H","text":"<https://github.com/microsoft/vscode/blob/master/src/vs/editor/contrib/suggest/suggestController.ts#L334>","ts":"1580980697.217500","attachments":[{"fallback":"GitHub: microsoft/vscode","id":1,"title":"microsoft/vscode","title_link":"https://github.com/microsoft/vscode/blob/master/src/vs/editor/contrib/suggest/suggestController.ts#L334","text":"Visual Studio Code. Contribute to microsoft/vscode development by creating an account on GitHub.","thumb_url":"https://avatars2.githubusercontent.com/u/6154722?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/microsoft/vscode/blob/master/src/vs/editor/contrib/suggest/suggestController.ts#L334","original_url":"https://github.com/microsoft/vscode/blob/master/src/vs/editor/contrib/suggest/suggestController.ts#L334"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"cG6H"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"3b5733d0-2c49-48fb-bc09-3e8cfc7efd17","type":"message","user":"U8R597E9H","text":"VSCode は文字のマッチとかしてないな。。。なんでこれで動くんだろう。。。","ts":"1580980778.218600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=Ty"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"46ad80c7-dca8-4838-9938-ea2638a41272","type":"message","user":"U03C6TEAZ","text":"む。\n```diff --git a/autoload/asyncomplete.vim b/autoload/asyncomplete.vim\nindex 373f612..5361ff8 100644\n--- a/autoload/asyncomplete.vim\n+++ b/autoload/asyncomplete.vim\n@@ -478,6 +478,14 @@ function! asyncomplete#preprocess_complete(ctx, items)\n     endif\n \n     call asyncomplete#log('core', 'asyncomplete#preprocess_complete calling complete()', a:ctx['startcol'], a:items)\n+\n+    let l:prefix = getline('.')[a:ctx['startcol']:col('.')]\n+    for i in range(len(a:items))\n+      let l:item = a:items[i]\n+      if stridx(l:item.word, l:prefix) == 0\n+        let l:item.word = l:item.word[l:prefix :]\n+      endif\n+    endfor\n     call complete(a:ctx['startcol'], a:items)\n endfunction\n ```\nasyncomplete にこれあてて\n```let b:asyncomplete_refresh_pattern = '/$\\|\\k$'```\nこれ設定すれば html-language-server ちゃんと動く。","ts":"1580981228.219900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Z047"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"da2c2eed-ebb9-486a-b9d4-b384c8ce0d78","type":"message","user":"U03C6TEAZ","text":"こうなると typed_pattern の役割ってなんだっけ？となる。","ts":"1580981267.220400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Lvc"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"95f19e82-f3e9-4b2a-b625-7ee6ced15c90","type":"message","user":"U8R597E9H","text":"_typed_pattern の役割は割となんだっけ？と思っています！_","ts":"1580981285.220700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ek95r"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"1005ea90-1e0b-4c69-a97b-3d70dc60081c","type":"message","user":"U8R597E9H","text":"上のパッチ当てても、通常のケースが壊れないことは確認。","ts":"1580981362.221000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"3OT"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"544e738e-99b3-4420-b9bd-1eb88018326d","type":"message","user":"U03C6TEAZ","text":"metals 動いてます。","ts":"1580981383.221200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ev=So"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7f6593ce-e4e6-4106-81f3-ab5485b8966d","type":"message","user":"U03C6TEAZ","text":"つまりあとは lsp-settings が適切な refresh-pattern さえ設定してやればいい、という事になるのかな？(これで動けば)","ts":"1580981516.221800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"EqWqe"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"a7c62f68-df65-4e82-a510-60b1166182eb","type":"message","user":"U8R597E9H","text":"個人的に、ここでしっかり補完前文字列削れる前提であれば、ワンちゃん refresh-pattern なくても行けそうな気がしています。","ts":"1580981647.222300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xJ6"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"72877109-0547-4d61-b031-80c213d9ef4d","type":"message","user":"U8R597E9H","text":"`&lt;/|` この状態で `/div` が返却されても、asyncomplete が適切に `/` を削るのであればうまくいきそうな。。。とはいえ、気持ち悪いので refresh-pattern があったほうがきれいに動くかもしれない。","ts":"1580981702.223700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"wPQ"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4a30c25c-70b2-4234-bd21-2454c131d01d","type":"message","user":"U03C6TEAZ","text":"でも refresh-pattern 設定してあげないと `background-color` の `color` で startcol を更新してしまいそう。","ts":"1580981704.223800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xoH"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5e7b3530-4ace-4fca-bb02-ddd50a0e4d23","type":"message","user":"U8R597E9H","text":"あああ、そのケースどうなるんだろう。","ts":"1580981733.224300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Jz/I"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7576ea3d-0eb7-4d25-bc6e-101bd5c303b9","type":"message","user":"U03C6TEAZ","text":"今は lsp-settings で - 含める様にしてるので切れないけど。","ts":"1580981754.225000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jUPf"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e3048eff-be4c-40c7-9609-b63177525958","type":"message","user":"U8R597E9H","text":"`background-|` ここで補完しても `background-color` をサーバは返してくれないのでしたっけ。。。","ts":"1580981758.225100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"howS"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4587b994-adf4-4c02-acfc-b0eab4fe757c","type":"message","user":"U03C6TEAZ","text":"今はデフォルトが `\\k` なので startcol が `background-` の後になってるみたいです。","ts":"1580981793.226100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"9VSX"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7e22c8c4-c307-4b30-8e7f-00132f3a2d9e","type":"message","user":"U8R597E9H","text":"あー、そうか、そこで `color` に補完候補を切り替えることができない。ということか。refresh-pattern も必要でした。","ts":"1580981798.226300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"G/c"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e320863c-b3a5-4143-b9bf-c7ec2e8bd8c0","type":"message","user":"U03C6TEAZ","text":"typed_pattern「俺、消えるのか？」","ts":"1580981816.227000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"8MbB7"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"926a9f43-276e-438d-bb1b-7430e51f31ae","type":"message","user":"U03C6TEAZ","text":"あ、でも vim-lsp でも単体でこの機能は持っておいた方がいいのかなぁ。","ts":"1580981865.228200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"HfW7"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"8aeb9349-8a37-4216-a514-3bca5c4e31d1","type":"message","user":"U03C6TEAZ","text":"わからん。。。","ts":"1580981868.228500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"YMI"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4d616a60-3e06-4df7-85f3-8777a5f359c9","type":"message","user":"U8R597E9H","text":"# refresh-pattern の効能\n- `background-|` に対して `background-color` と `color` が返却された場合でも、属性全体が補完候補になってるので、color に候補選択で切り替えることができる。\n\n# remove-prefix の効能\n- 仮に `call get|` に対して `call getbufline` を返すような不届きものがいても、挿入文字を削って `getbufline` に変換するのでちゃんと動くようになる\n- `&lt;/|` とかに `/div` が変えるようなケースで、refresh-pattern に `/` がなくとも、ちゃんと動くようにはなる\n\n感じかな。基本、refresh-pattern がしっかりしてればちゃんと動くけど、変な候補返されても動くように次善の策としての remove-prefix 感がありますね。","ts":"1580982010.231100","edited":{"user":"U8R597E9H","ts":"1580982059.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"el9cE"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c326c5a5-9b80-4761-8b6b-9307c11e26b7","type":"message","user":"U8R597E9H","text":"正直 vim-lsp の omni.vim ちょっとつらいですね。。。","ts":"1580982028.231500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"HC6"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e3518a58-3520-4526-80a0-7db79b875612","type":"message","user":"U03C6TEAZ","text":"vim-lsp って asyncomplete 必須じゃないんすよね。","ts":"1580982127.233000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"VenCx"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ee02b036-b550-4950-b8b1-13195b3f7581","type":"message","user":"U8R597E9H","text":"あー、そうですね。omni 補完も治すとなると、asyncomplete 側にも削る処理入れて、vim-lsp 側にも削る処理入れる感じになるのかな。。。","ts":"1580982177.233700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jmE+H"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"8050a620-f381-417f-b95c-bc9c2be2f2f3","type":"message","user":"U8R597E9H","text":"ちょっと omni.vim 読んでいます。","ts":"1580982196.233900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"QFp"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"3f93b81b-e5dc-4484-aefc-f852e0729657","type":"message","user":"U8R597E9H","text":"vim-lsp の findstart で返す値は `col('.')` のようなので、mattn さんがおっしゃってたような切り出し方でいけそうですね。\nつまり、`asyncomplete に渡す補完候補は削らずに渡す`、`vim-lsp 内部のオムニ補完の場合は、vim-lsp 側で削る処理を行う` って感じかもです。","ts":"1580982291.235400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"QX6h8"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"bf36276d-cd98-4c0f-b4f7-fe8fd94226f9","type":"message","user":"U8R597E9H","text":"`s:display_completions` ここにさっき mattn さんが作っていたパッチのような処理を入れる感じか。","ts":"1580982342.236000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"BtjV/"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"fb09df23-d3b3-479e-bc7c-75e66640fcee","type":"message","user":"U8R597E9H","text":"omni.vim むずい。","ts":"1580982473.236700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"lX9Ju"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c3361991-6261-4ae8-a22e-e8a57bef2f45","type":"message","user":"U03C6TEAZ","text":"ですね。","ts":"1580982522.236900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"+/4Y"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"bf5254a0-333a-4978-bb54-a1f33b347ab0","type":"message","user":"U03C6TEAZ","text":"出来れば refresh-pattern と typed-pattern は同じ意味だとありがたいけど違うんですよねこれ。。。","ts":"1580982546.237600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"I9w"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"07ed6aeb-a705-4f1a-8c82-f729c4dbfc94","type":"message","user":"U03C6TEAZ","text":"refresh-pattern は補完開始時点でどこを起点(startcol)にするかを getline('.') とマッチして戻りながら位置決めして決める為のパターン\ntyped-text はどこが startcol か分からないけど返ってきた補完候補の先頭部分をマッチさせて、一番短くマッチする長さを x を col('.') - x して startcol を決めるパターン","ts":"1580982873.240200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"wxc"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"fa17a11d-1970-45be-9749-da652122287c","type":"message","user":"U03C6TEAZ","text":"これ vim-lsp `lsp#omni#complete` が `col('.')` 返してるの完全に失敗だなぁ。","ts":"1580983047.241100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"MA3M"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e3dc4c15-7dca-4432-b8be-bf8096c42736","type":"message","user":"U03C6TEAZ","text":"ここでなんかのパターンで逆位置求めて [startcol, col('.')] で返す様にしてたら vim-lsp が主導権持てたのに。","ts":"1580983118.242100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"WxrE"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"48789a14-39ad-4495-ba31-78f55db6c581","type":"message","user":"U8R597E9H","text":"typed-pattern ってそういう意味だったのか。。。\nrefresh-pattern の方式のほうが vim 界では一般的な感じがするので、そっちに変えちゃいたいですね。。。\n`let l:startcol = min(map(l:typed_patterns, { _, ptrn -&gt; strlen(matchstr(lsp#utils#_get_before_line(), ptrn)) }))`","ts":"1580983421.244300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"BZXJw"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c0cb6281-fdd2-4e82-92bc-b8fc10f32b7f","type":"message","user":"U03C6TEAZ","text":"それそれ &gt; min","ts":"1580984888.244500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"O6/L"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"UM1DP54CU","text":"<@UM1DP54CU> has joined the channel","ts":"1581000406.244700","subtype":"channel_join","replace_original":false,"delete_original":false,"blocks":null}]
