[{"client_msg_id":"f8e4156b-d3c3-4513-9e6c-b175a47eb15c","type":"message","user":"UDDCM376D","text":"あるなぁ\n```[I] vim-lsp ) ag \"lsp_signs_error\"\nautoload/lsp/ui/vim/signs.vim\n60:    call s:add_sign('LspError', 'E\u0026gt;', g:lsp_signs_error)\n\nREADME.md\n151:Four groups of signs are defined and used: `LspError`, `LspWarning`, `LspInformation`, `LspHint`. It is possible to set custom text or icon that will be used for each sign (note that icons are only available in GUI). To do this, set some of the following globals: `g:lsp_signs_error`, `g:lsp_signs_warning`, `g:lsp_signs_information`, `g:lsp_signs_hint`. They should be set to a dict, that contains either text that will be used as sign in terminal, or icon that will be used for GUI, or both. For example:\n154:let g:lsp_signs_error = {'text': '✗'}\n\nplugin/lsp.vim\n18:let g:lsp_signs_error = get(g:, 'lsp_signs_error', {})```","ts":"1595760027.305300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"DAP"}]},{"client_msg_id":"67c7019e-b6d5-4dd3-9c3d-61942b554e80","type":"message","user":"UDDCM376D","text":"バナナが出ないなと思って、ヘルプを引いてみたらなくなっていた\n```  let g:lsp_signs_error = {'text': 'ｳﾎ'}\n  let g:lsp_signs_warning = {'text': '🍌'}```","ts":"1595759598.304800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xI7"}]},{"client_msg_id":"c6a64020-162d-4ab1-8865-c919b3e84b2f","type":"message","user":"UDDCM376D","text":"あれ、 vim-lspって\n```g:lsp_signs_error```\nがなくなっている…？","ts":"1595759571.304200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"8YDsh"}]},{"client_msg_id":"c90754c5-929c-4faf-aaac-3cf7dcbf938e","type":"message","user":"UG6DF6W87","text":"\u003chttps://tennashi.hatenablog.com/entry/2020/07/25/230916|https://tennashi.hatenablog.com/entry/2020/07/25/230916\u003e\n週刊 LSP 始めた(い)","ts":"1595691046.302700","thread_ts":"1595691046.302700","attachments":[{"fallback":"あれ: LSP 実装メモ (Text Document Synchronization `textDocument/didOpen` 編) - あれ","id":1,"title":"LSP 実装メモ (Text Document Synchronization `textDocument/didOpen` 編) - あれ","title_link":"https://tennashi.hatenablog.com/entry/2020/07/25/230916","text":"Language Server Protocol に従ったサーバを実装するためのメモ 仕様: Language Server Protocol Specification - 3.15 訳したやつ: tennashi/lsp_spec_ja まずは Text Document Synchronization の実装から調査する。 Text Document Synchronization とは Text Document Synchronization は LSP サーバ/クライアント間で Text Document、つまり補完などの処理をする対象のテキストファイル内のデータを同期するための仕…","image_url":"https://ogimage.blog.st-hatena.com/17680117127203294009/26006613603913459/1595686156","blocks":null,"ts":1595686156,"service_name":"あれ","service_icon":"https://cdn.image.st-hatena.com/image/apple_touch_icon/ecf1550c56dff759d6bc80aa8ba975b2d0f7b1b4/version=1/https%3A%2F%2Fcdn.user.blog.st-hatena.com%2Fblog_custom_icon%2F154545380%2F1560952205141962","from_url":"https://tennashi.hatenablog.com/entry/2020/07/25/230916","original_url":"https://tennashi.hatenablog.com/entry/2020/07/25/230916"}],"reply_count":1,"team":"T03C4RC8V","reactions":[{"name":"+1","count":8,"users":["U06BRP8VD","UDDCM376D","U7TMPGWJ0","U9S4G0LJW","U03C6TEAZ","UBNPMJJGM","UL6CFN8NR","UD73ZNZAP"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"m69RU"}]},{"client_msg_id":"0e9f0a06-e438-4a53-9536-b5a64c7cca49","type":"message","user":"UG6DF6W87","text":"お、タイトルが md もどき処理されてる\n~ で囲うサブタイトル付けたりしたら悲しくなるやつだ","ts":"1595691460.302900","thread_ts":"1595691046.302700","parent_user_id":"UG6DF6W87","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"5Pj"}]}]
