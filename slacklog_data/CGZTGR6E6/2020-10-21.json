[{"client_msg_id":"3ee7756b-12e9-46ad-92b3-899b7fee50b6","type":"message","user":"U78A6ESHM","text":"これは素晴らしい","ts":"1603290088.066400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"iES65"}]},{"client_msg_id":"d0f74264-f6e1-41df-b4f4-8f71a4664034","type":"message","user":"UAZ33BKV2","text":"\u003chttps://github.com/uetchy/textlint-rule-bittermelon\u003e\nここまで単一目的のrule初めてみた","ts":"1603290047.066000","attachments":[{"fallback":"GitHub: uetchy/textlint-rule-bittermelon","id":1,"title":"uetchy/textlint-rule-bittermelon","title_link":"https://github.com/uetchy/textlint-rule-bittermelon","text":"ゴーヤー。ゴーヤではない。. Contribute to uetchy/textlint-rule-bittermelon development by creating an account on GitHub.","thumb_url":"https://avatars0.githubusercontent.com/u/431808?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/uetchy/textlint-rule-bittermelon","original_url":"https://github.com/uetchy/textlint-rule-bittermelon"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"x46"}]},{"client_msg_id":"a5865bc6-37fa-42df-8cf3-a881ace6d2f9","type":"message","user":"U8996GYBF","text":"Hooksむずい・・・\n書いてて挙動が直感的じゃないんだけどこれは慣れなのかな・・・","ts":"1603274412.065600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"h67"}]},{"client_msg_id":"5fb7fa65-59d3-46e8-b9e1-e839f79a1419","type":"message","user":"U8996GYBF","text":"確かにそうですね、最低限のHooksのネストでよさそう","ts":"1603274369.064900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Fv3"}]},{"client_msg_id":"766f4e88-8723-4edc-8c41-59f784fcf313","type":"message","user":"U8R597E9H","text":"これで useEffect とかもなくなるし、だいぶシンプルになるかな。と","ts":"1603274337.064500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"wHt"}]},{"client_msg_id":"9b6bd95b-5e67-4949-9101-d65c6d5680c8","type":"message","user":"U8996GYBF","text":"ロジックが大分だるいだけで、重くはないはずなんですよね","ts":"1603274336.064400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"AP3Z"}]},{"client_msg_id":"b95678bf-e43e-4e1b-a8f8-5a1e5616efec","type":"message","user":"U8R597E9H","text":"仮に getSubTypes が重いなら useMemo しましょう。","ts":"1603274316.063700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Asn"}]},{"client_msg_id":"0af44b22-536d-4936-9fda-f0fb902d0f55","type":"message","user":"U8R597E9H","text":"ですです。リードで完結。はそれを意図しています。","ts":"1603274305.063400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"fgqT"}]},{"client_msg_id":"e3c84469-301f-4a46-9136-5d46e8621afc","type":"message","user":"U8996GYBF","text":"確かにそんな気はする、stateで持たせなくて普通にComponent側でrenderのタイミングで導出して扱えばいいって話ですよね","ts":"1603274293.063100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Z4/M"}]},{"client_msg_id":"725ef3f0-a830-4130-b96b-2e9793a48c94","type":"message","user":"U8R597E9H","text":"この hooks の中から setSubTypes 周りを省けばいいのかな？と思っています。","ts":"1603274241.062300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/g5"}]},{"client_msg_id":"0511f361-30d4-4851-90f8-8c4368f3b21d","type":"message","user":"U8996GYBF","text":"SubTypesの計算をComponent側に移せばシンプルになるとかであってます？","ts":"1603274214.061900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Zdrpz"}]},{"client_msg_id":"93d2311b-8648-4e6e-ab11-e81a3abaaf40","type":"message","user":"U8R597E9H","text":"リードで完結できるなら、ステートは省いたほうがよさそうです。（つまり、setSubType`s` 周りがややこしさの元凶だと思います。）","ts":"1603274162.061400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Q1h"}]},{"client_msg_id":"788f6216-8c19-4ff3-906e-5281b9b71f14","type":"message","user":"U8996GYBF","text":"実際のコードから削るとこんな感じです、かなり無駄ありそう\n```const useTypeAndSubType = ({ defaultType }: {\n  defaultType: TypeName;\n}) =\u0026gt; {\n  const [type, setType] = useType(defaultType);\n  const [subTypes, setSubTypes] = useState(getSubTypes(type));\n  const [subType, { setSubType, resetSubType }] = useSubType(subTypes);\n\n  useEffect(() =\u0026gt; {\n    setSubTypes(getSubTypes(type));\n  }, [type]);\n\n  const handleTypeChange = (_event: any, nextTypeIndex: number) =\u0026gt; {\n    setType(types[nextTypeIndex]);\n    resetSubType();\n  };\n  const handleSubTypeChange = (_event: any, nextSubTypeIndex: number) =\u0026gt; {\n    setSubType(nextSubTypeIndex);\n  };\n\n  return [{ type, subType, subTypes }, { handleTypeChange, handleSubTypeChange }] as const;\n};```","ts":"1603274101.060800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jLqD0"}]},{"client_msg_id":"6a290e16-3a62-4181-807a-11c83e091687","type":"message","user":"U8R597E9H","text":"いらないです！","ts":"1603274012.060200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"u+Zh"}]},{"client_msg_id":"05d64020-79ab-4f09-8d2e-fde9a1062d90","type":"message","user":"U8R597E9H","text":"ああ、この useCallback たしかにいらんそう。。。","ts":"1603273998.060000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"71IP+"}]},{"client_msg_id":"a35f0b84-3a3e-403e-a5e9-16821d181fe0","type":"message","user":"U8996GYBF","text":"useCallback、全く使えてないんですがこの場合ってパフォーマンス以外に影響出ます？","ts":"1603273859.059700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"KpfvJ"}]},{"client_msg_id":"ed5ca8b1-32d9-47d0-953b-f2d3488b0d4b","type":"message","user":"U8R597E9H","text":"```const useTypeAndSubType = () =\u0026gt; {\n  const [type, setType] = useState(defaultType);\n  const [subType, setSubType] = useState(defaultSubType);\n\n  return {\n    setType: useCallback((nextType: Type) =\u0026gt; {\n      if (type !== nextType) {\n        setType(nextType);\n        setSubType(defaultSubType);\n      }\n    }, [type]),\n    setSubType: setSubType\n  };\n};```\nuseCallback を書き下してるのは行儀悪いけど、こんな感じなのかな。","ts":"1603273747.059200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"3NAA"}]},{"client_msg_id":"462c132f-4e1a-439d-ae47-d087711ae738","type":"message","user":"U8996GYBF","text":"なんで `useType` が返すハンドラの中でそれ呼ぶようにしてますね\nただそれくらいならコンポーネントに表出してもいいかもって気はしてきました","ts":"1603273693.058700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dWEWR"}]},{"client_msg_id":"9bcec949-8e08-4546-9aab-901a6b30e502","type":"message","user":"U8996GYBF","text":"typeが変わるとresetSubType呼ばないといけないです","ts":"1603273580.057800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"3cESJ"}]},{"client_msg_id":"16503f0b-6532-4a08-a224-c2aabd8963cd","type":"message","user":"U8996GYBF","text":"あ、そうですね\n今書いてたんですけどそういうのも必要です","ts":"1603273543.057000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"O/J3"}]},{"client_msg_id":"104a5e56-fd4d-45e6-9b5d-b146833bffcb","type":"message","user":"U78A6ESHM","text":"\u003chttps://gist.github.com/heavenshell/6c42340537e75e6e8ae38033d0a6cec5\u003e\nAPI コールの部分をカスタムフックの関数で定義してカスタムフックから呼び出して(って書いてて意味分からんくなってきたw","ts":"1603273537.056800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"gN7"}]},{"client_msg_id":"390fdc39-bc7c-4aad-b609-b8291a56cfb5","type":"message","user":"U8R597E9H","text":"`type` 側が変化したら、`subType` を `defaultSubType` に戻す。みたいな事が必要だと面倒かもしれないな。","ts":"1603273524.056300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jHL"}]},{"client_msg_id":"937549d4-28b3-4f1b-a02d-3c777902bc7a","type":"message","user":"U8996GYBF","text":"Componentでそれだけでいけるかな、ちょっとそれも見直してみます","ts":"1603273482.055100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"YwV6"}]},{"client_msg_id":"dd1f6ee4-5bf8-4039-a8a9-fe10e35c4b57","type":"message","user":"U8R597E9H","text":"こんな感じでよさそうですけどね。","ts":"1603273424.053800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"8BL"}]},{"client_msg_id":"507885de-01e7-4bd6-b104-26fbe9932640","type":"message","user":"U8R597E9H","text":"```const type = useState(defaultType);\nconst subType = useState(defaultSubType);\nconst value = getValue(values, type, subType);```","ts":"1603273415.053500","edited":{"user":"U8R597E9H","ts":"1603273435.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"iEQBS"}]},{"client_msg_id":"14940fb6-f080-4351-9df0-cfead2e87501","type":"message","user":"U8996GYBF","text":"これ、このコンポーネントに閉じた実装なんで分ける必要は本質的にはないんですけど、分けないと多分コード読めないと思うんですよね・・・","ts":"1603273389.052900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"yrzc"}]},{"client_msg_id":"a79ef4ef-d37b-4740-a662-9942782d196a","type":"message","user":"U78A6ESHM","text":"カスタムフックの中でカスタムフックは呼んだことある。","ts":"1603273316.051600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"oFDXC"}]},{"client_msg_id":"b6da2550-0035-49e1-b539-dd21345ebbc8","type":"message","user":"U8996GYBF","text":"この辺のロジックをコンポーネントに直のuseStateとuseEffectだけで書いちゃうとすごいことになっちゃうはずなんですよね","ts":"1603272829.050900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"+CTH"}]},{"client_msg_id":"30c72123-3bb1-4e25-90bb-701a23e525a7","type":"message","user":"U8996GYBF","text":"こんなの\n```const useTypeAndSubType = (...) =\u0026gt; {\n  const [type, setType] = useType(defaultType);\n  const [subTypes, setSubTypes] = useState(getSubTypes(type));\n  const [subType, { setSubType, resetSubType }] = useSubType(subTypes);\n\n  const handleTypeChange = ...\n}```","ts":"1603272782.050200","edited":{"user":"U8996GYBF","ts":"1603273160.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ugfEN"}]},{"client_msg_id":"7c1aa8de-3d5c-4812-815f-4efae0f67d20","type":"message","user":"U8996GYBF","text":"処理分けすぎなのかなぁ\n上に大分類のタブ、左に小分類のタブが出るみたいなUIで、大分類の条件によっては小分類を出すためのロジックが変わるみたいなやつなんですよね\nだからstateの管理とか関心を切り分けるためにネストしたHooksになってるんですけど","ts":"1603272473.049400","edited":{"user":"U8996GYBF","ts":"1603272489.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=O84"}]},{"client_msg_id":"464080FD-2E6C-49B8-A2DE-E989E9D4B66E","type":"message","user":"UFHQ7TNT0","text":"カスタムフックの中でカスタムフックは呼んだことないっすねぇ","ts":"1603272302.047500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"s4l"}]},{"client_msg_id":"a0873f3b-2ce9-4907-a210-261379c20837","type":"message","user":"U8996GYBF","text":"あ、いやそこまで面倒にはなってないかも","ts":"1603272234.046900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"uNu"}]},{"client_msg_id":"57162b7e-24b3-474e-8dc4-2c20beb49496","type":"message","user":"U8996GYBF","text":"useFooの中でuseBarしてて、useBarの中で作ったハンドラをuseFoo経由でコンポーネントまで返すみたいなやつになってるんですよね","ts":"1603272200.046500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Y1bF"}]},{"client_msg_id":"4fdc15b3-3c46-45f4-8075-b4e0ef4ef2e8","type":"message","user":"U8996GYBF","text":"あー、なるほど\nこの程度ならそれでもいけそうですね\n\n書いてるコードだと処理が面倒でちょっとネストしたCustom Hooksってのもあってちょっときついかな・・・\n見てみます","ts":"1603272135.045500","edited":{"user":"U8996GYBF","ts":"1603272141.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"wqT"}]},{"client_msg_id":"3DF56CC7-E840-48A3-A0CA-DB1F8F385610","type":"message","user":"UFHQ7TNT0","text":"このサンプルコードの場合だと、setValue は使わずに indexを素直に jsx で展開しちゃいますね。そうすれば余計なステートも減るので。valuesが複雑だったら、indexをpropとして受け取るコンポーネントにします。","ts":"1603271798.044500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0Rb"}]},{"client_msg_id":"a706ed96-2d32-4797-ab7d-76bb25ec3f94","type":"message","user":"U8996GYBF","text":"なんか、こういうhooksの粒度とかどういう切り方がいいみたいなのがあれば知りたい","ts":"1603270062.041200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"YRQ=M"}]},{"client_msg_id":"e711552a-30f4-459b-9780-6941bcaf8e09","type":"message","user":"U8996GYBF","text":"分けるしかないのは多分そうですよね\nここにuseEffect置いちゃって解決するのが一般的なのかどうか分かりますか？","ts":"1603270016.040700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jQC6"}]},{"client_msg_id":"4bfe79b3-c133-4b77-823f-aafed96a46a4","type":"message","user":"UP6PA1UBE","text":"まあ実行タイミング分けるしかないのでは","ts":"1603269899.040000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/Eqd"}]},{"client_msg_id":"286a89d9-dd80-4eb3-9254-7895a4450fba","type":"message","user":"U8996GYBF","text":"useEffectに切り出して、こう・・・？","ts":"1603269488.039500","files":[{"id":"F01CXHF3T45","created":1603269487,"timestamp":1603269487,"name":"無題","title":"無題","mimetype":"text/plain","image_exif_rotation":0,"filetype":"typescript","pretty_type":"TypeScript","user":"U8996GYBF","mode":"snippet","editable":true,"is_external":false,"external_type":"","size":427,"url":"","url_download":"","url_private":"https://files.slack.com/files-pri/T03C4RC8V-F01CXHF3T45/______","url_private_download":"https://files.slack.com/files-pri/T03C4RC8V-F01CXHF3T45/download/______","original_h":0,"original_w":0,"thumb_64":"","thumb_80":"","thumb_160":"","thumb_360":"","thumb_360_gif":"","thumb_360_w":0,"thumb_360_h":0,"thumb_480":"","thumb_480_w":0,"thumb_480_h":0,"thumb_720":"","thumb_720_w":0,"thumb_720_h":0,"thumb_960":"","thumb_960_w":0,"thumb_960_h":0,"thumb_1024":"","thumb_1024_w":0,"thumb_1024_h":0,"permalink":"https://vim-jp.slack.com/files/U8996GYBF/F01CXHF3T45/______","permalink_public":"https://slack-files.com/T03C4RC8V-F01CXHF3T45-4920c8af71","edit_link":"https://vim-jp.slack.com/files/U8996GYBF/F01CXHF3T45/______/edit","preview":"const Foo = () =\u003e {\n  const values = {\n    0: 'foo',\n    1: 'bar',\n  };","preview_highlight":"\u003cdiv class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\"\u003e\n\u003cdiv class=\"CodeMirror-code\"\u003e\n\u003cdiv\u003e\u003cpre\u003e\u003cspan class=\"cm-keyword\"\u003econst\u003c/span\u003e \u003cspan class=\"cm-def\"\u003eFoo\u003c/span\u003e \u003cspan class=\"cm-operator\"\u003e=\u003c/span\u003e () \u003cspan class=\"cm-operator\"\u003e=\u0026gt;\u003c/span\u003e {\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e  \u003cspan class=\"cm-keyword\"\u003econst\u003c/span\u003e \u003cspan class=\"cm-def\"\u003evalues\u003c/span\u003e \u003cspan class=\"cm-operator\"\u003e=\u003c/span\u003e {\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e    \u003cspan class=\"cm-number cm-property\"\u003e0\u003c/span\u003e: \u003cspan class=\"cm-string\"\u003e'foo'\u003c/span\u003e,\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e    \u003cspan class=\"cm-number cm-property\"\u003e1\u003c/span\u003e: \u003cspan class=\"cm-string\"\u003e'bar'\u003c/span\u003e,\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e  };\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n","lines":26,"lines_more":21,"is_public":true,"public_url_shared":false,"channels":null,"groups":null,"ims":null,"initial_comment":{},"comments_count":0,"num_stars":0,"is_starred":false,"shares":{"public":null,"private":null},"display_as_bot":false,"has_rich_preview":false,"username":""}],"upload":true,"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"9N="}]},{"client_msg_id":"9c0eb298-cbf2-4b28-8914-321807f1345e","type":"message","user":"U8996GYBF","text":"こんな感じのコードが書きたいんですが、 `setIndex` の直後に `index` が目的の値になっていなくてうまく動作しないんですが、どういう書き方するといい感じになりそうでしょうか。\nこの例だと `setValue(values[i])` したら動くんですけど、実際に書いてるコードはindex周りがCustom Hooksになっているからsetで更新された `index` を使いたく・・・","ts":"1603269346.039200","files":[{"id":"F01D0RZRVBM","created":1603269345,"timestamp":1603269345,"name":"無題","title":"無題","mimetype":"text/plain","image_exif_rotation":0,"filetype":"typescript","pretty_type":"TypeScript","user":"U8996GYBF","mode":"snippet","editable":true,"is_external":false,"external_type":"","size":394,"url":"","url_download":"","url_private":"https://files.slack.com/files-pri/T03C4RC8V-F01D0RZRVBM/______","url_private_download":"https://files.slack.com/files-pri/T03C4RC8V-F01D0RZRVBM/download/______","original_h":0,"original_w":0,"thumb_64":"","thumb_80":"","thumb_160":"","thumb_360":"","thumb_360_gif":"","thumb_360_w":0,"thumb_360_h":0,"thumb_480":"","thumb_480_w":0,"thumb_480_h":0,"thumb_720":"","thumb_720_w":0,"thumb_720_h":0,"thumb_960":"","thumb_960_w":0,"thumb_960_h":0,"thumb_1024":"","thumb_1024_w":0,"thumb_1024_h":0,"permalink":"https://vim-jp.slack.com/files/U8996GYBF/F01D0RZRVBM/______","permalink_public":"https://slack-files.com/T03C4RC8V-F01D0RZRVBM-ac4b974814","edit_link":"https://vim-jp.slack.com/files/U8996GYBF/F01D0RZRVBM/______/edit","preview":"const Foo = () =\u003e {\n  const values = {\n    0: 'foo',\n    1: 'bar',\n  };","preview_highlight":"\u003cdiv class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\"\u003e\n\u003cdiv class=\"CodeMirror-code\"\u003e\n\u003cdiv\u003e\u003cpre\u003e\u003cspan class=\"cm-keyword\"\u003econst\u003c/span\u003e \u003cspan class=\"cm-def\"\u003eFoo\u003c/span\u003e \u003cspan class=\"cm-operator\"\u003e=\u003c/span\u003e () \u003cspan class=\"cm-operator\"\u003e=\u0026gt;\u003c/span\u003e {\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e  \u003cspan class=\"cm-keyword\"\u003econst\u003c/span\u003e \u003cspan class=\"cm-def\"\u003evalues\u003c/span\u003e \u003cspan class=\"cm-operator\"\u003e=\u003c/span\u003e {\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e    \u003cspan class=\"cm-number cm-property\"\u003e0\u003c/span\u003e: \u003cspan class=\"cm-string\"\u003e'foo'\u003c/span\u003e,\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e    \u003cspan class=\"cm-number cm-property\"\u003e1\u003c/span\u003e: \u003cspan class=\"cm-string\"\u003e'bar'\u003c/span\u003e,\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e  };\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n","lines":24,"lines_more":19,"is_public":true,"public_url_shared":false,"channels":null,"groups":null,"ims":null,"initial_comment":{},"comments_count":0,"num_stars":0,"is_starred":false,"shares":{"public":null,"private":null},"display_as_bot":false,"has_rich_preview":false,"username":""}],"upload":true,"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Fxm"}]},{"client_msg_id":"5bc8d78e-1d1a-4017-883b-47e0c94d3a31","type":"message","user":"UTAG7R971","text":"自己解決しました。\n先週リリースされた v13 (remark-parse v9.0.0) から、アンダースコアを解釈する pedantic オプションが廃止されていたようです。\nremark-parse v8.0.3 にバージョンダウンしたところ、アンダースコアが使用できました。\n\u003chttps://github.com/remarkjs/remark/releases/tag/13.0.0\u003e","ts":"1603260582.038500","thread_ts":"1603257420.038400","attachments":[{"fallback":"GitHub: Release 13.0.0 (micromark) · remarkjs/remark","id":1,"title":"Release 13.0.0 (micromark) · remarkjs/remark","title_link":"https://github.com/remarkjs/remark/releases/tag/13.0.0","text":"This is a giant change for remark. It replaces the 5+ year old internals with a new low-level parser: micromark. The old internals have served billions of users well over the years, but markdown ha...","thumb_url":"https://avatars0.githubusercontent.com/u/16309564?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/remarkjs/remark/releases/tag/13.0.0","original_url":"https://github.com/remarkjs/remark/releases/tag/13.0.0"}],"subtype":"thread_broadcast","reactions":[{"name":"clap::skin-tone-5","count":3,"users":["UAZ33BKV2","U78A6ESHM","U8996GYBF"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"NIeP"}],"root":{"client_msg_id":"fdae65e2-6df3-4ded-8ed5-c272751fede6","type":"message","user":"UTAG7R971","text":"Gatsby.js の `gatsby-transformer-remark` を使って Markdown をパースすると、\n```日本語文中で_分かち書きなしで_強調ができる```\n上のように、スペースで区切らずにアンダースコアを使った強調構文が認識される (= アスタリスクによる強調と同じ動きになる) のですが、\n素の `remark-parse`  → `remark-rehype` → `rehype-stringify` で変換すると、スペースで区切らないアンダースコアが `em` と見なされません。\n(CommonMark の仕様上は素の remark の動作が正しいとは思いますが、Gatsby.js の挙動の方が日本人にとっては助かります。)\nできれば素の remark でも Gatsby と同じ動きをさせたく、調べております。どこに違いがあってこのような挙動の差異が発生するのか、分かる方いませんでしょうか？","ts":"1603257420.038400","thread_ts":"1603257420.038400","reply_count":1,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Ol=g"}]}},{"client_msg_id":"fdae65e2-6df3-4ded-8ed5-c272751fede6","type":"message","user":"UTAG7R971","text":"Gatsby.js の `gatsby-transformer-remark` を使って Markdown をパースすると、\n```日本語文中で_分かち書きなしで_強調ができる```\n上のように、スペースで区切らずにアンダースコアを使った強調構文が認識される (= アスタリスクによる強調と同じ動きになる) のですが、\n素の `remark-parse`  → `remark-rehype` → `rehype-stringify` で変換すると、スペースで区切らないアンダースコアが `em` と見なされません。\n(CommonMark の仕様上は素の remark の動作が正しいとは思いますが、Gatsby.js の挙動の方が日本人にとっては助かります。)\nできれば素の remark でも Gatsby と同じ動きをさせたく、調べております。どこに違いがあってこのような挙動の差異が発生するのか、分かる方いませんでしょうか？","ts":"1603257420.038400","thread_ts":"1603257420.038400","reply_count":1,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Ol=g"}]},{"client_msg_id":"98192510-5f69-42e1-9c96-3fe3b6b80892","type":"message","user":"U8996GYBF","text":"TSには `||=` いつ入るんだろ","ts":"1603253179.038200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"VRLor"}]},{"client_msg_id":"67b6a4ab-2193-49c4-9472-c1aed11ca115","type":"message","user":"U03C71D7H","text":"```const ev = new Event(\"foo\");\ntarget.dispatchEvent(new Event(\"foo\"));```\n微妙に間違ってる予感する (渡すのは `ev` では)","ts":"1603246801.037400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"zno"}]},{"client_msg_id":"0d79de42-0efa-4aa4-b2f1-b0a3fa58da5f","type":"message","user":"U06ECBRTJ","text":"\u003chttps://ja.wikipedia.org/wiki/Node.js#%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9\u003e 半年ごとに出てますからね","ts":"1603246773.036800","attachments":[{"fallback":"wikipedia: Node.js","id":1,"author_name":"Wikipedia","author_link":"https://ja.wikipedia.org/","title":"Node.js","title_link":"https://ja.wikipedia.org/wiki/Node.js#%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9","text":"Node.js はV8 JavaScriptエンジン上に構築されたJavaScript実行環境の1つである。イベント化された入出力を扱うサーバーサイドJavaScript環境であり、Webサーバなどのスケーラブルなネットワークプログラムの記述を意図している。ライアン・ダールによって2009年に作成され、ダールを雇用しているJoyentの支援により成長している。","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Node.js_logo.svg/1200px-Node.js_logo.svg.png","blocks":null,"service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","from_url":"https://ja.wikipedia.org/wiki/Node.js#%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9","original_url":"https://ja.wikipedia.org/wiki/Node.js#%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9"}],"team":"T03C4RC8V","reactions":[{"name":"naruhodo","count":1,"users":["UD1FQV38V"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"mfP"}]},{"client_msg_id":"2c40d240-c342-4626-a29f-cdab71868e51","type":"message","user":"UD1FQV38V","text":"リリースサイクル早い…(pythonの感覚","ts":"1603246743.036500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0hf+r"}]},{"client_msg_id":"f3e7176b-61b2-403a-88e4-1c8135f76a85","type":"message","user":"U06ECBRTJ","text":"10で2年半前なのか…","ts":"1603246696.036000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"z/5ry"}]},{"client_msg_id":"be206bb1-a4e8-4b80-bb1a-0c2d9f77774c","type":"message","user":"U06ECBRTJ","text":"node、もう15なのか… 10が出たのも最近だと思ってたけど…","ts":"1603246653.035700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Yt6sF"}]},{"client_msg_id":"bbe1d04e-fa8e-4598-bbb3-d2b43ec910e1","type":"message","user":"U03C71D7H","text":"`||=` 使えるようになるのか。やっと…","ts":"1603246491.035200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"9HJ++"}]},{"client_msg_id":"abd9982f-11e1-44e8-894c-8a57f9da9904","type":"message","user":"UAZ33BKV2","text":"\u003chttps://shisama.hatenablog.com/entry/2020/10/21/004612\u003e\nリリースされました\nGitHub Actionsのsetup-nodeでも動作確認\u0026amp;期待した動き(npmだけど)も見れた","ts":"1603246327.034700","attachments":[{"fallback":"別にしんどくないブログ: Node.js v15 の主な変更点 - 別にしんどくないブログ","id":1,"title":"Node.js v15 の主な変更点 - 別にしんどくないブログ","title_link":"https://shisama.hatenablog.com/entry/2020/10/21/004612","text":"10/20 にリリースされた Node.js v15 の主な変更点を紹介します。 \u003chttp://nodejs.org|nodejs.org\u003e 15,000 文字以上あるので、適宜気になったところをお読みください。 npm v7 が同梱 V8 v8.6 ES2021 の機能追加 Promise.any and AggregateError String.prototype.replaceAll Logical assignment operators Web Crypto API の追加 AbortController の追加 EventTarget の追加 Node.js EventTarget vs. DOM EventTarg…","image_url":"https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shisama/20200422/20200422011813.png","blocks":null,"ts":1603208772,"service_name":"別にしんどくないブログ","service_icon":"https://cdn.image.st-hatena.com/image/apple_touch_icon/822f578c9b824cd187aee818210e6ee6b4efebc3/version=1/https%3A%2F%2Fcdn.user.blog.st-hatena.com%2Fblog_custom_icon%2F136385929%2F1524246167193099","from_url":"https://shisama.hatenablog.com/entry/2020/10/21/004612","original_url":"https://shisama.hatenablog.com/entry/2020/10/21/004612"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"GreT/"}]}]
