[{"type":"message","user":"UAZ33BKV2","text":"<@UAZ33BKV2> has joined the channel","ts":"1577071993.002000","subtype":"channel_join","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"a5618c92-cb22-482f-a88b-65b2ec9fc616","type":"message","user":"UAZ33BKV2","text":"<https://vim-jp.slack.com/archives/C03C4RC9F/p1577071959245400>","ts":"1577071997.002200","attachments":[{"fallback":"[December 22nd, 2019 7:32 PM] tsuyoshi_cho: <https://www.atmarkit.co.jp/ait/articles/1912/23/news041.html>\n名実共に?","id":1,"author_id":"UAZ33BKV2","author_name":"Tsuyoshi CHO","author_subname":"Tsuyoshi CHO","author_link":"https://vim-jp.slack.com/team/UAZ33BKV2","author_icon":"https://avatars.slack-edge.com/2018-05-31/373472791093_ed16847a152da533e013_48.png","text":"<https://www.atmarkit.co.jp/ait/articles/1912/23/news041.html>\n名実共に?","mrkdwn_in":["text"],"blocks":null,"footer":"Posted in #random","ts":1577071959.245400,"from_url":"https://vim-jp.slack.com/archives/C03C4RC9F/p1577071959245400","original_url":"https://vim-jp.slack.com/archives/C03C4RC9F/p1577071959245400"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"GLL"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"42033ba6-b16a-4e35-a2c0-c95a920cdfbe","type":"message","user":"UDDCM376D","text":"ほお","ts":"1577072965.002700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"62UH"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"1115c6ba-b839-4d8a-aee4-4b470c47be23","type":"message","user":"U776661HA","text":"&gt;  Literal Types `type Foo = \"A\" | \"B\" | \"C\";` 的なやつ。これで、特定の string の型が `Foo` の型に代入できるかを実行時に判定する方法って何があるでしょう? できれば `\"A\" \"B\" \"C\"` の部分を DRY にしたい\n亀ですが\n\n```export const validFoo = [\"A\", \"B\", \"C\"] as const;\nexport type Foo = typeof validFoo[number];```","ts":"1577098875.003700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"VUBp"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"270e84ff-c16c-4486-b72b-aa561e17bc8c","type":"message","user":"U776661HA","text":"これが一番素直かなと思います","ts":"1577098915.004300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"D0NV"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7c3c777e-531d-400e-b013-02ae8638bc6f","type":"message","user":"U776661HA","text":"一応 mention しとく <@U03C71D7H>","ts":"1577098954.004600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Pqk"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6aaff07f-bf4b-4e53-83ce-10a639040f6b","type":"message","user":"U78A6ESHM","text":"あじゅこんすと~","ts":"1577099095.004900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"oMCc"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"372d9630-2e70-4daf-9887-a0d59705ac52","type":"message","user":"U776661HA","text":"`const xxx = yyy as const` は「おまえはいったいなにをいってるんだ」という気分にさせてくれるのでおすすめです","ts":"1577099139.005400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=sOpL"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c56860e8-5f49-41a4-8ee7-0cc9fb89fc90","type":"message","user":"U03C71D7H","text":"as const とは…","ts":"1577099715.005700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"+GyK"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"677681da-66f6-46e2-938c-798d586453f3","type":"message","user":"U03C71D7H","text":"これ undefined は入っちゃわないのか (範囲外の参照時)","ts":"1577099778.006900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"zsy"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5d6b9f3f-ac7b-4c5a-b31b-d10d63d1273f","type":"message","user":"U8996GYBF","text":"多分大丈夫です\n```$ ts-node\n&gt; export const validFoo = [\"A\", \"B\", \"C\"] as const;\n[ 'A', 'B', 'C' ]\n&gt; export type Foo = typeof validFoo[number];\nundefined\n&gt; const hoge: Foo = undefined\n[eval].ts:3:7 - error TS2322: Type 'undefined' is not assignable to type '\"A\" | \"B\" | \"C\"'.```","ts":"1577099881.007200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/gKA"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f9072622-1308-4497-8ae7-f8e1729b879f","type":"message","user":"U78A6ESHM","text":"as const の存在すっかり忘れてた。","ts":"1577100754.007600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"+ZOg"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"befdded8-cfa3-4698-97f3-894309a5605a","type":"message","user":"U03C71D7H","text":"文字列と同じ名前で定数を用意するのはできるだろうか","ts":"1577101648.008300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"94rx"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"91e0737b-28db-4797-9421-e735784ddc82","type":"message","user":"U8R597E9H","text":"オブジェクトを経由すると擬似的にいけますね。Status.A みたいな感じで…。","ts":"1577102892.010400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"k1L"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"}]
