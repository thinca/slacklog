[{"client_msg_id":"7B959DF4-D7B3-4E87-9AD8-341B7F8FB422","type":"message","user":"UFHQ7TNT0","text":"<https://www.kabuku.co.jp/developers/good-bye-typescript-enum|https://www.kabuku.co.jp/developers/good-bye-typescript-enum>\nbabel 使わなければ、enum （特に const enum）は悪い選択肢じゃないと思うんだけど、そんなに嫌われてる？","ts":"1583046704.015300","attachments":[{"fallback":"株式会社カブク: さようなら、TypeScript enum | Kabuku Developers Blog","id":1,"title":"さようなら、TypeScript enum | Kabuku Developers Blog","title_link":"https://www.kabuku.co.jp/developers/good-bye-typescript-enum","text":"フロントエンドエンジニアの今村です。TypeScriptではenumを使わずunion型を使いましょう、という話を書きます。 モチベーション 何を今さら、と思う方もいるかもしれません。 TypeScriptのunion型はenum的なものを表現可能であり、基本的にenumよりもunion型を使うべき、という意識を持っているTypeScriptプログラマーはすでに少なからずいるのではないかと思います。しかし、ではenumの使用はいかなる場合も避けるべきなのか、そうでないとしたらどのような基準でenumとunion型を使い分けるべきなのか、といった点について、広く合意の取れたガイドラインはなさそうです（少なくとも私は知りません）。この結果、コードレビューなどで少しやりづらさを感じることがあったので、白黒つけてしまいたいという気持ちからこのブログを書いています。 結論としては、enumは全面的に禁止し、常にunion型を使うのが分かりやすいと考えます。TypeScriptの世界でこの考えに一定の合意が得られ、プログラマーが当たり前のようにリンターでenumの使用を禁止し、enumかunion型かで悩んだり、コードレビューで議論したりすることがなくなればいいと思います。 Stack Overflowでも、enumとunion型の使い分けについての質問があったため、すでに同様の内容を回答しました。もし同意いただけたら、Stack Overflowの方もupvoteしてもらえると嬉しいです。enum廃絶の輪を世界に広げたい。 基礎知識 enum、const enum、union型について簡単に説明します。 コンパイル前: // 数値のenum enum NumberEnum { // 数値は明示的に割り当てることも可能 Foo, Bar, Baz } const numberEnum: NumberEnum = NumberEnum.Foo; // 文字列のenum enum StringEnum { Foo = 'foo', Bar = 'bar', Baz = 'baz' } const stringEnum = StringEnum.Foo; // const enum // （文字列も利用可能だが、コンパイルに関して挙動の違いはないため数値の例のみ） const","image_url":"https://www.kabuku.co.jp/wp/wp-content/uploads/2020/02/cut60_thankyou-2400x1602-1024x684.jpg","blocks":null,"service_name":"株式会社カブク","service_icon":"https://www.kabuku.co.jp/wp/wp-content/themes/kabuku2018/favicon.ico","from_url":"https://www.kabuku.co.jp/developers/good-bye-typescript-enum","original_url":"https://www.kabuku.co.jp/developers/good-bye-typescript-enum"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"MjiJo"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5e96e670-eac0-4e61-9460-a38602a22cff","type":"message","user":"U78A6ESHM","text":"swagger-generator が Enum 生成してくるので特に気にせず使っとります。","ts":"1583046788.016100","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":1,"users":["UFHQ7TNT0"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"RLDD"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ff51f0f9-8fd1-40b6-bfbf-bd83ed9fbba3","type":"message","user":"UAZ33BKV2","text":"むしろバックエンドに陰蔽することもTypeScriptの良さだし、そこで柔軟に出来るみたいな雑論議にすると、つまるところTypeScriptのなにかは、「それJavaScriptでできるよ」でしかなくなる\n標準に入るか、も大事だけど、無駄に複雑なことを書かなくてよくなる、も大事だとは思う(標準化したらいいな、とも思うが)","ts":"1583046941.017800","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":1,"users":["UFHQ7TNT0"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ZiXSo"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5D02804B-FFDB-4D10-A46E-D1D60384FA83","type":"message","user":"UFHQ7TNT0","text":"この手の話は、単にunionの方が直感的で、enumは仕様を理解する学習コストがあるってだけの話のような気がするんですよねー","ts":"1583047069.019300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"c7wvy"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ada433c2-f39a-47a1-a4f9-28b2c5ac71ad","type":"message","user":"U03C71D7H","text":"&gt; type Permission = typeof Permission[keyof typeof Permission];\n直感的…?","ts":"1583047154.019500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"TDvB"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"a05edf37-cda0-4512-894b-16fb8a30e61d","type":"message","user":"U78A6ESHM","text":"&gt; 3. 数値のenumは型安全ではない\nこれはまぁわかる。","ts":"1583047287.019800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Yh=g"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"9425B1C7-63DB-4334-B75D-9517A7740895","type":"message","user":"UFHQ7TNT0","text":"&gt; 直感的\n\n何も考えずに使っても特に事故らないという意味で！","ts":"1583047409.021000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"56u"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d4531bf3-6315-4a2f-b264-efd6ea212a09","type":"message","user":"UAZ33BKV2","text":"手間かかる準備がいるなら、それを処理できるようにenumのトランスパイルを最適化してほしい感はある(穴があるのは了解なので、そこは対処してほしい)","ts":"1583048207.022300","team":"T03C4RC8V","reactions":[{"name":"naruhodo","count":1,"users":["UFHQ7TNT0"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1skc0"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"}]
