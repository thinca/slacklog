[{"client_msg_id":"77e2d511-9fc5-4650-b541-6764e4c2883a","type":"message","user":"UDDCM376D","text":"[質問]\n｀:%!{cmd}｀ って、カレントバッファの中身をパイプで ｀{cmd}｀ に渡して、コマンドの出力結果をバッファに挿入する\nという動きの認識であっていますか？ （編集済み）\n\n[20:41]\n｀:r !{cmd}｀ と ｀:w !{cmd}｀ をまとめて実行した様なイメージですが、内部ではどういう動きになっているのかなぁと","ts":"1568893391.081000","edited":{"user":"UDDCM376D","ts":"1568893473.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6e90233a-66c9-414e-864d-6df9d8917b68","type":"message","user":"U03C71D7H","text":"だいたいその感じのはずです。","ts":"1568894268.081400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"36ce26c8-0ffe-4559-8ab5-3bd5a0012cc1","type":"message","user":"UDDCM376D","text":"`%` のように範囲指定をしなければ、コマンドになにも渡されない\n範囲指定があった場合、その範囲の中身をパイプでコマンドに渡し、結果を挿入（というか置換？）する\nって動きなんですが、パイプって理解であっているのか不安","ts":"1568894438.082800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5570980e-54ec-411b-a17d-7476859e852d","type":"message","user":"U03C71D7H","text":"パイプと言うよりかは標準入力ですかね。実際には一旦ファイルに書き出してファイルをリダイレクトみたいな感じだったと思いますが、ほとんどの場合においては大きな違いはないはずです。","ts":"1568895408.083900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6e391d1f-4b78-4335-91c2-049b33fcd45c","type":"message","user":"UDDCM376D","text":"標準入力なのかパイプなのか、ちょっとそこらへん疑問に思っているところがあって","ts":"1568895491.084500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d1b4c50f-95ca-4684-bb73-b6891d0db143","type":"message","user":"UDDCM376D","text":"`jq` ってパイプで渡ってきたJSONを整形するんですよね？\n`gjo name=gorilla | jq` みたいな","ts":"1568895529.085200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c1b1c81c-e1dc-4c1d-91eb-56d3ab18cd8f","type":"message","user":"UDDCM376D","text":"あー","ts":"1568895609.086200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ce287037-d7ee-4dea-aa22-bc1448e89116","type":"message","user":"UDDCM376D","text":"ファイルをリダイレクトって `jq &lt; file` ってことですかね？","ts":"1568895624.086600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"72074a56-2a7f-414e-bcfd-a73d42afe2fa","type":"message","user":"UDDCM376D","text":"`gjo &lt; $(gjo name=gorilla)` でファイルが無いって怒られたから、ファイルを使ってリダイレクトじゃないとダメなのか","ts":"1568895728.087300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ac958bf6-0efa-4dcc-b26d-f4c9eb708965","type":"message","user":"UDDCM376D","text":"なるほど","ts":"1568895730.087500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6294899e-3111-4133-a377-fcd3a3237ebd","type":"message","user":"U03C71D7H","text":"`&lt;` の右側はファイル名ですね。この辺りは使ってるシェルに依存します。シェルが処理しているので。","ts":"1568895823.088000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7c14bfd3-94ad-4d95-8364-71b87d3c1094","type":"message","user":"UDDCM376D","text":"なる","ts":"1568895851.088400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"78afceba-89a6-4a04-9673-bc55958e1099","type":"message","user":"UDDCM376D","text":"でもあれか、どのみちパイプにしろ、リダイレクトにしろ、コマンドの標準入力になるのか","ts":"1568895912.089300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"b4533a5b-324b-4b61-9932-5853514c3522","type":"message","user":"U03C71D7H","text":"ですです","ts":"1568895918.089600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6ae3e95c-1384-4fed-b25a-282f6e1b93e1","type":"message","user":"UDDCM376D","text":"つまり標準入力って説明すれば間違いないな","ts":"1568895930.089800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"42049b9b-8f72-4be1-9715-21ab7362d8f1","type":"message","user":"UDDCM376D","text":"整理完了","ts":"1568895934.090000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"fd1c6dfe-7fa4-433b-ab6f-8a1665df78e1","type":"message","user":"UDDCM376D","text":"ありがとうございます","ts":"1568895935.090200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"UNJ2DANJC","text":"<@UNJ2DANJC> has joined the channel","ts":"1568899766.090400","subtype":"channel_join","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"f53fe8ab-d7a2-4ab2-9021-6ac92d32882b","type":"message","user":"UDDCM376D","text":"[質問]\n`job_start()` で外部コマンドが正常に実行できたのに、`ex_cb` で受け取ったステータスコードが-1になります。\nただ、 `out_cb`を指定してあった場合はステータスコードが0になります。\nこれ、ばぐっぽい気がしますがどうなんでしょうか？","ts":"1568900867.092300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"fe2e0d81-a075-49bd-9a68-dd3464aed921","type":"message","user":"UDDCM376D","text":"補足\n正常にコマンドを実行できたと判断した理由は\n- `err_cb` は呼ばれていなかった（エラーにならなかった）\n- `out_cb` では正常終了時の標準出力結果がちゃんと出ている\nです\n\n実行したコマンドは次になります。\n```\nlet cmd = ['docker', 'load', '-i', a:ctx.file]\ncall job_start(cmd, {\n\t\t\t\\ 'exit_cb': function('s:image_load_cb', [a:ctx, a:updatefunc]),\n\t\t\t\\ 'out_cb': function('s:load_out'),\n\t\t\t\\ })\n```","ts":"1568900961.094000","edited":{"user":"UDDCM376D","ts":"1568901075.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f5568158-ef98-4960-b755-5d3e03f63e5d","type":"message","user":"U03C6TEAZ","text":"docker コマンドが標準出力に write した際の結果を見ているのであれば `out_cb` 未指定でエラーになってもおかしくないですね。","ts":"1568902171.095000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e21c14e2-aa39-4fdc-a0f1-589f3293d921","type":"message","user":"U72TB62UF","text":"`質問です`\n\n以下のコードで、jsonのrowの値を更新しようとしたところ、\n\n```\nlet l:json['datas'] = [{row: 10, col: 20}, {row: 30, col: 40}] json_decode済み\ncall map(l:json['datas'], 'v:val.row + 10')\necho l:json\n```\n結果が `[20, 30]` となってしまい、jsonが上書きされてしまいます。\nrowの部分だけ更新するには、指定する方法があるのでしょうか。","ts":"1568867374.069700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"a13e35e7-843a-41bb-8d00-fe55b63e5e6d","type":"message","user":"U03C71D7H","text":"`datas` もなくなってしまっている?","ts":"1568867512.070000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d00062ab-9b7c-41e5-8503-d96a49e69b27","type":"message","user":"U03C71D7H","text":"(`datas` ...)","ts":"1568867520.070300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"8cad677a-b5fc-4baa-babe-fe46bf3e8776","type":"message","user":"U03C6TEAZ","text":"map は各 element を評価値に置き換える破壊ありの関数","ts":"1568867583.070900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"9441176e-fa06-4438-bf81-01079b9094e4","type":"message","user":"U03C6TEAZ","text":"なのでやってるのは `{'row': 10, 'col': 20}` を 20 とかで置き換えてしまう。","ts":"1568868246.071800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"1b972fa9-6422-4750-ab5f-7f9fd14f18ff","type":"message","user":"U72TB62UF","text":"data（複数形）でしたね……（ ；´。 ｀；）","ts":"1568868252.072000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6b57fee2-f475-4d47-8756-b546c281ebac","type":"message","user":"U03C6TEAZ","text":"頑張らないやり方だと\n```\nfunction s:update(k, v)\n\tlet a:v.row += 10\n\treturn a:v\nendfunction\n\nfunction s:test()\n  let l:json = {}\n  let l:json['datas'] = [{'row': 10, 'col': 20}, {'row': 30, 'col': 40}]\n  let l:json = map(l:json['datas'], function('s:update'))\n  echo l:json\nendfunction\n```","ts":"1568868267.072400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"206f5052-fb61-45bd-8deb-42b80e133961","type":"message","user":"U03C6TEAZ","text":"少しがんばるほうだと","ts":"1568868315.072700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"3624e5a0-79f0-46ab-bd19-265f0c7c9bc8","type":"message","user":"U03C6TEAZ","text":"```\nfunction s:test()\n  let l:json = {}\n  let l:json['datas'] = [{'row': 10, 'col': 20}, {'row': 30, 'col': 40}]\n  call map(l:json['datas'], {k, v -&gt; [execute('let v.row += 10'), v][1]})\n  echo l:json\nendfunction\n```","ts":"1568868319.073000","edited":{"user":"U03C6TEAZ","ts":"1568868475.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"00a9249d-ade9-4657-93d7-f292ca039443","type":"message","user":"U72TB62UF","text":"下のはlambdaでしったけ","ts":"1568868342.073300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"901f2ebd-b414-46dc-83e7-a9db347b47d0","type":"message","user":"U72TB62UF","text":"試行錯誤していて薄々感じてはいましたが、map1行でスマートにいく方法はないのですね","ts":"1568868376.074100","edited":{"user":"U72TB62UF","ts":"1568868391.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"36b53263-9010-4263-8606-02d220ed0bba","type":"message","user":"U03C71D7H","text":"`call map(l:json['datas'], 'extend(v:val, {\"row\": v:val.row + 10})')`","ts":"1568868403.074800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"a8f030f1-c162-415c-af67-12520522d88e","type":"message","user":"U72TB62UF","text":":h extend","ts":"1568868430.075000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U894RTUJY","text":"```\nextend({expr1}, {expr2} [, {expr3}])                    *extend()*\n                {expr1}と{expr2}は両方ともリスト|List|であるか、両方とも辞書\n                |Dictionaries|でなければならない。\n \n                両方ともリストであるなら、{expr2}を{expr1}に付け加える。\n                {expr3}が指定された場合は、{expr1}の第{expr3}番目の要素の前に\n                {expr2}の要素を挿入する。{expr3}が0のときは最初の要素の前に挿\n                入する。{expr3}がlen({expr1})に等しいときは末尾に{expr2}が付け\n                加えられる。\n                例:  \n                        :echo sort(extend(mylist, [7, 5]))\n                        :call extend(mylist, [2, 3], 1)\n                {expr1} が {expr2} と同じリストである場合、コピーされる要素の\n                数はリストの元の長さと同じである。\n                例として {expr3} が 1 のとき、最初の要素の N 個の新しいコピー\n                が挿入される(ここで N はリストの元の長さ)。\n                リストに1個の要素を加えるには|add()|を使う。2つのリストを連結\n                して新しいリストを作るには演算子+を使う:  \n                        :let newlist = [1, 2, 3] + [4, 5]\n \n                両方とも辞書である場合:\n                {expr2}の全要素を{expr1}に加える。\n                {expr1}と{expr2}で共通のキーがある場合は、{expr3}によって動作\n                が決まる:\n                {expr3} = \"keep\" の場合: {expr1}の値そのままにする\n                {expr3} = \"force\" の場合: {expr2}の値で上書きする\n```","ts":"1568868432.075100","bot_id":"B894RTUCU","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"8a293513-e589-4791-9698-e491ef064fce","type":"message","user":"U72TB62UF","text":"lambda新しくて使えるのかなと思ったら、2016年くらいにはもう使えるようになっていたのか\n<http://secret-garden.hatenablog.com/entry/2016/09/21/234427>","ts":"1568868550.075800","attachments":[{"fallback":"Secret Garden(Instrumental): Vim 8.0 で追加された Vim script の機能 Lambda - Secret Garden(Instrumental)","id":1,"title":"Vim 8.0 で追加された Vim script の機能 Lambda - Secret Garden(Instrumental)","title_link":"http://secret-garden.hatenablog.com/entry/2016/09/21/234427","text":"Vim 8.0 ではついに Vim script に Lambda が追加されました！ Lambda を定義する場合は { args -&gt; expr } という構文を使用します。 \" Lambda は関数参照を返す \" epxr にはその名の通り \"式\" のみ書くことができる let F = { a, b -&gt; a + b } echo F(1, 2) \" =&gt; 3 また filter() 関数などに直接 Lambda を渡すことも出来ます。 echo filter(range(1, 10), { index, val -&gt; val % 2 == 0 }) \" =&gt; [2, 4, 6, 8, …","image_url":"https://ogimage.blog.st-hatena.com/8454420450083857220/10328749687185570849/1474499490","blocks":null,"ts":1474469067,"service_name":"Secret Garden(Instrumental)","service_icon":"https://cdn.blog.st-hatena.com/images/touch-icon-iphone-retina.png","from_url":"http://secret-garden.hatenablog.com/entry/2016/09/21/234427","original_url":"http://secret-garden.hatenablog.com/entry/2016/09/21/234427"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"aef6f4da-1370-4e4c-b5b1-6567e636ce41","type":"message","user":"U72TB62UF","text":"```\n\t\t{expr2}が|Funcref|の場合は、2つの引数で呼び出される:\n\t\t\t1. 現在の要素のキーまたはインデックス。\n\t\t\t2. 現在の要素の値。\n```\nmap()でこんなのあったのか","ts":"1568868757.076500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5e102859-3845-4662-bb8c-3a7e333970b6","type":"message","user":"U72TB62UF","text":"extend()も知らないことばかりだ…（ ；´。 ｀；）","ts":"1568868828.077100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"0bacfa26-711d-4c52-90d1-00bde959372c","type":"message","user":"U03C6TEAZ","text":"lambda と文字列式とだと文字列式の方が気持ち悪いけど、パフォーマンスはいいと思う。","ts":"1568868963.078500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6101375e-37b7-47dd-bcc4-ed30f4e80db3","type":"message","user":"U03C71D7H","text":"map にリストと lambda 渡すと lambda の第1引数に渡ってくるのが index になってるのがいつもハマる","ts":"1568869302.079300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"91a8496d-33c8-4176-a244-ec6002897c10","type":"message","user":"U72TB62UF","text":"遅くなりましたが、解決できました。ありがとうございます！","ts":"1568874094.079700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"3251c9cc-1956-42d5-81be-1c9891912b02","type":"message","user":"U6XP9LZ6V","text":"lambdaの引数、この前vim_devでも文句言ってた人いたけど、完全スルーされてたｗ\n<https://groups.google.com/d/topic/vim_dev/wB50Yo-SzkA/discussion>\n`v:val` を使えば間違えない。","ts":"1568874251.080800","team":"T03C4RC8V","reactions":[{"name":"sorena","count":1,"users":["U0M7GCBPD"]},{"name":"goodpoem","count":1,"users":["U0M7GCBPD"]}],"replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"}]
