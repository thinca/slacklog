[{"type":"message","user":"U010SSLGYMB","text":"<@U010SSLGYMB> has joined the channel","ts":"1585182940.000900","subtype":"channel_join","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"f4b540ca-4ba1-456a-8ba5-337011ea7d7e","type":"message","user":"UAZ33BKV2","text":"`質問です`\nvim-lsp関係ですが... clangd での diagnotics ですが、Cヘッダ内で他ヘッダ定義だけどincludeしてない (想定はCソース上で規約を守ってインクルードみたいなやつ)のとき、unknown typeが出てしまうと思うのですが、どのように回避していますか?","ts":"1585207900.003600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"nVjjM"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"1a3a2c83-3757-4aee-a27d-6aee95819477","type":"message","user":"U7B4ZD49X","text":"イマイチつかみきれてないですが、compile_commands.jsonにはそのヘッダを追加するとかですか？？","ts":"1585208068.004200","edited":{"user":"U7B4ZD49X","ts":"1585208108.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"lA5"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"47a42efd-1e82-4d20-a82a-f2a233472920","type":"message","user":"UAZ33BKV2","text":"あー、それでも対応可能とは思いますが、手動で変更を都度やるのはちょっと...なので、設定かcompile_commands.json生成ツールのオプションでの作り方とか、なにかしら定型的に補正できないかなあと","ts":"1585208164.005700","edited":{"user":"UAZ33BKV2","ts":"1585208181.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"9a7J"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f83e6fea-76a8-4d4d-8700-b85c2c61f97e","type":"message","user":"U7B4ZD49X","text":"CMake使ってるんだとするとCMAKE_EXPORT_COMPILE_COMMANDSをonにすれば自動でエクスポートされるんでそれをちょいちょいっていじる感じになるかと思います。そして.vim/compile_commands.jsonにいれ・・・やばいthincaさんに怒られるw","ts":"1585208234.007100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Kla9"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"3061f742-bde4-4d9f-b2ec-c5c4cbbc80db","type":"message","user":"UAZ33BKV2","text":"いえ、bearで手動生成...","ts":"1585208802.007400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"s9Ga"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"914bad43-9def-457d-bfdc-4fdf692d778b","type":"message","user":"UAZ33BKV2","text":"bearのincludeで指定したら全部に効かないかな...確認しよう","ts":"1585208896.007800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"k0LFD"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d9b031fc-d5b0-45f3-a2ea-0d52599b76a3","type":"message","user":"UAZ33BKV2","text":"だめっぽい..","ts":"1585209488.008000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"uCf"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"75d85b2b-2d88-4f43-b011-12f3efa7c3d2","type":"message","user":"UD73ZNZAP","text":"clangd に `--background-index` つけてたらどうなりますか？詳細は↓\n<https://vim-jp.slack.com/archives/C83UXKU86/p1585191572030200>","ts":"1585209883.009400","attachments":[{"fallback":"[March 25th, 2020 7:59 PM] presuku: vim のソースで、clangd で LspDefinition すると *.c ではなく *.pro に飛んでたけど、ちゃんと bear で compile_commands.json 作って、\n```let g:lsp_settings = {\n      \\  'clangd': {'cmd': ['clangd-9', '--background-index', '-j=4']},\n      \\ }```\nと設定したら、ちゃんと *.c に飛ぶようになった。ちなみに LspDeclaration すると *.pro に飛ぶ。","id":1,"author_id":"UD73ZNZAP","author_name":"presuku","author_subname":"presuku","author_link":"https://vim-jp.slack.com/team/UD73ZNZAP","author_icon":"https://avatars.slack-edge.com/2019-02-27/561893477331_a9e1f1634fb429357d68_48.jpg","text":"vim のソースで、clangd で LspDefinition すると *.c ではなく *.pro に飛んでたけど、ちゃんと bear で compile_commands.json 作って、\n```let g:lsp_settings = {\n      \\  'clangd': {'cmd': ['clangd-9', '--background-index', '-j=4']},\n      \\ }```\nと設定したら、ちゃんと *.c に飛ぶようになった。ちなみに LspDeclaration すると *.pro に飛ぶ。","mrkdwn_in":["text"],"blocks":null,"footer":"Posted in #dev","ts":1585191572.030200,"from_url":"https://vim-jp.slack.com/archives/C83UXKU86/p1585191572030200","original_url":"https://vim-jp.slack.com/archives/C83UXKU86/p1585191572030200"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"9pAw"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"b187c1a3-eef9-47d9-9a87-a73122ce8ed1","type":"message","user":"UD73ZNZAP","text":"そうすると`.clangd` にキャッシュできるのですが include しているヘッダファイルのキャッシュができて、うまくいってる気がする","ts":"1585209974.010600","edited":{"user":"UD73ZNZAP","ts":"1585210020.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"aO60"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5f9e1468-a321-4143-a3ed-220529f861f0","type":"message","user":"UAZ33BKV2","text":"付けたいのですが、vim-lsp-settingsのパス解決とうまくあわなくて、一旦中断してました。\n再調整してみます。\nありがとうございます。","ts":"1585210004.011300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"pF4"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U010SUJ18EQ","text":"<@U010SUJ18EQ> has joined the channel","ts":"1585210400.016000","subtype":"channel_join","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"c79b05b9-a0f2-403b-a487-5fff42ae0ba1","type":"message","user":"UAZ33BKV2","text":"う、vim-lsp-settingsが入れるサーバより、システムが持ってるやつを優先する(というか入れたサーバの優先度が最下位だ...)","ts":"1585210424.016900","team":"T03C4RC8V","reactions":[{"name":"totemoturai","count":1,"users":["UD73ZNZAP"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"4PX"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"03bfd308-b13c-4792-9e9f-4040d32cc817","type":"message","user":"UD73ZNZAP","text":"ちょっと試ただけですが `foo.h` と `bar.h` を `baz.c`  で順番に include して `foo.h` にしかない typedef したタイプを `bar.h`  で使用しても unknown type にならなかったです。\nちなみに clangd-9 でシステムにインストールしたやつを使ってます。","ts":"1585210532.018100","edited":{"user":"UD73ZNZAP","ts":"1585210987.000000"},"team":"T03C4RC8V","reactions":[{"name":"naruhodo","count":1,"users":["UAZ33BKV2"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"uDWA"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"86413523-0387-42f7-9d9a-89b78841744b","type":"message","user":"UD73ZNZAP","text":"あ、それから bear で compile_commands.json を作成しています","ts":"1585210597.018800","edited":{"user":"UD73ZNZAP","ts":"1585211011.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1lYC"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"188542aa-3723-4c71-8332-c83efb279ca2","type":"message","user":"UD73ZNZAP","text":"すいません、やはりダメだったみたいです。なぜなのかわからないですが、直接`vim bar.h` すると diagnostics すぐ出る。`vim baz.c` 後、`:e bar.h` だと開いた直後は diagnostics 出ないのですが`bar.h`ファイルで`LspDeclaration` とか`LspDefinition` すると出ちゃいますね…","ts":"1585213573.023800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"MMSt"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4c67f967-61bb-43e1-8bd1-8601e0b4215e","type":"message","user":"UAZ33BKV2","text":"似た感じになりました...\nやっぱ依存関係が解決できないと決定打にならないのかな","ts":"1585213635.024300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"OxVw"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"323fc351-e3b2-4fd0-80cd-9dd2f7c29c08","type":"message","user":"UD73ZNZAP","text":"かもですねー。上の例で言う bar.h 単体だと unknow type なのは正しいので…","ts":"1585213753.025300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"7WFwh"}],"source_team":"T03C4RC8V","user_team":"T03C4RC8V"}]
