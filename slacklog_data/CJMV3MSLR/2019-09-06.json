[{"client_msg_id":"7d740abd-f765-45c3-a99e-453c05070d0a","type":"message","user":"UAZ33BKV2","text":"`vab` ( ()コミで選択 ) -&gt; `sr{` ( {}に置き換え ) -&gt; `vab` ( {}コミで選択 ) -&gt; `sa(` ( ({}) になる) はできるけど、ちょっと手数が多いな...","ts":"1567753998.298600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"25d3302c-43ae-4fa9-864d-56800f15ffd1","type":"message","user":"U72TB62UF","text":"`質問です`\nBufEnterのような自動コマンドで、ファイルの行数に変化があれば任意の処理を実行するようにしたいのですが、\nh autocmdを読んだ範囲では、既存のイベントにはそれらしいものはありませんでした。\n既存の機能の組み合わせで、上記の目的を満たす方法はあるのでしょうか。","ts":"1567755751.299200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"911B2A10-1190-496A-A9F5-AC6DF622F9C4","type":"message","user":"U78A6ESHM","text":"TextChange とか Insert 系引っ掛けて行数確認して前の状態と比べるとか？","ts":"1567755881.300300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"398ee8e2-f420-4477-b1a8-a585a3609c2f","type":"message","user":"UAZ33BKV2","text":"処理が複雑になるので、ちゃんと関数化して、TextChange他でやればできそうですね","ts":"1567755916.300800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c8f37638-963b-4825-ac22-aade0e045516","type":"message","user":"UAZ33BKV2","text":"s:hogeで値保持...はb:hoge使ったほうがいいか(永続化はないとする)","ts":"1567755942.301400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"45f17ad9-4756-4730-ab44-301d08b14d30","type":"message","user":"U72TB62UF","text":"TextChange系でいけそうです。ありがとうございます！","ts":"1567756059.302000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7a5632ee-0cf3-44bd-87a0-978b84c4239d","type":"message","user":"U03C71D7H","text":"今だと他には `listener_add()` とかがありますね。バッファに変更があった時に callback 関数を呼んでくれます。ただし使い方がむずい","ts":"1567756689.302700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"21ecc6b5-c755-4fd3-a8d4-46eee17ecbd9","type":"message","user":"U03C71D7H","text":"割と新しい機能なので互換性が必要なら使わない方が無難ではあります","ts":"1567756711.303300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"40e4dfe4-95cd-484e-a410-ba5fc5b2f4d4","type":"message","user":"U72TB62UF","text":":h listener_add","ts":"1567756719.303500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U894RTUJY","text":"```\nlistener_add({callback} [, {buf}])                      *listener_add()*\n                Add a callback function that will be invoked when changes have\n                been made to buffer {buf}.\n                {buf} refers to a buffer name or number. For the accepted\n                values, see |bufname()|.  When {buf} is omitted the current\n                buffer is used.\n                Returns a unique ID that can be passed to |listener_remove()|.\n \n                The {callback} is invoked with four arguments:\n                    a:bufnr     the buffer that was changed\n                    a:start     first changed line number\n                    a:end       first line number below the change\n                    a:added     total number of lines added, negative if lines\n                                were deleted\n                    a:changes   a List of items with details about the changes\n \n                Example:  \n            func Listener(bufnr, start, end, added, changes)\n              echo 'lines ' .. a:start .. ' until ' .. a:end .. ' changed'\n            endfunc\n            call listener_add('Listener', bufnr)\n \n                The List cannot be changed.  Each item in a:changes is a\n                dictionary with these entries:\n                    lnum        the first line number of the change\n                    end         the first line below the change\n                    added       number of lines added; negative if lines were\n                                deleted\n                    col         first column in \"lnum\" that was affected by\n                                the change; one if unknown or the whole line\n                                was affected; this is a byte index, first\n                                character has a value of one.\n                When lines are inserted the values are:\n                    lnum        line above which the new line is added\n                    end         equal to \"lnum\"\n                    added       number of lines inserted\n                    col         1\n                When lines are deleted the values are:\n                    lnum        the first deleted line\n                    end         the line below the first deleted line, before\n                                the deletion was done\n                    added       negative, number of lines deleted\n                    col         1\n                When lines are changed:\n                    lnum        the first changed line\n                    end         the line below the last changed line\n                    added       0\n                    col         first column with a change or 1\n \n                The entries are in the order the changes were made, thus the\n                most recent change is at the end.  The line numbers are valid\n                when the callback is invoked, but later changes may make them\n                invalid, thus keeping a copy for later might not work.\n \n                The {callback} is invoked just before the screen is updated,\n                when |listener_flush()| is called or when a change is being\n                made that changes the line count in a way it causes a line\n                number in the list of changes to become invalid.\n \n                The {callback} is invoked with the text locked, see\n                |textlock|.  If you do need to make changes to the buffer, use\n                a timer to do this later |timer_start()|.\n \n                The {callback} is not invoked when the buffer is first loaded.\n                Use the |BufReadPost| autocmd event to handle the initial text\n                of a buffer.\n                The {callback} is also not invoked when the buffer is\n                unloaded, use the |BufUnload| autocmd event for that.\n \n                Can also be used as a |method|, where the base is passed as\n                the second argument, the buffer:  \n                        GetBuffer()-&gt;listener_add(callback)\n```","ts":"1567756719.303600","bot_id":"B894RTUCU","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"2dd68b15-581f-4f20-9a66-e3d07678073d","type":"message","user":"U72TB62UF","text":"変わった行番号とかがわかるのですね。状況次第では簡潔に書けるシーンがありそうですねえ","ts":"1567756878.304400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"84db5312-16d1-45fb-b13a-bea53a5441e6","type":"message","user":"U72TB62UF","text":"vim, neovim両対応したいので、今回は使うのは怖い感あります","ts":"1567756942.305300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e5bed50d-0424-4c1f-927a-a356aae1eb43","type":"message","user":"U03C71D7H","text":"これは恐らく LSP クライアントに必要な機能として実装されたのだと思ってます (実際のところは知らない)","ts":"1567756942.305400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ba4ffebf-7f94-4dab-a4ba-82483e4855ee","type":"message","user":"U03C71D7H","text":"両対応だとやめといた方が無難そう","ts":"1567756956.305700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"77e35a0d-efe0-4c5c-8707-2354fcf2d507","type":"message","user":"U03C71D7H","text":"そういえば vim-lsp は listener_add() に対応してるんだろうか","ts":"1567756970.306200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"cf2760bd-d293-4c80-83b9-d53f276dd0f8","type":"message","user":"U72TB62UF","text":"vim-lspだと使ってないようです。他のlspクライアントで使っているのあるのかなぁ\n<https://jp.quora.com/puroguramingu-wo-shi-teru-toki-gamen-no-kousei-ha-dono-you-nishi-tei-masu-ka>","ts":"1567757196.306700","attachments":[{"fallback":"プログラミングをしてる時、画面の構成はどのようにしていますか？ - Quora","id":1,"title":"プログラミングをしてる時、画面の構成はどのようにしていますか？ - Quora","title_link":"https://jp.quora.com/puroguramingu-wo-shi-teru-toki-gamen-no-kousei-ha-dono-you-nishi-tei-masu-ka","text":"自分のコーディングモードのときはこれです。 OSはArch Linux（諸般の事情でManjaroから出戻りました）。 画面は1モニタ（昔はマルチモニタだったけど、スタバでもどこでも共通の環境で作業できるように卒業した）の左右分割で、Visual Studio Code とTerminator。 主要開発言語はTypeScript で、 tsc —watch コマンドで自動で裏でJavaScriptへトランスパイルさせていて 局面によりますが、自作ライブラリなどを作り込むときは、テスト駆動...","blocks":null,"service_name":"jp.quora.com","service_icon":"https://jp.quora.com/favicon.ico","from_url":"https://jp.quora.com/puroguramingu-wo-shi-teru-toki-gamen-no-kousei-ha-dono-you-nishi-tei-masu-ka","original_url":"https://jp.quora.com/puroguramingu-wo-shi-teru-toki-gamen-no-kousei-ha-dono-you-nishi-tei-masu-ka"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"67a83ff3-61ec-4e6d-973a-32b72e946c41","type":"message","user":"U03C6TEAZ","text":"変更点を知るために作られた API なんですが、まだ少しバギーなんです。","ts":"1567757244.307400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e7f29891-f197-4a0a-94cb-933d9b091ef5","type":"message","user":"U72TB62UF","text":"リンク間違えた（ ；´。 ｀；）","ts":"1567757247.307500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d0c784f1-fdf5-48ee-ba91-584180ffcb31","type":"message","user":"U72TB62UF","text":"&gt; 変更点を知るために作られた API\n確かにそういう使いかたに便利そうですね","ts":"1567757277.308400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"81768dbe-3538-4756-8603-0a43999e23a0","type":"message","user":"U03C6TEAZ","text":"あまりこういう vim8 の API を使うと、また vim-lsp が vim8 専用になってしまう点が怖い。","ts":"1567757288.308600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"43e66202-5562-4a99-bee5-910af0a74369","type":"message","user":"U03C6TEAZ","text":"既に neovim だと vim-lsp で sign が出ないという報告を先日受けたばかり。","ts":"1567757313.309100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d4506712-615e-454f-bb44-0d6d5d17b392","type":"message","user":"U03C6TEAZ","text":"聞いただけの話で実際、neovim と vim-lsp で sign が出てるのかどうか僕は分かりません。","ts":"1567757337.309600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d4b2a0cc-8625-4288-9654-bf6adf582861","type":"message","user":"U03C71D7H","text":"実装するにしてもオプショナルな導入が良さそうですね。既存の方法は残しておきつつ、 `listener_add()` を使うように切り替えられるように。めっちゃ実装面倒そうですがw","ts":"1567757753.310600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"2c0db22d-dfe0-48d6-854f-72c3e62e0ced","type":"message","user":"U03C71D7H","text":"とはいえこういうの使っていかないといつまで経ってもバギーなのでちゃんとバリバリ使うプラグインの登場が待たれる","ts":"1567757775.311200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d0eef95a-0e29-411c-9eb6-23935411c786","type":"message","user":"UA1GWETAA","text":"`command` を使えば何とかなるかもしれません。\n&gt;&gt;&gt;\ncommand\n\tオペレータ処理後に実行されるコマンドのリストです。 |'[| と |']| の二つ\n\tのマークが編集した位置の先頭と末尾へ設定されるので、これを使うと便利で\n\tしょう。\n\n\tlet g:sandwich#recipes += [\n\t  \\    {\n\t  \\      'buns'    : ['{', '}'],\n\t  \\      'linewise': 1,\n\t  \\      'command' : [\"'[+1,']-1normal! &gt;&gt;\"]\n\t  \\    },\n\t  \\ ]\n\t\" Press saiw{\n\t\" foo   ---&gt;   {\n\t                   foo\n\t               }","ts":"1567759744.311300","thread_ts":"1567749715.294700","edited":{"user":"UA1GWETAA","ts":"1567759816.000000"},"parent_user_id":"U03C71D7H","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"90fd99a1-9896-4f2c-bd42-deccda3cc8ef","type":"message","user":"U03C71D7H","text":"なるほど。追加の設定でできるかもって感じですね。recipes の辺りはまだドキュメントをちゃんと読めてないので、時間取れたら見てみます！ありがとうございます！","ts":"1567759824.311600","thread_ts":"1567749715.294700","parent_user_id":"U03C71D7H","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4451531d-b844-4239-9b6c-f428d3b87ede","type":"message","user":"UAZ33BKV2","text":"popupはそれで改善された面ありそうだし、blobもいまさらなバグを私踏みましたしねえ...","ts":"1567760571.312200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ea9ae288-20ac-40dc-92f3-a51ce08596c5","type":"message","user":"U03C6TEAZ","text":"Language Server って変更されたらそのテキストをサーバに送る必要があって、今の vim-lsp では変更された箇所の行位置で diff を取って最大と最小(例: 行位置でいう 5%, 10%, 30%, 90% の場所が同時に更新された場合、5%～90%)の間のテキストをサーバに送ってるんです。","ts":"1567761133.315800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"997e3f92-04d1-425d-ab30-72ea3769830b","type":"message","user":"U03C6TEAZ","text":"これだと差分が小さい場合、特に1文字とかの場合だと `listener_add` の方が効率良いんですが、逆に1行飛ばしで更新される様な事をやった場合に `listener_add` の方が遅くなったりしないかなぁと考えてます。","ts":"1567761173.316300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"08310185-c63e-4c68-87c1-9c35f165d971","type":"message","user":"U03C6TEAZ","text":"今はこの差分を求めるために、バッファの内容をまるっと同じのをメモリに持ってるので、それが要らなくなるのはメリットです。","ts":"1567761250.317100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c6fb972e-6826-4668-8bd6-8643de7c4a72","type":"message","user":"UAZ33BKV2","text":"手修正と置換系でわけるくらいしか思いつかないけど、きびしそう...","ts":"1567761505.317600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"fa0f8690-2ea4-436a-8d5a-728f777f56f4","type":"message","user":"U9GUS1S0G","text":"これ、現状難しいかもしれません。三行目の改行文字が範囲に含まれているかをオペレータが知ることができなくて...","ts":"1567770246.317700","thread_ts":"1567749715.294700","parent_user_id":"U03C71D7H","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"dc3d7dc3-f6a0-439e-90c5-8d290c811f1e","type":"message","user":"U9GUS1S0G","text":"行指向選択の場合だけ特別扱いするような仕掛けがあればできるかもしれません (ちょっとよくわからない) よろしければ issue に書いておいてもらえると助かります。","ts":"1567770360.317900","thread_ts":"1567749715.294700","parent_user_id":"U03C71D7H","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"54b74e5b-00ba-4054-a42c-7d9c500d689e","type":"message","user":"U03C71D7H","text":"了解です。上の例をそのまま要望と言う形で書けばいいですかね?","ts":"1567770782.318100","thread_ts":"1567749715.294700","parent_user_id":"U03C71D7H","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7672de72-e1ec-4a24-88d8-d4b17af7782d","type":"message","user":"U9GUS1S0G","text":"はい、お願いします","ts":"1567770832.318300","thread_ts":"1567749715.294700","parent_user_id":"U03C71D7H","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"74415886-b8d1-437b-b8cd-19c57c3835ba","type":"message","user":"U03C71D7H","text":"タイトルを考えるのに苦戦しているw","ts":"1567771379.318500","thread_ts":"1567749715.294700","parent_user_id":"U03C71D7H","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c357ab87-b87e-4dda-8111-cb16ba6bf1fd","type":"message","user":"U03C71D7H","text":"迷った結果わかりづらい Issue になってしまった感がありますが、タイトルや内容は必要でしたら適時編集してもらって大丈夫です :pray:\n<https://github.com/machakann/vim-sandwich/issues/81>","ts":"1567772525.318700","thread_ts":"1567749715.294700","attachments":[{"fallback":"GitHub: Add parens inside multilined parens without line breaks · Issue #81 · machakann/vim-sandwich","id":1,"title":"Add parens inside multilined parens without line breaks · Issue #81 · machakann/vim-sandwich","title_link":"https://github.com/machakann/vim-sandwich/issues/81","text":"Consider the following text: foo( ... ... ) I want to add {} inside () without line breaks: foo({ ... ... }) I tried sai({, but I got the following result: foo( { ... ... } ) How can I get the expe...","thumb_url":"https://avatars2.githubusercontent.com/u/480049?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/bfaba/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/machakann/vim-sandwich/issues/81","original_url":"https://github.com/machakann/vim-sandwich/issues/81"}],"parent_user_id":"U03C71D7H","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"550015e2-5bb7-4531-8815-6f72a4655b7c","type":"message","user":"U9GUS1S0G","text":"ありがとうございます、考えてみます！","ts":"1567773636.319000","thread_ts":"1567749715.294700","parent_user_id":"U03C71D7H","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"96a51b29-2867-416f-bf65-9fd78e856c90","type":"message","user":"U03C4RC8X","text":"あーそうか'number'はsetでもlocal to windowか","ts":"1567701803.291700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"93e98538-f864-4697-9d0d-2a0cd220fd32","type":"message","user":"U03C71D7H","text":"[質問]\nsandwich.vim を導入しようと色々試してるんですが、\n\n```\nfoo(\n   ...\n   ...\n)\n```\n\nこういうテキストの `()` の内側に `{}` を足して\n\n```\nfoo({\n  ...\n  ...\n})\n```\n\nこうしたいです。どうすればできるでしょう? 普通にやると行指向になってしまって\n\n```\nfoo(\n  {\n  ...\n  ...\n  }\n)\n```\n\nこうなっちゃいます。","ts":"1567749715.294700","thread_ts":"1567749715.294700","reply_count":9,"replies":[{"user":"UA1GWETAA","ts":"1567759744.311300"},{"user":"U03C71D7H","ts":"1567759824.311600"},{"user":"U9GUS1S0G","ts":"1567770246.317700"},{"user":"U9GUS1S0G","ts":"1567770360.317900"},{"user":"U03C71D7H","ts":"1567770782.318100"},{"user":"U9GUS1S0G","ts":"1567770832.318300"},{"user":"U03C71D7H","ts":"1567771379.318500"},{"user":"U03C71D7H","ts":"1567772525.318700"},{"user":"U9GUS1S0G","ts":"1567773636.319000"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"ab972b73-d089-42e3-ae5a-5927d21483a9","type":"message","user":"UAZ33BKV2","text":"v (charwise)で()内を選択できてれば(`vib` とか)  `sa{` でなりますが、微妙に難しいですね...とくに最後の括弧は行の始めにはいかない(カーソルが前の行の最後までになるから)という...","ts":"1567751311.296500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"0fdc2721-db35-40ba-99c4-5fa353842ad7","type":"message","user":"UAZ33BKV2","text":"sandwitchにそこらへんのためのオプションあるかな...","ts":"1567751328.296900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"}]
