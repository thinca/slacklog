[{"client_msg_id":"fa9e2f71-0828-4d83-a3a8-9c8a8cbd70e8","type":"message","user":"U7JL1UKKL","text":"私はPythonを使った","ts":"1610104135.050100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"nXfX"}]},{"client_msg_id":"5b44a70f-c031-4b64-8b5b-6834394df793","type":"message","user":"UDDCM376D","text":"ぼくは多分両方対応は諦める、になります","ts":"1610101207.049800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"p4K"}]},{"client_msg_id":"ed849bae-cae0-4ce8-b181-719f25290191","type":"message","user":"UDDCM376D","text":"頑張るか諦めるか、すね","ts":"1610101199.049400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0mW6/"}]},{"client_msg_id":"cf57aba0-c0e3-4e9d-8e09-8463244a121c","type":"message","user":"U8R597E9H","text":"vital で polyfill するしか生きる道がない","ts":"1610100475.048600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"gbbu"}]},{"client_msg_id":"4f7c3b76-5fa7-43c6-b6ea-b4083c3ec5f2","type":"message","user":"UDDCM376D","text":"NoevimとVimがだんだん離れていく…（ツライ）","ts":"1610100434.048300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"c0EJq"}]},{"client_msg_id":"949b0c76-fa9b-48cf-98ba-4c66e596ae3a","type":"message","user":"U7JL1UKKL","text":"細かい機能は私も知らないのが多い。一応更新は一通り見てるんだけど","ts":"1610099318.048000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"h=Wv"}]},{"client_msg_id":"b16ff0c4-dc22-491d-8655-02d53ec68a04","type":"message","user":"U7JL1UKKL","text":"最近はいった関数ですね","ts":"1610099300.047400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=bM+"}]},{"client_msg_id":"363ec85f-b8ef-4c0a-be4c-a8c744013392","type":"message","user":"U03C71D7H","text":"vilta-Data.String.charidx() ラッパ関数があると便利そう","ts":"1610099023.047000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"83JDY"}]},{"client_msg_id":"644dc645-81dc-421b-9abe-7988d8b4177b","type":"message","user":"UL6CFN8NR","text":"`str_byteidx` も `byteidx` も知りませんでした。ありがとうございます","ts":"1610098997.046600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ZS0HU"}]},{"client_msg_id":"44dd1031-36a8-4650-b84a-7141b12584a9","type":"message","user":"U9S4G0LJW","text":"自分のvimrcのためだけにこれ入れてもらった","ts":"1610098994.046500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"IBTgk"}]},{"type":"message","user":"UPZHKAM7W","text":"```\n                                        *v:argv* *argv-variable*\nv:argv          Vimの起動に使用したコマンドライン引数。これは文字列のリストで\n                ある。最初の項目はVimコマンドである。\n```","ts":"1610098971.045600","bot_id":"BPM858KEE","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"d1b24a20-fa54-4db4-9e4a-a599d5ffb256","type":"message","user":"U9S4G0LJW","text":":h v:argv","ts":"1610098971.045500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"G26Mb"}]},{"client_msg_id":"ea327305-fc95-4430-b5cd-8fe96cb98dd7","type":"message","user":"U9S4G0LJW","text":"どうしても使いたかったらポートするという手もある","ts":"1610098931.045200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ZDkgY"}]},{"client_msg_id":"b94b3e2e-78ef-412c-9298-640c544c167f","type":"message","user":"U8R597E9H","text":"結構辛いな。。。","ts":"1610098912.044300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"s8W/"}]},{"client_msg_id":"3774d7f6-1494-42c6-b710-94618622c88e","type":"message","user":"UAZ33BKV2","text":"うまく作り分けないとだめですね...","ts":"1610098902.043600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1zNn"}]},{"client_msg_id":"929590dc-f46e-40e4-b50d-541c7f6c1de6","type":"message","user":"U9S4G0LJW","text":"本当に最近入ったんで","ts":"1610098901.043400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"J9c"}]},{"client_msg_id":"18ed6d34-8298-4cab-b9db-32f2bed1982b","type":"message","user":"U9S4G0LJW","text":"多分Neovimにはないです","ts":"1610098895.043100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"OTvkQ"}]},{"client_msg_id":"a2b87a5e-546c-49e1-a9c9-5763584f1c12","type":"message","user":"U8R597E9H","text":"なるほど。neovim には byteidx はあるが、charidx はない。という状態らしいです。","ts":"1610098887.042700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"BY9"}]},{"client_msg_id":"fa57461d-325c-416d-8ef7-8c5940bd8407","type":"message","user":"UAZ33BKV2","text":"byteidxに遅れて入ったっぽい","ts":"1610098862.042300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"sn+m"}]},{"client_msg_id":"325d26d5-c3fc-48cf-b3c4-da2563d61f90","type":"message","user":"UAZ33BKV2","text":"いま翻訳しているuser_41.txtにあったので、","ts":"1610098850.041900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"uyoP"}]},{"client_msg_id":"1577e2c1-d8bc-4f76-93e5-47b834165465","type":"message","user":"U8R597E9H","text":"byteidx があるのは最近発見したんですが","ts":"1610098842.041800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jFgDQ"}]},{"client_msg_id":"645be72b-6e75-4474-8b14-79f8e23fa427","type":"message","user":"U8R597E9H","text":"これパフォーマンス上げるのによさそう。調べますｗ","ts":"1610098835.041400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rfEQK"}]},{"client_msg_id":"d412e97f-0b4c-46d0-a881-8106418eb6ef","type":"message","user":"U8R597E9H","text":"え。charidx とかあるの。。。！？","ts":"1610098827.040900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"mzc"}]},{"type":"message","user":"UPZHKAM7W","text":"```\n                                                        *charidx()*\ncharidx({string}, {idx} [, {countcc}])\n                Return the character index of the byte at {idx} in {string}.\n                The index of the first character is zero.\n                If there are no multibyte characters the returned value is\n                equal to {idx}.\n                When {countcc} is omitted or zero, then composing characters\n                are not counted separately, their byte length is added to the\n                preceding base character.\n                When {countcc} is set to 1, then composing characters are\n                counted as separate characters.\n                Returns -1 if the arguments are invalid or if {idx} is greater\n                than the index of the last byte in {string}.  An error is\n                given if the first argument is not a string, the second\n                argument is not a number or when the third argument is present\n                and is not zero or one.\n                See |byteidx()| and |byteidxcomp()| for getting the byte index\n                from the character index.\n                Examples:  \n                        echo charidx('áb́ć', 3)          returns 1\n                        echo charidx('áb́ć', 6, 1)       returns 4\n                        echo charidx('áb́ć', 16)         returns -1\n \n                Can also be used as a |method|:  \n                        GetName()-\u0026gt;charidx(idx)\n```","ts":"1610098813.040600","bot_id":"BPM858KEE","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"c153444b-58ba-4cf7-9c1c-f859723e2e7d","type":"message","user":"UAZ33BKV2","text":":h charidx()","ts":"1610098813.040500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"krr"}]},{"client_msg_id":"3dda4f0b-3feb-48d9-882d-3cf80131d8d7","type":"message","user":"U9S4G0LJW","text":"へぇー","ts":"1610098754.040300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"NdBn2"}]},{"client_msg_id":"7aa67b0b-71b1-4177-9c5a-ff4cb3b7bf3e","type":"message","user":"U8R597E9H","text":"`:h str_byteindex` `:h str_utfindex` が neovim なら使える","ts":"1610098701.040000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"32I"}]},{"client_msg_id":"968d4bd7-4fcb-4486-bc3d-347ab82e004f","type":"message","user":"U8R597E9H","text":"まず byte-index を char-index に変換して、そこから strcharpart で切り出すのがいいのかな。","ts":"1610098676.039500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"LYjG6"}]},{"client_msg_id":"cf7a2f12-ea03-4946-9d49-95f858cfa8ca","type":"message","user":"UAZ33BKV2","text":"その意味で、内部的にはフラットな文字集合データで絶対エンコード必要、みたいになってるのもあるけど、あれも大変","ts":"1610098588.038700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dbKTe"}]},{"client_msg_id":"f288c4d4-6f9d-4d86-8e7f-9590bf30a215","type":"message","user":"U9S4G0LJW","text":"ただ、文字列を常にUnicodeとして扱うということはそれだけのオーバーヘッドを常に抱えることになるので単純にやればいいという物ではないのが難しい","ts":"1610098504.037800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Kuzq"}]},{"client_msg_id":"74c9d31e-4879-42a4-a62e-e20a002d50e5","type":"message","user":"U7JL1UKKL","text":"つらい","ts":"1610098407.036400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"uSKg"}]},{"client_msg_id":"f8cea695-133b-41ab-a6a0-1d933f6df0dc","type":"message","user":"U7JL1UKKL","text":"うむ","ts":"1610098405.036200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"cJ4"}]},{"client_msg_id":"5864f3e3-9b44-4aa7-97e3-c69c44f0dabb","type":"message","user":"U9S4G0LJW","text":"文字列=バイト列の処理系は総じてマルチバイトの扱いが苦手","ts":"1610098322.035900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"oI2"}]},{"client_msg_id":"1723da70-ad5e-4a2d-ac7c-3d46ef047b3b","type":"message","user":"U9S4G0LJW","text":"そもそもVimのmultibyteは後付けされたので仕方ない","ts":"1610098257.035100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"bCRhu"}]},{"client_msg_id":"669f1b99-d3b5-46e1-89a7-6b729967d92b","type":"message","user":"UL6CFN8NR","text":"マルチバイトといい virtcol といい ambiwidth といい、Unicodeが絡むと何かとややこしい…","ts":"1610098169.034400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"NB4eo"}]},{"client_msg_id":"a0c01788-b880-42a0-a727-c2880575caf0","type":"message","user":"U03C71D7H","text":"実際もにょる方法なので、なんかいい感じの方法ほしいですねぇ","ts":"1610098159.034200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ZagF"}]},{"client_msg_id":"a46de266-d25c-4417-95a6-642979c16b82","type":"message","user":"UL6CFN8NR","text":"たしかにレジスタに格納するのが確実そうですね。ありがとうございます。","ts":"1610098066.033400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qCHxY"}]},{"client_msg_id":"e4967bf9-5c6b-468b-834a-ae39b74f3137","type":"message","user":"U9S4G0LJW","text":"このへんなんかやってレジスタ退避してyankするのが一番楽だった気がする","ts":"1610098002.033000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"JTLH/"}]},{"client_msg_id":"6e701694-6521-46a3-8f8e-d4d35e3f2013","type":"message","user":"UL6CFN8NR","text":"マルチバイト文字に対応したいのは `日曜日` とか `2020年1月31日` をインクリメントして `月曜日` や `2020年2月1日` に出来たら面白いなあという気持ちです（まあ出来なくても大きくは困らないのですが）","ts":"1610097900.031800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"4qB4"}]},{"client_msg_id":"f62d96be-031c-45b8-9a61-2bab74a27bd9","type":"message","user":"UAZ33BKV2","text":"visualは解除しないで指定のところを取り込み、変更して、変更前ので `s/old/new/` する?","ts":"1610097898.031700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/fji"}]},{"client_msg_id":"a88a1129-538b-4241-badc-7cbb39f18a76","type":"message","user":"U9S4G0LJW","text":"違う","ts":"1610097889.031400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ESR"}]},{"client_msg_id":"78399b00-2587-48fa-9a2f-a0dddacc0714","type":"message","user":"U9S4G0LJW","text":":telephone:","ts":"1610097882.030800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"PFeq"}]},{"client_msg_id":"fb020e10-945f-45f3-a1a2-4642c2c5013d","type":"message","user":"UL6CFN8NR","text":"あ…すいません。前提を伝えそこねていたのですが、現在開発中のプラグインは Lua 製なので、Neovim で動かしたいですね。\nVISUAL モードでのインクリメント/デクリメント機能を実装したい感じです","ts":"1610097800.028600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"kvpQ"}]},{"client_msg_id":"7952cf87-5f3d-497e-b268-29033eeba9c2","type":"message","user":"U9S4G0LJW","text":"ほんとこの互換性の無さつらい","ts":"1610097758.027800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"lYH/a"}]},{"client_msg_id":"2e825711-d67c-463e-9bad-8a76db5b9f25","type":"message","user":"U9S4G0LJW","text":"注:monaqaさんはNeovim使い","ts":"1610097750.027300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=Rcg"}]},{"client_msg_id":"f7faea5b-1891-4a6e-ac02-ba8dffe41f83","type":"message","user":"UL6CFN8NR","text":"なるほど…ありがとうございます。実際には文字列を取得した後何かしらの処理を施して置換したいのですが、それも delete して挿入、みたいな手順を踏むのが一番手っ取り早そうですかね。","ts":"1610097742.026900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"eEKfZ"}]},{"client_msg_id":"999a4fe9-2bc0-4917-8740-ee6146f20c4e","type":"message","user":"UAZ33BKV2","text":"helpで最新のVimにcharidexとかいろいろ入ってたけど、それらだとVisualとしてはどうなるんだろうなあ...","ts":"1610097715.025800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"g6q"}]},{"client_msg_id":"da65e277-738f-489c-bb54-68eadf1603ef","type":"message","user":"U03C71D7H","text":"結局、実際に yank するのが一番確実ですね…","ts":"1610097666.024600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/GA/"}]},{"client_msg_id":"54bb58a8-5718-4685-a4b6-28d27574ca91","type":"message","user":"UL6CFN8NR","text":"【質問】Vim script で、VISUALモードで選択している部分文字列（と開始・終了場所の行・列インデックス）を取得したいのですが、マルチバイト文字にも対応するためにはどのようにすればよいでしょうか？↓のような実装を書いてみたのですが、「開始」という文字列を選択して実行すると \"開\u0026lt;e3\u0026gt;\" のような結果となってしまいます。\n```function! TestGetPos()\n  \" 簡単のため開始・終了位置が同一行にある場合のみ考える\n  let pos_s = getpos(\"'\u0026lt;\")\n  let pos_e = getpos(\"'\u0026gt;\")\n  let line = getline(pos_s[1])\n  let col_s = pos_s[2] - 1\n  let col_e = pos_e[2] - 1\n  echo line[col_s:col_e]\nendfunction\n\nvnoremap \u0026lt;Space\u0026gt;t :\u0026lt;C-u\u0026gt;call TestGetPos()\u0026lt;CR\u0026gt;```\nおそらくマルチバイトの途中で切り取られてしまうからだと思うのですが、最後まで含める方法はあるでしょうか。","ts":"1610097576.024000","edited":{"user":"UL6CFN8NR","ts":"1610097650.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ani6T"}]},{"client_msg_id":"5aec1d07-b170-4d64-9cbe-817c85a6ca6f","type":"message","user":"U03C6TEAZ","text":"ローカルに gopls の設定をしちゃってると新機能がオフられる事に気付いた。","ts":"1610082351.019600","team":"T03C4RC8V","reactions":[{"name":"naruhodo","count":1,"users":["U8R597E9H"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"6ccl6"}]},{"client_msg_id":"a77ab6f9-d3c4-45e9-a4b9-f63ffad20d02","type":"message","user":"U03C6TEAZ","text":"vim-lsp-settings の extend をマージ型にした。","ts":"1610082316.018900","team":"T03C4RC8V","reactions":[{"name":"otz","count":5,"users":["UAZ33BKV2","U7JL1UKKL","U8R597E9H","UFP0GQZ4K","U9S4G0LJW"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Rpz"}]},{"client_msg_id":"fa724d70-dc5d-4787-87f4-e8a0b3fa779f","type":"message","user":"U8R597E9H","text":"でも、これだと、もともとの list を完全に上書きする方法がないので気に入ってません…","ts":"1610079295.018400","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":1,"users":["U03C71D7H"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"pNJ"}]},{"client_msg_id":"234dd7e0-05a7-427c-8508-30133f6beaf8","type":"message","user":"U8R597E9H","text":"自分、そういう処理持ってますが、双方が list/dict の場合はマージして、型が合わない場合は上書きするようにしてます。","ts":"1610079260.017300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ij3k"}]},{"type":"message","user":"U01JMCS1Q8Z","text":"\u003c@U01JMCS1Q8Z\u003e has joined the channel","ts":"1610077318.015800","subtype":"channel_join","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"94dbf4ca-250e-4d62-82ea-94391b5dcb84","type":"message","user":"UAZ33BKV2","text":"あ、そんなのあるんだ...","ts":"1610076184.015600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"QuV"}]},{"client_msg_id":"5F679481-1F51-4E85-A252-BBFF23D2AF66","type":"message","user":"U776661HA","text":"\u003chttps://tools.ietf.org/html/rfc7386|https://tools.ietf.org/html/rfc7386\u003e\n\nもし汎用的なライブラリを作るって話なら、仕様決めるの面倒なので↑使うかなぁ......ただ、大体オーバーキルなので、ライブラリ作る話じゃないなら、必要な最低限の専用仕様にすることが多いです。","ts":"1610076091.015400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"IO8"}]},{"type":"message","user":"U01JMB94Z09","text":"\u003c@U01JMB94Z09\u003e has joined the channel","ts":"1610074731.012200","subtype":"channel_join","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"e6e623b1-1c8c-4a6b-8bfc-bb988f04ef58","type":"message","user":"UAZ33BKV2","text":"もう自分で関数作ろうね、になりますしね...","ts":"1610073057.012000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"cMn"}]},{"client_msg_id":"4834ec4e-9ee3-49f3-a309-20163721b80b","type":"message","user":"U03C71D7H","text":"```let MergeFunc = { base, new -\u0026gt; type(base) == type(new) \u0026amp;\u0026amp; (type(base) == v:t_dict || type(base) == v:t_list) ? extend(base, new, MergeFunc) : base }\nlet merged = extend(b, n, MergeFunc)```\n柔軟性は高いけどどうやっても冗長になるのでダメだな…","ts":"1610073009.011700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"5sSDD"}]},{"type":"message","user":"U01H161HVPS","text":"あ、list がバッティング、はこの発言に対してです","ts":"1610072994.011500","attachments":[{"color":"D0D0D0","fallback":"[January 8th, 2021 10:03 AM] obcat: extend() に第 4 引数 recursive を追加して、 true なら同階層同キーで dict どうしまたは list どうしがバッティングしたときに再起的にマージするようにしたらよさそう（適当）\ndict か list どうしじゃないときは第 3 引数にしたがう感じで","author_id":"U01H161HVPS","author_name":"obcat","author_subname":"obcat","author_link":"https://vim-jp.slack.com/team/U01H161HVPS","author_icon":"https://avatars.slack-edge.com/2020-12-08/1552282240341_cc09c55264460c114f4a_48.png","text":"extend() に第 4 引数 recursive を追加して、 true なら同階層同キーで dict どうしまたは list どうしがバッティングしたときに再起的にマージするようにしたらよさそう（適当）\ndict か list どうしじゃないときは第 3 引数にしたがう感じで","mrkdwn_in":["text"],"blocks":null,"footer":"Posted in #question","ts":1610067810.499000,"from_url":"https://vim-jp.slack.com/archives/CJMV3MSLR/p1610067810499000"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"be19e328-6b1c-49ab-97b7-89959ed4769b","type":"message","user":"UAZ33BKV2","text":"いや、バッティングじゃなく、複数をマージとしてみると、わりとありそうな気が  \u0026gt; list join\nデータ構造によりますが","ts":"1610072611.009500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"z=s"}]},{"client_msg_id":"83E24E27-749E-47C2-AC3A-AA197AD8EFA5","type":"message","user":"U01H161HVPS","text":"dict 専用の再起的にマージする関数を作って、マージする深さと上書くか否かを指定できる、くらいが現実的かもしれない（適当）（その２）","ts":"1610072580.009000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"7SJdw"}]},{"client_msg_id":"8433398B-F223-41A2-83E5-98B2B977EF3B","type":"message","user":"U01H161HVPS","text":"よく考えると list がバッティングしたときにくっつけたいことってあんまりない気もしますね","ts":"1610072519.008600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"94Xl"}]},{"client_msg_id":"5d55df20-e1eb-4fff-82f4-17061a497d33","type":"message","user":"UAZ33BKV2","text":"そうですねえ","ts":"1610071917.008400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"yY8"}]},{"client_msg_id":"a74fd802-cc21-40ae-b3c6-b648be5102b5","type":"message","user":"U7HFY4HFY","text":"extendの第３引数を辞書にして、オプションを表現する辞書を突っ込んでもらう方が良さそう","ts":"1610071896.007900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"sQI"}]},{"client_msg_id":"bc8ce15b-7195-4f16-a3ee-cb67905b82be","type":"message","user":"U7H4TJEG0","text":"(ｵﾌﾄﾋﾟ) `jq -n --argjson x '{\"foo\": {\"bar\": 2}}' --argjson y '{\"foo\": {\"baz\": 3}}' '$x * $y'`","ts":"1610071692.005800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"oEh9"}]},{"client_msg_id":"38ede636-e94a-4674-a3f5-de6ac8910b64","type":"message","user":"UAZ33BKV2","text":"`extend(a, b, [v:t_dict],[ [v:t_list], [v:t_string, v:t_blob])` 的?","ts":"1610070930.004500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"u7sq"}]},{"client_msg_id":"53c64f9a-025c-4326-a181-610ed8113086","type":"message","user":"UAZ33BKV2","text":"そうすると keep型リスト、force型リスト、joint(+する)リストみたいなのが必要ですかね\njoinは数値、文字列、list(shallowだけ)、blobくらいか?","ts":"1610070886.003600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"yuh"}]},{"client_msg_id":"ff742930-2e8a-4c29-89eb-7e45afa6a698","type":"message","user":"UDDCM376D","text":"こんなイメージ\n```extend(..., v:t_dict)```","ts":"1610070467.002500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/3f"}]},{"client_msg_id":"2bb64917-974e-44dd-a8f5-4671cb1a75e1","type":"message","user":"UDDCM376D","text":"type が選べるようにしたほうが良さそう","ts":"1610070446.001900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"r8GK"}]},{"client_msg_id":"51B6881E-02AB-4226-91ED-2FFE70DDEFBC","type":"message","user":"U01H161HVPS","text":"たし:crab: 難しいですね…","ts":"1610068253.001400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"3FNc"}]},{"client_msg_id":"034fbf5d-d16b-4611-96cb-4d4e173224f8","type":"message","user":"UAZ33BKV2","text":"blob値がはいってたときは、さすがにリテラル系と同じでいいか...","ts":"1610068152.000900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"m5gd"}]},{"client_msg_id":"e26db04d-e101-41b0-95b7-49becc60fbba","type":"message","user":"U03C6TEAZ","text":"たぶん dict の動作と list の動作、あと recursive を個別で設定できないと無理。","ts":"1610068100.000400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"A8I79"}]},{"client_msg_id":"a861515b-c0f3-4663-99b1-2a0149893903","type":"message","user":"U03C6TEAZ","text":"それな。(その２)","ts":"1610068055.499600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ZKjS0"}]},{"client_msg_id":"496823cb-5d4d-47f9-8895-071fe67b5438","type":"message","user":"U03C71D7H","text":"list であっても上書きしてほしい場合もあって、ユースケース次第なんですよねぇ","ts":"1610067931.499400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"C9im"}]},{"client_msg_id":"46A81458-117F-4D23-84F7-ABFDB1B92A38","type":"message","user":"U01H161HVPS","text":"extend() に第 4 引数 recursive を追加して、 true なら同階層同キーで dict どうしまたは list どうしがバッティングしたときに再起的にマージするようにしたらよさそう（適当）\ndict か list どうしじゃないときは第 3 引数にしたがう感じで","ts":"1610067810.499000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"k+O"}]},{"client_msg_id":"986777f2-91e0-4f72-a0e5-5b0c8d495873","type":"message","user":"U03C71D7H","text":"仕様を決めるのがむずい","ts":"1610067725.498700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Mbh"}]},{"client_msg_id":"489941f1-935a-4b3e-ab24-d4bc0f7f8d7c","type":"message","user":"U03C6TEAZ","text":"ソース見る限りそんなに難しくは無さそうに見えた。","ts":"1610066948.498300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dSV"}]},{"client_msg_id":"1c333515-d89e-45fc-bd37-2aeacff3ea51","type":"message","user":"U03C6TEAZ","text":"`extend()` に `merge` があるといいけど。","ts":"1610066864.497900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"VF9KV"}]},{"client_msg_id":"7655d654-cb62-4159-b780-d7dd8d74bb7a","type":"message","user":"U03C6TEAZ","text":"関数リファレンスを含んだりしてる場合もサポートしてるのでなぁ。完璧に作ると大変になる。","ts":"1610066826.497500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Rn0"}]},{"client_msg_id":"f77d904c-3ebf-461d-b6ed-42eb364d84b1","type":"message","user":"UAZ33BKV2","text":"オブジェクト(JS的に)の混交、死ぬほど大変そうだ...","ts":"1610066786.497000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1OJH"}]},{"client_msg_id":"76d7ddff-757b-498d-bceb-7612d5ed7d63","type":"message","user":"U03C6TEAZ","text":"emmet だとこんな感じだった。\n\n\u003chttps://github.com/mattn/emmet-vim/blob/60930a968d26fc7abf4f8fd5c3926bdcda2dd787/autoload/emmet.vim#L122-L171\u003e","ts":"1610066777.496700","attachments":[{"fallback":"GitHub: mattn/emmet-vim","id":1,"title":"mattn/emmet-vim","title_link":"https://github.com/mattn/emmet-vim/blob/60930a968d26fc7abf4f8fd5c3926bdcda2dd787/autoload/emmet.vim#L122-L171","text":"emmet for vim: \u003chttp://emmet.io/\u003e. Contribute to mattn/emmet-vim development by creating an account on GitHub.","thumb_url":"https://avatars1.githubusercontent.com/u/10111?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/mattn/emmet-vim/blob/60930a968d26fc7abf4f8fd5c3926bdcda2dd787/autoload/emmet.vim#L122-L171","original_url":"https://github.com/mattn/emmet-vim/blob/60930a968d26fc7abf4f8fd5c3926bdcda2dd787/autoload/emmet.vim#L122-L171"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dlm"}]},{"client_msg_id":"1b287324-241d-4fe2-a7cf-bbdfa5d2750f","type":"message","user":"U03C6TEAZ","text":"色んな型に対応すると結構長くなるし。","ts":"1610066762.496200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"mHC"}]},{"client_msg_id":"79c7eae0-a0c6-4aa1-8fcb-504e4a70a590","type":"message","user":"U03C6TEAZ","text":"マージと言う意味だと足して欲しいけど、外部のコンフィギュレーションでそれを選ばせる DSL ができないんですよね。","ts":"1610066685.495700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"8dfMa"}]},{"client_msg_id":"69f782d6-a765-4c8f-bc5a-c079e84e30b1","type":"message","user":"UDDCM376D","text":"なるほど","ts":"1610066680.495500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Kdi"}]},{"client_msg_id":"f4923ab2-4abd-4356-b6e8-6e9443edd988","type":"message","user":"UDDCM376D","text":"extend() マージされないっけな","ts":"1610066673.495100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Z2JLz"}]},{"client_msg_id":"e80eee87-702c-4b5a-b80b-c520ef772fda","type":"message","user":"U03C6TEAZ","text":"それな。","ts":"1610066642.494500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"2n2ZS"}]},{"client_msg_id":"8c473d38-5b3e-4ba9-88d6-3d87ad40251c","type":"message","user":"U03C71D7H","text":"両方 List だったらくっつけるみたいなパターンも","ts":"1610066634.494300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Cm4"}]},{"client_msg_id":"b7a81b0f-e05c-4098-90ae-ed4d1cf6bec1","type":"message","user":"U7HFY4HFY","text":"僕の関数では両方dictのとき以外はforce引数で上書きするか選べるます","ts":"1610066593.494000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"24V"}]},{"client_msg_id":"e710cb82-1ea8-428e-b5ae-ac2e88d33b99","type":"message","user":"U03C6TEAZ","text":"`echo extend({\"foo\": {\"bar\": 2}}, {\"foo\": {\"baz\": 3}, \"bar\": \"bar\"})` は `{\"foo\": {\"bar\": 3}, \"bar\": \"bar\"}` になる。","ts":"1610066555.493600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"iWux5"}]},{"client_msg_id":"5d19da6f-a7af-46f2-9219-3b692dc7ccf7","type":"message","user":"U03C6TEAZ","text":"変わらないっすね。トップのキーしか対象じゃないので。","ts":"1610066469.492400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ufA+"}]},{"client_msg_id":"dd14067a-f77e-4834-9da8-b29a547b7c6c","type":"message","user":"UAZ33BKV2","text":"forceかkeepかでやるのは変らなそう?","ts":"1610066442.491800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"8+p"}]},{"client_msg_id":"4fa3ad21-12d1-49a8-9881-bcbc33f4acbe","type":"message","user":"U03C6TEAZ","text":"ただむずいんですよね。例えば\n`{\"foo\": 1}`と `{\"foo\": {\"baz\": 3}}` をマージしたらどうするかとか。","ts":"1610066329.491200","edited":{"user":"U03C6TEAZ","ts":"1610066338.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"+4Su4"}]},{"client_msg_id":"f055a26d-2ac5-49e5-9417-73ae88b359ee","type":"message","user":"U03C6TEAZ","text":"僕も色んなプロジェクトで書いてきたけど、マージな extend 欲しいよなぁと思ってます。","ts":"1610066285.490500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"GUOeD"}]},{"client_msg_id":"07d077b6-9fe8-4b9d-9f7c-2d47896505df","type":"message","user":"U03C6TEAZ","text":"extend はマージじゃないのです。","ts":"1610066181.489800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Z/s"}]},{"client_msg_id":"bead1db6-b185-44f0-bd95-712ec9c3d1a9","type":"message","user":"U7HFY4HFY","text":"Vim9ですが","ts":"1610064548.489600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"4wggb"}]},{"client_msg_id":"42ced13a-a8ef-4950-8722-bbf9e3449a21","type":"message","user":"U7HFY4HFY","text":"qline作ったときにそんな感じの関数つくりました\n\u003chttps://github.com/Bakudankun/qline.vim/blob/master/import/qline/config.vim#L6-L23\u003e","ts":"1610064534.489300","attachments":[{"fallback":"GitHub: Bakudankun/qline.vim","id":1,"title":"Bakudankun/qline.vim","title_link":"https://github.com/Bakudankun/qline.vim/blob/master/import/qline/config.vim#L6-L23","text":"The quick, fully-customizable status line plugin written in cutting-edge Vim9 script. - Bakudankun/qline.vim","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","from_url":"https://github.com/Bakudankun/qline.vim/blob/master/import/qline/config.vim#L6-L23","original_url":"https://github.com/Bakudankun/qline.vim/blob/master/import/qline/config.vim#L6-L23"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"b1g"}]},{"client_msg_id":"6bfae920-951a-487b-9c72-baad897c9312","type":"message","user":"UDDCM376D","text":"bot居なかった","ts":"1610064440.488700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"4UAJL"}]},{"client_msg_id":"0e49d108-eff2-4dec-8154-3029fe1cb091","type":"message","user":"UDDCM376D","text":":echo 1","ts":"1610064435.488500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dVN"}]},{"client_msg_id":"692cb475-eec5-464d-8c51-c70b1cc3719d","type":"message","user":"UDDCM376D","text":"自分なら extend() を使いそう","ts":"1610064414.488200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ANv"}]},{"client_msg_id":"688d3d7a-5a04-4ede-bff2-24e9afbb1507","type":"message","user":"U03C6TEAZ","text":"`{\"foo\": {\"bar\": 2}}` と `{\"foo\": {\"baz\": 3}}` から `{\"foo\": {\"bar\": 2, \"baz\": 3}}` を作る様な。","ts":"1610062718.487900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"yMwi"}]},{"client_msg_id":"dbc50376-eb1d-417d-b652-2d5a0ee4d47e","type":"message","user":"U03C6TEAZ","text":"Vim script のネストした 2 つの Dict をマージする様な処理、みなさんどんな風にしてます？","ts":"1610062665.487200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"i2FC"}]}]
