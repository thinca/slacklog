[{"client_msg_id":"6749c164-24ba-452e-bd35-6332399463e7","type":"message","user":"U0M7GCBPD","text":"乗り遅れちゃったけど、一応 is と == の使い分け、ALE の作者さんは is を矯正するポリシーはどう？って vint に言ってますね\n<https://github.com/Kuniwak/vint/issues/233>","ts":"1566056720.097600","attachments":[{"fallback":"GitHub: Prefer is# and is? instead of ==# and ==? · Issue #233 · Kuniwak/vint","id":1,"title":"Prefer is# and is? instead of ==# and ==? · Issue #233 · Kuniwak/vint","title_link":"https://github.com/Kuniwak/vint/issues/233","text":"When you compare expressions with String literals, Vint will tell you to use ==# or ==? instead of ==, as == changes depending on user configuration, and Vint will do the same with is and strings, ...","thumb_url":"https://avatars0.githubusercontent.com/u/1124024?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/bfaba/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/Kuniwak/vint/issues/233","original_url":"https://github.com/Kuniwak/vint/issues/233"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"48a48392-5cc4-42ff-a8c2-498674678b35","type":"message","user":"U0M7GCBPD","text":"個人的には is 派ですけど主観的な見た目重視なのでなんとも…\nただ list, dict とかでは参照の比較で他では値の比較というのはちょっと分かりづらいと感じることも","ts":"1566056856.100900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"683059ff-ba19-416a-bbd1-b417f01826d1","type":"message","user":"U0M7GCBPD","text":"これすごくわかる。scala でも isEmpty と nonEmpty ってメソッドあったり ! は見づらいっていう意見は割と見るかも\n<https://vim-jp.slack.com/archives/CJMV3MSLR/p1566021585072700>","ts":"1566056920.102300","attachments":[{"fallback":"[August 16th, 2019 10:59 PM] mckn: `!` ←これが打ちづらいので `isnot#` ちょっと好き","id":1,"author_id":"U9GUS1S0G","author_name":"Masaaki Nakamura","author_subname":"Masaaki Nakamura","author_link":"https://vim-jp.slack.com/team/U9GUS1S0G","author_icon":"https://avatars.slack-edge.com/2018-03-17/331536821795_2102b9fe65a8287cf20b_48.jpg","text":"`!` ←これが打ちづらいので `isnot#` ちょっと好き","mrkdwn_in":["text"],"blocks":null,"footer":"Posted in #question","ts":1566021585.072700,"from_url":"https://vim-jp.slack.com/archives/CJMV3MSLR/p1566021585072700","original_url":"https://vim-jp.slack.com/archives/CJMV3MSLR/p1566021585072700"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"603e6236-0678-47d9-a903-ac8811230203","type":"message","user":"UDDCM376D","text":"[質問]\n`expressionレジスタ`ってあらゆる式を入力することができ、かつその式の評価結果が数値もしくは文字列でなければ行けないとマニュアルに書いてありますが、\n`:=echo 1` だと `E121: Undefined variable: echo` になるのですが、これは式ではないということですか？\nコマンドラインモードで実行できるコマンドはすべてイケルと思っていました","ts":"1566096778.104600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"b2600262-be78-4cb8-a012-6fabdc15a3de","type":"message","user":"U6XP9LZ6V","text":"`echo` はexコマンドで、その例だと `1` が式ですね。","ts":"1566096970.105200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e30e246a-3246-4549-9bf5-a66600a5c7a5","type":"message","user":"UDDCM376D","text":"あー","ts":"1566097116.105400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"bebf02a8-5f25-42b8-9a7b-b1438c16ddcc","type":"message","user":"UDDCM376D","text":"`echo 1`が式だと思っていました\nで、その式を評価して結果 `1`を返すかと","ts":"1566097138.106000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"019fd65e-2fcb-4d10-9996-aa0669503e09","type":"message","user":"UDDCM376D","text":"イマイチ、式を理解できない","ts":"1566097239.106900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"2eb67bc9-52e8-46c8-a6f4-cdb020dbb394","type":"message","user":"U6XP9LZ6V","text":":h expression-syntax","ts":"1566097339.107400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U894RTUJY","text":"```\n2. 式の文法                                             *expression-syntax*\n \n式文法一覧、優先順位の低いものから高い順に:\n \n|expr1| expr2\n        expr2 ? expr1 : expr1   if-then-else 条件式\n \n|expr2| expr3\n        expr3 || expr3 ...      論理和\n \n|expr3| expr4\n        expr4 &amp;&amp; expr4 ...      論理積\n \n|expr4| expr5\n        expr5 == expr5          等しい\n        expr5 != expr5          等しくない\n        expr5 &gt;  expr5          より大きい\n        expr5 &gt;= expr5          大きいか等しい\n        expr5 &lt;  expr5          より小さい\n        expr5 &lt;= expr5          小さいか等しい\n        expr5 =~ expr5          正規表現にマッチする\n        expr5 !~ expr5          正規表現にマッチしない\n \n        expr5 ==? expr5         文字列として等しい(大文字/小文字区別無し)\n        expr5 ==# expr5         文字列として等しい(大文字/小文字区別有り)\n        etc.                    上記の各式は大小文字の区別を、?を付加すると行\n                                わず、#を付加すると行う\n \n        expr5 is expr5          同一のリスト |List|、辞書 |Dictionary| または\n                                |Blob| のインスタンス\n        expr5 isnot expr5       異なるリスト |List|、辞書 |Dictionary| または\n                                |Blob| のインスタンス\n \n|expr5| expr6\n        expr6 +  expr6 ...      足し算、リストまたはBlobの連結\n        expr6 -  expr6 ...      引き算\n        expr6 .  expr6 ...      文字列の連結\n        expr6 .. expr6 ...      文字列の連結\n \n|expr6| expr7\n        expr7 *  expr7 ...      掛け算\n        expr7 /  expr7 ...      割り算\n        expr7 %  expr7 ...      剰余(割った余り)\n \n|expr7| expr8\n        ! expr7                 論理否定\n        - expr7                 単項のマイナス {訳注: -1等}\n        + expr7                 単項のプラス\n \n|expr8| expr9\n        expr8[expr1]            文字列のバイト、またはリストの要素\n        expr8[expr1 : expr1]    文字列の部分文字列、またはリストの部分リスト\n        expr8.name              辞書 |Dictionary| の要素\n        expr8(expr1, ...)       |Funcref| 変数による関数呼び出し\n \n|expr9| number                  数定数\n        \"string\"                文字列定数。バックスラッシュは特別な意味を持つ\n        'string'                リテラル文字列定数。'を含めるには2重にする\n        [expr1, ...]            リスト |List|\n        {expr1: expr1, ...}     辞書 |Dictionary|\n        &amp;option                 オプション変数\n        (expr1)                 式の入れ子\n        variable                内部変数\n        va{ria}ble              波括弧付きの内部変数\n        $VAR                    環境変数\n        @r                      レジスタ 'r' の値\n        function(expr1, ...)    関数呼出し\n        func{ti}on(expr1, ...)  波括弧付きの関数呼出し\n        {args -&gt; expr1}         ラムダ式\n \n\"...\" はその演算が、その後に他の演算を続ける事ができることを示している。\n例:  \n        &amp;nu || &amp;list &amp;&amp; &amp;shell == \"csh\"\n \n一つのレベルにある全ての式は左から右に解釈される。\n```","ts":"1566097339.107500","bot_id":"B894RTUCU","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"d8fb0b30-c74a-4d39-bba5-4f105cb5dc25","type":"message","user":"UDDCM376D","text":"<http://mandel59.hateblo.jp/entry/2015/11/27/002638>","ts":"1566097378.107700","attachments":[{"fallback":"Ryusei’s Notes (a.k.a. M59のブログ): プログラミングにおける〈式〉についての考察 - Ryusei’s Notes (a.k.a. M59のブログ)","id":1,"title":"プログラミングにおける〈式〉についての考察 - Ryusei’s Notes (a.k.a. M59のブログ)","title_link":"http://mandel59.hateblo.jp/entry/2015/11/27/002638","text":"「プログラムとは何か」という質問に対する、最も素朴な回答は「プログラムとは、機械に与える命令文の並びのことです」というものだ。命令文を解釈する機械が、プログラムに記された命令に従って、装置を制御し、計算処理を実行する。このようなことは、情報科学の基礎として学校で教えていると思う。一方で、今日の高水準言語によるプログラミングでは、〈式〉という概念を理解していることがとても重要だ。特に、関数型プログラミングが注目されるようになった今日では、もはや単なる数式としての理解では十分でない。しかし、プログラミング言語における〈式〉は〈サブルーチン〉や〈関数〉のような概念に比べると自明であるように思われてい…","thumb_url":"http://chart.apis.google.com/chart?cht=tx&chl=%2010%20%5Ctimes%204%20%2B%202","blocks":null,"ts":1448551598,"service_name":"Ryusei’s Notes (a.k.a. M59のブログ)","service_icon":"https://cdn.blog.st-hatena.com/images/touch-icon-iphone-retina.png","thumb_width":64,"thumb_height":15,"from_url":"http://mandel59.hateblo.jp/entry/2015/11/27/002638","original_url":"http://mandel59.hateblo.jp/entry/2015/11/27/002638"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f43119c1-f91f-4bb2-a440-63dc138fe66d","type":"message","user":"UDDCM376D","text":"読んでいるナウ","ts":"1566097382.108000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"09f35e4e-0182-4531-99bd-f2ad5de12090","type":"message","user":"U6XP9LZ6V","text":"おおざっぱに言えば、Vim scriptにおける式は、 `echo` に渡したり `let` の右辺に書けるもの。","ts":"1566097593.109600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"2550160f-d9a9-46ff-83a1-983cf490988d","type":"message","user":"UDDCM376D","text":"例えば `if (a ==b)` なら `(a ==b)` は式という理解ですが、 `if` はなんだろうってなります","ts":"1566097653.110700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"bc9fa5d8-fe6c-4559-97cf-518a00b8633b","type":"message","user":"U03C71D7H","text":"コマンドですね","ts":"1566097664.110900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f9ff8861-b58f-4a58-93ea-52ee7af6a2b5","type":"message","user":"UDDCM376D","text":"Vim scripitに限らず、 `if` などの命令文って式ではないということですね","ts":"1566097688.111500","edited":{"user":"UDDCM376D","ts":"1566097693.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4f85ef39-4f5b-42f5-a162-b407b312c675","type":"message","user":"U03C71D7H","text":"それは言語によります","ts":"1566097697.111900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5cb029a2-2021-4238-b101-c1686379932a","type":"message","user":"UDDCM376D","text":"なる","ts":"1566097703.112200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"78208863-df51-4364-b511-54916feedeec","type":"message","user":"U03C71D7H","text":"例えば C では式ではなくてステートメントですね","ts":"1566097749.112900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c1899dd3-b00a-41c4-b65b-5ecfd52751a5","type":"message","user":"UDDCM376D","text":"Vim scriptでは `echo` や `let` はコマンドで、 その右辺が式なんですね","ts":"1566097767.113600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"24400b8f-f0d6-4423-99f4-332127337e28","type":"message","user":"U03C71D7H","text":"わかりやすい判断方法があって、式は値を持ちます。評価した結果が値になります","ts":"1566097773.113800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"229c63cf-1b47-40ae-b4fd-8fd36887fe26","type":"message","user":"UDDCM376D","text":"あー","ts":"1566097785.114300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f138b94c-838c-4101-b787-a5bc2860826d","type":"message","user":"U03C71D7H","text":"Ruby や割と近代的な言語だと、if は式になります","ts":"1566097792.114600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"81ae1a53-7a12-4f73-9349-e5cf945984c8","type":"message","user":"UDDCM376D","text":"Rubyってifは値を持つ？","ts":"1566097816.115300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"2b7f25ef-158c-46c9-8c46-b821ec61c89f","type":"message","user":"U03C71D7H","text":"```\nfoo =\n  if cond\n    'hoge'\n  else\n    'fuga'\n  end\n```","ts":"1566097821.115600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"910a2848-dcff-423e-8ff7-1579fe066a92","type":"message","user":"UDDCM376D","text":"お？","ts":"1566097822.115800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"44c21bb5-9207-460b-8b0b-8ca3d984dd57","type":"message","user":"UDDCM376D","text":"あー","ts":"1566097828.116000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d8544001-3fce-45d0-8149-5637addb4b3e","type":"message","user":"UDDCM376D","text":"へえ","ts":"1566097831.116300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6a10352e-3cb6-4376-8d99-b46eeaab8cfc","type":"message","user":"U03C71D7H","text":"Ruby ではこのようなことができます。 `if` が値を返すので、 Ruby の `if` は式です","ts":"1566097845.116600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"16062438-80ac-4b5b-a1f6-2a4d8baddb1f","type":"message","user":"UDDCM376D","text":"なるほど","ts":"1566097857.116800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"902efc03-5ea9-4ed5-a839-23a28d608b56","type":"message","user":"U03C6TEAZ","text":"最近だと if が式の言語を喜ぶ人が増えましたね。","ts":"1566097895.117600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"a3646e60-cbba-4d01-8478-15af29f2ef3d","type":"message","user":"U03C71D7H","text":"できることが増えますからねー","ts":"1566097918.118000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"3ad83762-77a2-45e6-a0a2-7856fcd16614","type":"message","user":"UDDCM376D","text":"```\nfor i range [1,2,3]\nendfor\n```\n\nこれなら、式はどの部分になるのですか？","ts":"1566097976.118800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"79edacce-eb47-45fd-b99e-1a6156d75927","type":"message","user":"UDDCM376D","text":"`i range [1,2,3]` ですかね","ts":"1566097989.119200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"9d2df8a6-3d57-4e50-b620-6014676a7aa9","type":"message","user":"U03C71D7H","text":"これは言語は…","ts":"1566097994.119400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"73e9167b-9fcf-40d6-a94e-54fff4748c7f","type":"message","user":"U03C71D7H","text":"Vim script なら `for i in range(1, 3)` ??","ts":"1566098035.119900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f2bd4dd4-d514-4d62-8462-27d18b249536","type":"message","user":"UDDCM376D","text":"間違えた","ts":"1566098078.120100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"b1f40610-b4d7-49e2-b295-ee0a3f079452","type":"message","user":"UDDCM376D","text":"`for i in [1,2,3]` です","ts":"1566098088.120500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"2976a291-8d42-4b35-a58c-54021b7551ad","type":"message","user":"U03C71D7H","text":"これだと `[1,2,3]` の部分だけが式です","ts":"1566098104.120800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"03b651d8-f046-4adf-b9df-08fc7506e23f","type":"message","user":"UDDCM376D","text":"ってことは `=[1,2,3]` はちゃんと評価されるのか","ts":"1566098145.121200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"fa095171-d4f0-473e-9976-e7089a3cf0a9","type":"message","user":"UDDCM376D","text":"お、ちゃんと評価された","ts":"1566098163.121600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"0b54c402-5c10-4212-9075-9ff9f38dadb1","type":"message","user":"UDDCM376D","text":"`for`の右側がすべて式というわけではないんですね\n雑に言うとってのはこういうことか","ts":"1566098207.122300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"792da428-b691-4ebc-948e-fec843a256b8","type":"message","user":"U03C71D7H","text":"`:for` コマンドのシグネチャが `:for {変数名} in {式}` になります","ts":"1566098259.122900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"b250b7d4-997b-4167-a6c6-20a7184a7884","type":"message","user":"UDDCM376D","text":":h :for","ts":"1566098303.123200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U894RTUJY","text":"```\n:for {var} in {object}                                  *:for* *E690* *E732*\n:endfo[r]                                               *:endfo* *:endfor*\n                        {object}の各要素に対し、\":for\" と \":endfor\" の間のコマ\n                        ンドを繰り返す。{object}はリスト |List| または |Blob|\n                        である。変数{var}に各要素の値がセットされる。ループの\n                        内側のコマンドでエラーが検出されたときは \"endfor\" の後\n                        から実行が継続される。ループの内側で{object}を変更する\n                        とどの要素が使われるかに影響を与える。それを望まない場\n                        合はコピーを作ること:  \n                                :for item in copy(mylist)\n                        {object}が |List| でコピーを作らない場合、Vimは現在の\n                        要素に対してコマンドを実行する前に、|List| の次の要素\n                        への参照を保存する。そのため副作用なしに現在の要素を削\n                        除することができる。それ以降の要素を変更すると、それが\n                        見つからなくなる。つまり以下の例は動作する(|List| を空\n                        にする非効率な方法):  \n                                for item in mylist\n                                   call remove(mylist, 0)\n                                endfor\n                        Note |List| を並べ替える(例えばsort()やreverse()で)と\n                        予期しない結果になることがある。\n \n                        {object}が |Blob| の場合、Vimは常にコピーを作成して繰\n                        り返す。|List| とは異なり、|Blob| を変更しても繰り返し\n                        には影響しない。\n \n:for [{var1}, {var2}, ...] in {listlist}\n:endfo[r]\n                        上の \":for\" と同様だが、{listlist}の各要素がリストでな\n                        ければならない点が異なる。そのリストの各要素が{var1},\n                        {var2}などに代入される。例:  \n                                :for [lnum, col] in [[1, 3], [2, 5], [3, 8]]\n                                   :echo getline(lnum)[col]\n                                :endfor\n```","ts":"1566098303.123300","bot_id":"B894RTUCU","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"e18eec7b-f3c6-4cef-b560-c4152a8d41f9","type":"message","user":"UDDCM376D","text":"`{object}` ってなっているけど、厳密に言うと式なんですね","ts":"1566098364.123800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"1a510958-d02f-4e51-ade4-0cf1a4363ef2","type":"message","user":"U6XP9LZ6V","text":"式の評価結果がリストかBlobでなければならないので、 `{expr}` ではなく `{object}` と書いてあるのです。","ts":"1566098500.125500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"614f4b07-7730-440f-a518-29af3b618cad","type":"message","user":"UDDCM376D","text":"`{object}はリスト |List| または |Blob|である` か","ts":"1566098512.125800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"8b269b74-b791-4888-bd3d-bd923a5e053d","type":"message","user":"UDDCM376D","text":"&gt;式の評価結果がリストかBlobでなければならないので、 ｀{expr}｀ ではなく ｀{object}｀ と書いてあるのです。\n理解","ts":"1566098526.126200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"eae64096-014a-4786-8fcc-605a7ae569e7","type":"message","user":"UDDCM376D","text":"なんとなくわかってきたので、あとは普段から意識して見てみます","ts":"1566098548.126800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"164c4d8b-769e-4e21-be63-6845792939f6","type":"message","user":"UDDCM376D","text":"ありがとうございます","ts":"1566098552.127100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"2d9436b5-4544-4d68-9cb6-3254c4a6001f","type":"message","user":"UDDCM376D","text":"すいません、randomで書いてしまったので、追加で質問です\n\ni_ctrl-aって挿入されたテキストだけじゃなくて、例えば ｀i&lt;C-w&gt;&lt;Esc&gt;｀という操作だったら、 ｀&lt;C-w&gt;｀ が繰り返されるのですが、仕様ですか？？\n動きをみると厳密には直前の変更を繰り返すっていう説明が正しい様に思えます","ts":"1566098627.127900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"52f2f5e9-70c0-4653-99e9-e93367e082e3","type":"message","user":"UDDCM376D","text":":h i_ctrl-a","ts":"1566098633.128100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U894RTUJY","text":"```\n                                                *i_CTRL-A*\nCTRL-A          直前に挿入されたテキストをもう一度挿入する。 {Vi にはない}\n```","ts":"1566098633.128200","bot_id":"B894RTUCU","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"376f9d5f-7f08-49e8-99e7-58beaa59897a","type":"message","user":"U03C71D7H","text":"たぶん仕様な気がしますね","ts":"1566099315.128500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"74fc6828-4632-42c0-8d24-7032c42bde6e","type":"message","user":"U03C71D7H","text":"help の文言がわかりづらいのはわかる","ts":"1566099345.128800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"2a33a793-cac7-4e8c-b19d-309ad73cb908","type":"message","user":"UDDCM376D","text":"挿入モードに入ってから抜けるまでの変更が繰り返される感じなので、文言変えたほうが良い気がします","ts":"1566099877.130200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"b57e53da-bbf3-4f53-b7f2-bb34abee9a8a","type":"message","user":"UJTGZD7V1","text":"質問です。\nコマンドラインの言語を日本語から英語に変えたいのですが、どう設定するのでしょうか。","ts":"1566120513.132100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"05D3ADD9-487C-44C9-A223-9EC226DF0091","type":"message","user":"UDDCM376D","text":"コマンドラインの言語ってなんでしょうか？","ts":"1566120663.134000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7435C329-8A58-4283-BD7A-2BB3867B7259","type":"message","user":"UDDCM376D","text":"コマンドラインに出てくるメッセージのことかな？","ts":"1566120681.134500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"8c6b6cc9-9e5d-404f-9818-2273bd3e3b5d","type":"message","user":"UJTGZD7V1","text":"あ、ですです。","ts":"1566120697.134800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"09867D78-40C5-4BD7-8060-C57F6D3BC377","type":"message","user":"UDDCM376D","text":"あー","ts":"1566120703.135000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"8ce2d3c8-05d3-4221-ac3f-2eb49f23c745","type":"message","user":"UAZ33BKV2","text":"たとえばbashなら\n```\n$ LANG=C vim\n```\nとかするなら英語になりますが、たぶん解決しないですよね?","ts":"1566120706.135200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"9302876B-8E21-48B1-A584-461CA0E98241","type":"message","user":"UDDCM376D","text":"やったことがないからちょっとわからない…","ts":"1566120728.135800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"70EB55BF-2214-4A1B-BC42-199D6077B16D","type":"message","user":"UDDCM376D","text":"どうやるんだろ","ts":"1566120732.136000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"859e06cd-8b73-44c1-8599-55bfd0daa213","type":"message","user":"UJTGZD7V1","text":"解決しました!","ts":"1566120735.136200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"C58F69A5-F6B5-471D-AE26-B6115E6758D3","type":"message","user":"UDDCM376D","text":"お","ts":"1566120738.136400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"9C1CD572-1548-4052-B128-1E145D1AF93D","type":"message","user":"UDDCM376D","text":"LANGに依存してるのかな","ts":"1566120754.137100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"5bef8a12-ba1a-45f5-b4c2-acae095ee640","type":"message","user":"UJTGZD7V1","text":"LANGをsetすればいいのかな。","ts":"1566120769.137500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6048af78-553c-48de-80e4-cb8b99df6429","type":"message","user":"UJTGZD7V1","text":"日本語でエラー出力されると情報逃しやすくなる気が..","ts":"1566120842.138400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"96b325b9-c94e-4211-bbd6-c64dbf885d1d","type":"message","user":"UJTGZD7V1","text":"?Langというのはvimrc上で設定できるのでしょうか?","ts":"1566120997.139200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"eb4da3c5-4348-40b1-86ae-8a6c316b9586","type":"message","user":"UJTGZD7V1","text":"あ、シェルですね。","ts":"1566121028.139600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"b8adaa93-6496-42a0-9695-45900e7c3cb1","type":"message","user":"UJTGZD7V1","text":"`alias vim='LANG=C vim'` でエイリアス設定しました。(zshです)\n解決です。ありがとうございます!!","ts":"1566121449.141500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"85bd0ae1-2529-4436-85a8-528e97ae18cf","type":"message","user":"U72TB62UF","text":"`質問です`\n以下のコードで連結しつつ改行を挿入してから、\n\n```\nlet l:str = join(getline(6, \"$\"), \"\\r\")\n→\n以下のテキストが取得される\naaa\nbbb\nccc\n```\ncall setline(1, l:str)でバッファに挿入したところ、\n\n^Mが入ってしまいます。\n&gt; aaa^Mbbb^Mccc\n\nset fenc?はutf-8、set ff? はunixであり、\n編集対象のバッファも同じエンコーディングになっています。\n\n文字列に挿入した改行コードが^Mにならずに改行できるようにするには、\nどのようにすれば良いでしょうか。","ts":"1566121720.141700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7996c21d-f769-49a7-9889-1cdb9dc96dba","type":"message","user":"UBQ2H65JQ","text":"setlineってリストを引数にとれなかったけ？","ts":"1566122195.142400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"4452dda4-4fe6-4de7-84f7-946d39484a67","type":"message","user":"UBQ2H65JQ","text":":h setline()","ts":"1566122227.142900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U894RTUJY","text":"```\nsetline({lnum}, {text})                                 *setline()*\n                カレントバッファの{lnum}行目を{text}にする。行を挿入したい場合\n                は |append()| を使う。別のバッファの行を変更したい場合は\n                |setbufline()| を使う。{lnum}内のテキストプロパティはすべて消\n                去される。\n \n                {lnum}は|getline()|のときと同じように解釈される。\n                {lnum}が最後の行の次の行の場合、新規行として{text}を追加する。\n \n                成功したら0を返す。失敗したら(大抵{lnum}が無効な値のとき)1を返\n                す。\n \n                例:  \n                        :call setline(5, strftime(\"%c\"))\n \n                {text}がリスト|List|の場合、{lnum}行目とそれ以降の行にリストの\n                要素をセットする。例:  \n                        :call setline(5, ['aaa', 'bbb', 'ccc'])\n                上の例は次と同値である:  \n                        :for [n, l] in [[5, 'aaa'], [6, 'bbb'], [7, 'ccc']]\n                        :  call setline(n, l)\n                        :endfor\n \n                Note: マーク '[ と '] はセットされない。\n```","ts":"1566122227.143000","bot_id":"B894RTUCU","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"763302e9-d600-4f12-aeb5-19bb412206bb","type":"message","user":"UBQ2H65JQ","text":"とれる","ts":"1566122257.143300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"6ebc6fc2-c8ea-4a25-b48b-84d4e00274d6","type":"message","user":"UBQ2H65JQ","text":"なのでjoinせずにsetlineにわたせばいけるかと","ts":"1566122300.144300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"05514566-E39B-4CDF-A28D-FC4566F98B3F","type":"message","user":"UDDCM376D","text":"joinしなくて良いですね","ts":"1566125175.144600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"d1d8c40b-d043-4514-a0b5-dee6050fd208","type":"message","user":"UDDCM376D","text":"`call setline(\".\", getline(6, \"$\"))` でイケるはず","ts":"1566125430.145000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"e6325b09-9e4c-4cb0-a044-850d9b664052","type":"message","user":"UAZ33BKV2","text":"あと \\r じゃなくて \\n だったらよかったのかも?","ts":"1566125996.145400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"f7bcee2d-aa4b-4006-bdf8-4886065f1332","type":"message","user":"UAZ33BKV2","text":":h expr-string","ts":"1566126004.145700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"type":"message","user":"U894RTUJY","text":"```\n文字列                                  *string* *String* *expr-string* *E114*\n```","ts":"1566126005.145800","bot_id":"B894RTUCU","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null},{"client_msg_id":"542a218d-cd73-483d-951c-085ef91349ab","type":"message","user":"UAZ33BKV2","text":"おおう\n```\n文字列\t\t\t\t\t*string* *String* *expr-string* *E114*\n------\n\"string\"\t\t文字列定数\t\t*expr-quote*\n\nダブルクォートが使われていることに注意。\n\n文字列定数には以下の特殊文字が使用できる:\n...\n\\n\t改行 &lt;NL&gt;\n\\r\t改行(キャリッジリターン) &lt;CR&gt;\n```","ts":"1566126049.146300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"c35d9092-5577-4e91-ac30-c246de4342a7","type":"message","user":"U72TB62UF","text":"できました。ありがとうございます！","ts":"1566126444.146500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"073ba8b9-e666-4537-a1b6-d56d6e9712f5","type":"message","user":"U72TB62UF","text":"（ ；´。 ｀；）←って、2年前にthincaさんに類似の質問をしていた顔文字。\n<https://teratail.com/questions/75993>","ts":"1566126492.147100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"7c1a7127-dfed-4578-8198-a8ce609d1e7e","type":"message","user":"U72TB62UF","text":"まるで成長していない……","ts":"1566126499.147400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"},{"client_msg_id":"b287151f-1b82-49e1-9432-41dd593263da","type":"message","user":"U72TB62UF","text":"appendはリスト渡せることは知っていたので、似たことをするsetlineでもできないかと推測すべきでした…","ts":"1566126549.148200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":null,"source_team":"T03C4RC8V","user_team":"T03C4RC8V"}]
