[{"client_msg_id":"bf7058d9-4c9a-45c5-a687-5de2898cc3a2","type":"message","user":"U01D44KSY9Z","text":"ちなみに本家の作者さん（ぐれさん）にはしっかりバレました","ts":"1609584097.456100","team":"T03C4RC8V","reactions":[{"name":"warau","count":4,"users":["U78A6ESHM","U9S4G0LJW","UEB0VGD7E","U016XJSPYD8"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Fiyj"}]},{"client_msg_id":"dd73d757-00ad-424e-81fa-da7b4260ae74","type":"message","user":"U01D44KSY9Z","text":"本家（go製）のコメントに書いてあって面白かったのでパクってきた奴ですね\nコード内コメントはほぼ本家から引っ張ってます","ts":"1609584064.455600","team":"T03C4RC8V","reactions":[{"name":"warau","count":1,"users":["U9S4G0LJW"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"GJMC"}]},{"client_msg_id":"ae1fc5fc-78bf-49aa-a8c9-2be67553dfb9","type":"message","user":"U9S4G0LJW","text":"ojichar-rsなんとなく覗いてるけど `おじさんの文句の形態素解析に使われるなんて可哀そうなライブラリだな` とか書いてあるのがもう","ts":"1609583977.454100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rKuek"}]},{"client_msg_id":"e2f315fa-cc3e-4a4f-9111-d6bb37e3bcd5","type":"message","user":"U9S4G0LJW","text":"RustのためにCやるのはなんかつらそう、ありがたみはわかるだろうけど…","ts":"1609583874.453200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Gjdk"}]},{"client_msg_id":"469b3dd2-c0bb-49c6-acad-9f877947ff82","type":"message","user":"U01D44KSY9Z","text":"先にCで基礎固めたほうが良かった説","ts":"1609583838.452800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"KkD6"}]},{"client_msg_id":"0ca52468-a965-4ba8-936b-4aab9bfb1fef","type":"message","user":"U01D44KSY9Z","text":"↑の記事で紹介してるリポジトリとかちゃんと添削したらめちゃくちゃ赤が付きそうだなと思ってる","ts":"1609583810.452400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"XdR"}]},{"client_msg_id":"b3a6e5d2-6fb0-4a06-a9c1-66c722024594","type":"message","user":"UAZ33BKV2","text":"ただ、GCでの解決はあくまでreleaseがってだけで、共有オブジェクトとかで事故るのはかわらないので、やっぱそこまでかなあ...というのはある(C者として何時も意識してたから)","ts":"1609583714.451500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"BR7a"}]},{"client_msg_id":"b648a68f-47a2-47f7-9237-9ed2e50665fa","type":"message","user":"UL6CFN8NR","text":"`anyhow` はとりあえず入れてます（が、 anyhow が本質的にどんな仕事をやってくれているのかよく分かってない）","ts":"1609583667.450100","edited":{"user":"UL6CFN8NR","ts":"1609583728.000000"},"team":"T03C4RC8V","reactions":[{"name":"eyes","count":2,"users":["U78A6ESHM","U01D44KSY9Z"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"efZ"}]},{"client_msg_id":"8558786a-2633-4e1f-97df-4549c6ad6c0c","type":"message","user":"U8R597E9H","text":"Result と ? を使うのがいいんじゃないのかなって思ってましたが、crate 入れたほうがいいんですかね。","ts":"1609583652.449700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Yltg"}]},{"client_msg_id":"13819d0b-5dae-4b52-bafc-1079a5024a45","type":"message","user":"UL6CFN8NR","text":"エラーハンドリング、どんな crate をどんな風に使うのが最善なのかよく分かっていない","ts":"1609583626.449100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Q3s"}]},{"client_msg_id":"aeb65883-9c09-44b0-a8b0-c80063809d97","type":"message","user":"U78A6ESHM","text":"try - catch で握りつぶしてる感がすごく出るんだけど、そうでもないんすかね。","ts":"1609583592.448400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"CNR7+"}]},{"client_msg_id":"203ce626-f81d-4be5-957b-6fdf896fe0e8","type":"message","user":"U8R597E9H","text":".clone() 便利すぎてやばい問題がありますよね。。。","ts":"1609583570.447700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"mgEc"}]},{"client_msg_id":"a15ba70d-db69-4b3d-bae4-72bc3e5c6c2f","type":"message","user":"U01D44KSY9Z","text":"多少のpanicは自前の型ガードもどきで対処してしまうのでunwrapでも問題ない理論","ts":"1609583555.447400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"IcpOs"}]},{"client_msg_id":"6abf5fac-21c4-416a-ad8d-a780dc3f62b6","type":"message","user":"U78A6ESHM","text":"unwrap() つけまくり問題…","ts":"1609583517.446300","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":2,"users":["UL6CFN8NR","U01D44KSY9Z"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"nm4j"}]},{"client_msg_id":"70b79bfc-fc4d-4583-a7f1-030bd2478ed4","type":"message","user":"UL6CFN8NR","text":"「ええい、もうよい、もうよい。全てに `.clone()` を付けてしまえ」","ts":"1609583483.445500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"7Dz"}]},{"client_msg_id":"86a7fba8-b87d-4ef7-8af5-109b10af0ae1","type":"message","user":"U01D44KSY9Z","text":"今までどれだけGCの恩恵に与ってたかを思い知らされた","ts":"1609583479.445300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"UC+FK"}]},{"client_msg_id":"f09a6992-8715-4fb9-9476-85e34d1d1e2e","type":"message","user":"U9S4G0LJW","text":"GCが無くて検査しない言語ではいい加減にすると死ぬ","ts":"1609583465.444600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ZJNu"}]},{"client_msg_id":"f53a277b-b1dc-4e53-8988-34d1db92dfbd","type":"message","user":"U9S4G0LJW","text":"GCがある言語ではこのへんいい加減でも動く","ts":"1609583450.444100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"HJl"}]},{"client_msg_id":"3576b288-dc96-4677-a776-717db145f2b1","type":"message","user":"U9S4G0LJW","text":"所有権云々、意識するべきと意識しなくてはいけないの間には天と地くらい差がある","ts":"1609583437.443600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Hhh"}]},{"client_msg_id":"9317b830-0162-4b3e-88d8-b0f471137bfb","type":"message","user":"U01D44KSY9Z","text":"多分コンパイルエラーが不親切だったらRust挫折してましたね\nエラー潰せばとりあえず動いてしまう\n動いてる（問題がないとは言ってない）","ts":"1609583399.442800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ydV"}]},{"client_msg_id":"4fc5bbff-d066-4429-b632-9d6f62cb3231","type":"message","user":"U9S4G0LJW","text":"ガチガチな静的言語はコンパイル通ったら大丈夫という安心感がある","ts":"1609583386.442500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jEV"}]},{"client_msg_id":"7505ca31-cc11-4c99-8f23-b5dcebc94396","type":"message","user":"UAZ33BKV2","text":"ライフタイムも生存期間、スコープと考えると基本的にどの言語でも意識するんですけど、Rustは特徴的ですよね...","ts":"1609583384.442300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"v8V"}]},{"client_msg_id":"f33aafe1-847d-41f5-9c8a-7d0803ae9325","type":"message","user":"U8R597E9H","text":"コンパイル通ったらきっとだいじょうぶなんだろうと信じている","ts":"1609583369.441600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"b07"}]},{"client_msg_id":"fb5c2de7-77ec-4368-9319-205ed9832c1f","type":"message","user":"UL6CFN8NR","text":"3. エラー回避するやり方は分かったけど、どうもデータ構造から大幅に書き直さなきゃいけないらしくて辛い\nもあるかも","ts":"1609583366.441200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"H37w3"}]},{"client_msg_id":"123414e1-6713-4d89-b54c-9d3755e6a24e","type":"message","user":"U9S4G0LJW","text":"\u0026gt; どう書けばエラー回避できるのかわからない\nわかる","ts":"1609583363.441000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xx=N"}]},{"client_msg_id":"f3da4a64-3919-44a9-b453-fa832898a9d8","type":"message","user":"U78A6ESHM","text":"3. 書いたコードでコンパイル通ったけど本当にこれでいいのかわからなくて不安","ts":"1609583352.440100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"8diQb"}]},{"client_msg_id":"7ce30179-ab50-4935-a9c4-935701d712b7","type":"message","user":"UL6CFN8NR","text":"Rust の所有権周りのエラーって、一般に\n1. なんで今のコードが「所有権的によろしくない」のか分からない\n2. 所有権的にダメな理由は分かったけど、それをどう書けばエラー回避できるのかわからない\nという2段階の辛さを踏む気がしますね。","ts":"1609583320.439400","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":1,"users":["U9S4G0LJW"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"zWz"}]},{"client_msg_id":"726c11be-81ee-418c-8370-fd7e18d4e9d0","type":"message","user":"U8R597E9H","text":"ライフタイムが足りないよ！って言われたときは「たしかに足りなそう」って思うのはわかるんですが、じゃあどこに何を書いたらいいのかっていうのがほんとに謎です。","ts":"1609583287.438700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"2upbf"}]},{"client_msg_id":"edf6cfb3-e816-411e-8e76-d0f09c74e3e8","type":"message","user":"U01D44KSY9Z","text":"コンパイルエラーが親切なおかげで雰囲気だけ書けてる風になっている","ts":"1609583245.437600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"50Xi"}]},{"client_msg_id":"9b838bbc-1d84-48e1-b112-d6bb6b7ca960","type":"message","user":"U78A6ESHM","text":"めっちゃわかる","ts":"1609583192.436800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"aXZ"}]},{"client_msg_id":"3867df19-8ef9-4619-baa4-7bc77a4d07fc","type":"message","user":"U8R597E9H","text":"'a ってなんだよっていつも思っています。","ts":"1609583182.436600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Hh1"}]},{"client_msg_id":"0f30e477-2189-46f8-8082-4be095f4be2a","type":"message","user":"U78A6ESHM","text":"わかる…","ts":"1609583178.436500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"mYHV"}]},{"client_msg_id":"0ead6617-14cb-49da-8a81-d509ff1c8fd6","type":"message","user":"U8R597E9H","text":"所有権はまだ「なるほどな」という感じでいいんですが、ライフタイムは文法も意味わからないし、難しい。。。","ts":"1609583167.436100","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":1,"users":["UL6CFN8NR"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Cwwv"}]},{"client_msg_id":"CA3A7887-C247-420A-AB09-C8C2991F487E","type":"message","user":"U01AQ5BFNLX","text":"RBE知らなかった やってみよう","ts":"1609582430.435700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"uu2="}]},{"client_msg_id":"a5197f66-406a-4cbb-84a5-26d4640ec633","type":"message","user":"U7TMPGWJ0","text":"\u0026gt; ひとつの言語について何百ページも読むのがあなたの好みに合わなければ、 Rust By Exampleにお任せください。the bookはコードをたくさんの言葉で説明しますが、 RBE (Rust By Example)はたくさんのコード例を示し、説明は最小限です。練習問題もあります！","ts":"1609582036.435100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"RarKI"}]},{"client_msg_id":"73be58b8-b09c-4143-a121-4f4d40b4f6a9","type":"message","user":"U7TMPGWJ0","text":"(Go by Example みたいなやつ)","ts":"1609581902.434800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"PEpGD"}]},{"client_msg_id":"490ba8c3-8587-4d97-9b2c-a9891b4b0e59","type":"message","user":"UAZ33BKV2","text":"所有権、個人的に言語自体でサポートしてなくても、ちゃんと意識しなきゃいけないものなので、わからないはちょっとまずい","ts":"1609581884.434500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"V4s"}]},{"client_msg_id":"142c0714-cd02-466a-a928-47005402328e","type":"message","user":"U7TMPGWJ0","text":"Rust by Example は一応手を動かせるやつかもしれませんね。翻訳もされてますし。 \u003chttps://doc.rust-jp.rs/rust-by-example-ja/\u003e","ts":"1609581874.434200","attachments":[{"fallback":"Introduction - Rust By Example 日本語版","id":1,"title":"Introduction - Rust By Example 日本語版","title_link":"https://doc.rust-jp.rs/rust-by-example-ja/","text":"A description","blocks":null,"service_name":"doc.rust-jp.rs","from_url":"https://doc.rust-jp.rs/rust-by-example-ja/","original_url":"https://doc.rust-jp.rs/rust-by-example-ja/"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dyL8"}]},{"client_msg_id":"12c68da4-f165-4874-8305-cf08e09d8784","type":"message","user":"U7B4ZD49X","text":"ここで例えると全部の質問をmattnさんとかthincaさんとかtakataさんとかが捌く感じに近い","ts":"1609581570.433100","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":1,"users":["U01ATUT6PL3"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/dB"}]},{"client_msg_id":"d06844e4-7d7f-4def-8059-bb6eeda189bc","type":"message","user":"U01ATUT6PL3","text":"自称中級者です","ts":"1609581513.432300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"prix"}]},{"client_msg_id":"32127e1d-72f0-49dd-9cd5-e5a2997f59e1","type":"message","user":"U7B4ZD49X","text":"ただ中級者的な人がいないのがちょっとあれなところ。あと雑談が少ない（雑談ばかりでもあれだけど）硬派すぎることろも・・・","ts":"1609581462.432000","edited":{"user":"U7B4ZD49X","ts":"1609581995.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ahl"}]},{"client_msg_id":"f0553b50-28d3-4697-a4f4-a103cbb4e505","type":"message","user":"U7B4ZD49X","text":"詳しい話しならrust-jpのSlackがいい気がする。あっちのほうが強い人多いから","ts":"1609581432.431300","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":1,"users":["U01ATUT6PL3"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0Kt"}]},{"client_msg_id":"8daa7289-52db-4ed9-9285-bc6d4214d3eb","type":"message","user":"U8996GYBF","text":"あ、rust-jpがあるのか","ts":"1609581401.430700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"yIz"}]},{"client_msg_id":"98050975-9a1e-4477-b09b-24fc2082990b","type":"message","user":"U01ATUT6PL3","text":"かくいう私もレビューしてほしい……","ts":"1609581390.430500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"hO6"}]},{"client_msg_id":"16fc17be-9349-4b46-8f45-34e574c84ba1","type":"message","user":"U01ATUT6PL3","text":"ここや rust-jp に投げると分かる人がレビューしてくれる可能性があります","ts":"1609581381.430200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"kwrk"}]},{"client_msg_id":"40dfe5de-e970-4fec-bea3-33b019bdd0ba","type":"message","user":"U01ATUT6PL3","text":"書きましょう（食い気味）","ts":"1609581356.429700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"QWn0"}]},{"client_msg_id":"B4BBA3A3-2012-4B1D-87E1-078D2ACB6C85","type":"message","user":"U78A6ESHM","text":"自分が書いたコードが正しいか(最適か)どうか分からないので、エキスパートにレビューして欲しい。","ts":"1609581356.429600","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":2,"users":["U01ATUT6PL3","U01AQ5BFNLX"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"KAEI"}]},{"client_msg_id":"410e38aa-de63-4768-94de-da92d50a1d7e","type":"message","user":"U8996GYBF","text":"読んでて実際手を動かさないと無理だとは感じました、なんで一通り機能だけ把握して今から書きたい感じですね","ts":"1609581346.429100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"z7buJ"}]},{"client_msg_id":"e61d0d62-a851-4961-bc45-1b5870897871","type":"message","user":"U7B4ZD49X","text":"ドキュメント読めば知識からある程度補完できる言語とそうでない言語はあってRustは明らかに動かしながらハマりながらやるしか学ぶ方法はない気がする。\n概念上は理解したつもりでも動かない","ts":"1609581217.427000","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":2,"users":["U01ATUT6PL3","U01AQ5BFNLX"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"sSSg"}]},{"client_msg_id":"5DE7B962-ECB6-497F-899A-95A276F7AFC2","type":"message","user":"U78A6ESHM","text":"所有権でウキーってなっでから本番","ts":"1609581171.426200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ProBD"}]},{"client_msg_id":"db4ce343-a810-4e5d-ac81-028c452a7d28","type":"message","user":"U01ATUT6PL3","text":"「スタック上（ヒープ上でもいいんですが）に実際に積まれているか、積まれていないか」のイメージができるとすごく早いと思います","ts":"1609581004.424800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"enBfo"}]},{"client_msg_id":"36ED2C7B-B545-47BC-A718-EB3B299A4353","type":"message","user":"U01AQ5BFNLX","text":"所有権ナニモワカラナイ","ts":"1609580912.424300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"XQi"}]},{"client_msg_id":"a5f24af9-82dc-4b5b-b577-94506b9218fc","type":"message","user":"U01ATUT6PL3","text":"もしくはすごく数学的に書かれた資料があればいいな、と思っていた時期もありました","ts":"1609580910.424100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"kXkg"}]},{"client_msg_id":"8e5d8383-c042-427e-844c-eb35aa889eed","type":"message","user":"U01ATUT6PL3","text":"構文はともかく、所有権の概念は机上の空論では難しいですよね……","ts":"1609580894.423500","team":"T03C4RC8V","reactions":[{"name":"sorena","count":1,"users":["U7B4ZD49X"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"U2KA0"}]},{"client_msg_id":"9bbcb69e-6484-4722-93f7-e2fb7b0f54c6","type":"message","user":"U8996GYBF","text":"所有権の概念とかとか構文が全く分からなかったんでひとまず目を通した感じですね\n自分も比較的手を動かしたい方なんですが、言語の基礎知識だけは入れときたかったので","ts":"1609580822.423000","team":"T03C4RC8V","reactions":[{"name":"naruhodo","count":1,"users":["U01ATUT6PL3"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"slm"}]},{"client_msg_id":"a5344a8a-ac6c-433a-92a9-6e710392bdf8","type":"message","user":"U01ATUT6PL3","text":"これは超個人的意見ですが、 Rust は書いてコンパイラにいじめられながら書いたほうが覚えやすい気がします（？？）","ts":"1609580715.422000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"h=fxS"}]},{"client_msg_id":"38199d08-12da-43f7-a374-1a463064dc61","type":"message","user":"U8996GYBF","text":"\u003chttps://doc.rust-jp.rs/book-ja/ch13-04-performance.html\u003e\nを手を動かしつつ13章まで読んだんですけど、これ以降でコード書く前に読んだ方がよさそうな章ってありますかね・・・？","ts":"1609580650.421500","edited":{"user":"U8996GYBF","ts":"1609580655.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0zh"}]},{"client_msg_id":"5e409f9e-b842-4c74-9951-76dc21f70a1e","type":"message","user":"U01ATUT6PL3","text":"あとで見返して補足するかもです……","ts":"1609566021.420900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"HCt"}]},{"client_msg_id":"dce117ad-1615-4d23-b0d3-579cbd667a83","type":"message","user":"U01ATUT6PL3","text":"enumに関してはだいたい言いたいこといってくれたかんじですかね（ちゃんと見てない）","ts":"1609566004.420600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qlxj"}]},{"client_msg_id":"fb8bdf12-a1c6-4e80-8258-c90dcc47b592","type":"message","user":"U01D44KSY9Z","text":"ojichat、完全に習作なので全体的に構文が汚い気がしてる","ts":"1609565822.420100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"gtQnb"}]},{"client_msg_id":"beef857c-ebd6-4cad-a938-9d6bbaf90332","type":"message","user":"U01AQ5BFNLX","text":"いろいろやばいｗけど勉強になった\n\u003chttps://zenn.dev/gamoutatsumi/articles/f174e1c5c7ffdbf6b048\u003e","ts":"1609564029.419500","attachments":[{"fallback":"Zenn: Rustでojichatを作ってみた","id":1,"title":"Rustでojichatを作ってみた","title_link":"https://zenn.dev/gamoutatsumi/articles/f174e1c5c7ffdbf6b048","image_url":"https://res.cloudinary.com/dlhzyuewr/image/upload/s--j9GWGX-W--/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkM2JhZGU4NWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2592%25B2%25E7%2594%259F%25E8%25BE%25B0%25E5%25B7%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Rust%25E3%2581%25A7ojichat%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/v1609308637/og/new_txlqub.png","blocks":null,"service_name":"Zenn","service_icon":"https://zenn.dev/images/icon.png","from_url":"https://zenn.dev/gamoutatsumi/articles/f174e1c5c7ffdbf6b048","original_url":"https://zenn.dev/gamoutatsumi/articles/f174e1c5c7ffdbf6b048"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"heeG"}]},{"client_msg_id":"7c5aeec7-6656-44c3-b136-29217a6b5811","type":"message","user":"U8996GYBF","text":"自分はドメインを守りながら正しく分割する自信がない","ts":"1609563540.419100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Lu63X"}]},{"client_msg_id":"e6b1e334-8b67-4862-b0e0-ff6566fcff3a","type":"message","user":"U8996GYBF","text":"あ、そうですね\nうまく分ける難易度の高さもある","ts":"1609563530.418800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"aFH="}]},{"client_msg_id":"05cb9c96-b68e-4339-905b-42c94e171ac5","type":"message","user":"U8R597E9H","text":"仮に概念的に正しそうに思えても。ということでした↑","ts":"1609563512.418400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"3BF"}]},{"client_msg_id":"9cbddb3f-0b73-49d8-b7b8-03ae1b2bec27","type":"message","user":"U8996GYBF","text":"実装の共有を目的に継承してたら意味不明な共有が発生してドメイン破壊されません？","ts":"1609563479.417900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Wtb="}]},{"client_msg_id":"cba57047-2d5b-47ec-9003-11daa5927bd1","type":"message","user":"U8R597E9H","text":"ある型に紐付いた「一部の実装だけ」を共有するのは難しいね。ってことだと思うんですよね。継承が難しいの。","ts":"1609563428.417400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qeC"}]},{"client_msg_id":"f2002ce2-760e-462d-8ece-f83e1cdcd851","type":"message","user":"U8R597E9H","text":"便利な絵文字達...","ts":"1609563109.416900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"v0F"}]},{"client_msg_id":"4aa68e4e-51bd-413f-acc2-17f49107eb93","type":"message","user":"U03C4RC8X","text":":keishou-chance:","ts":"1609563099.416700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"mA2kX"}]},{"client_msg_id":"12c839e8-45f1-4b83-88a9-cb926df86247","type":"message","user":"U78A6ESHM","text":"一時継承 == 悪だと思ってたけど、Django やるようになって多重継承サイコーと思うようになった。","ts":"1609563073.416400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"EXwMq"}]},{"client_msg_id":"1e60652e-6000-40fb-9cc0-2f8bcaac11ad","type":"message","user":"U9S4G0LJW","text":"最近のJavaにあるデフォルト実装付きinterfaceなんかまんまtraitだと思ってる","ts":"1609562747.415600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"NGZJ"}]},{"client_msg_id":"0f716bea-8876-41c2-bb93-24b7ebe64846","type":"message","user":"U8R597E9H","text":"こんなこといってるとキレられそうなのでこの辺にしておこう。。。","ts":"1609562699.415200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1NAR"}]},{"client_msg_id":"ef89637a-162a-4775-9a76-623aecf31707","type":"message","user":"U8996GYBF","text":"あー、なるほど","ts":"1609562691.414900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"BE6"}]},{"client_msg_id":"4467d3b5-7589-4925-9aef-f5ac70919c6a","type":"message","user":"U8R597E9H","text":"`class Data implements std::fmt::Display` みたいな感じですね。\n`class Data` -\u0026gt; `pub struct Data...`\n`implements std::fmt::Display` -\u0026gt; `impl std::fmt::Display for Data ...`","ts":"1609562670.414500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"4Y=u"}]},{"client_msg_id":"e46703ea-b723-42ef-b6a9-aa24f2ac92d9","type":"message","user":"UL6CFN8NR","text":"自分で trait を新たに定義することもよくありますが、「自分で定義した struct に既存の trait を実装する」こともよくあります。\nたとえば自分で定義した `Data`  型に `std::fmt::Display` トレイトを実装すれば、`Data` 型を持つ `data` に対して `println!(\"{}\", data)` みたいに書けるようになります。","ts":"1609562505.413200","edited":{"user":"UL6CFN8NR","ts":"1609562518.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"X2o"}]},{"client_msg_id":"5151d00e-cf1e-48fc-a539-9c04ad77dd42","type":"message","user":"U8996GYBF","text":"なるほど、ぱっと見意味不明に見えたけどインターフェイスなら便利そう","ts":"1609562260.410200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"YMsYA"}]},{"client_msg_id":"ab0d3a01-b4af-4593-8bab-7907c70ba151","type":"message","user":"UL6CFN8NR","text":"trait は Java でいう interface みたいなものだと理解してます","ts":"1609562237.409800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"P3z"}]},{"client_msg_id":"957d442f-7f6d-447c-8254-6b6f76f4f1f3","type":"message","user":"UL6CFN8NR","text":"1段落まるっと使って継承をディスってる","ts":"1609562100.408300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"v0ps"}]},{"client_msg_id":"bc5301fa-3a00-4531-a24b-5259118c62d6","type":"message","user":"U8996GYBF","text":"まだtraitがどんなものかちゃんと読み込めてないんですけど、これって自分でガンガン定義して使っていくものですか？","ts":"1609562082.407800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"5cj"}]},{"client_msg_id":"4df19634-8689-45e4-b2ce-f043780d0c77","type":"message","user":"UL6CFN8NR","text":"よく思い出してみたら、公式リファレンスに「Rust と OOP の関係」について述べた箇所があるんですよね。\n\u003chttps://doc.rust-jp.rs/book-ja/ch17-01-what-is-oo.html\u003e\n\u0026gt;  継承は、近年、多くのプログラミング言語において、プログラムの設計解決策としては軽んじられています。 というのも、しばしば必要以上にコードを共有してしまう危険性があるからです。サブクラスは、 必ずしも親クラスの特徴を全て共有するべきではないのに、継承ではそうなってしまうのです。 これにより、プログラムの設計の柔軟性を失わせることもあります。また、道理に合わなかったり、メソッドがサブクラスには適用されないために、 エラーを発生させるようなサブクラスのメソッドの呼び出しを引き起こす可能性が出てくるのです。 さらに、サブクラスに1つのクラスからだけ継承させる言語もあり、さらにプログラムの設計の柔軟性が制限されます。","ts":"1609562082.407700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"4gi"}]},{"client_msg_id":"26678d0c-e6c5-4f95-abe2-91979554dc96","type":"message","user":"U8996GYBF","text":"Railsのconcern辛い","ts":"1609562015.406700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"gPb"}]},{"client_msg_id":"e9df73fc-074e-488b-aa0f-f75b668489ac","type":"message","user":"U8996GYBF","text":"継承二度と使いたくない","ts":"1609562007.406500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ZHm"}]},{"client_msg_id":"662d6997-a9ee-4b58-b30f-b58c1c5b4292","type":"message","user":"U8R597E9H","text":"_継承はぼくも嫌いです。。。_","ts":"1609561987.406200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"c3kH"}]},{"client_msg_id":"ebe8bcb1-fd01-45a9-91f5-b3feb2fb15f4","type":"message","user":"U8996GYBF","text":"さっきのコード絶対忘れるからgistにはっておいた","ts":"1609561947.405900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"g7D"}]},{"client_msg_id":"85238b8c-4dc7-4006-ad2d-25dcce0461cd","type":"message","user":"UL6CFN8NR","text":"私も Rust の struct は継承が無い以外はほとんど OOP じゃないかと思ってます","ts":"1609561923.405600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rgb"}]},{"client_msg_id":"36214568-3223-494a-b1c4-3adf7ee229b1","type":"message","user":"U8996GYBF","text":"immutableであればいいんですけど、なんかクラスは取り回しにくい印象が強くて","ts":"1609561919.405400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"yFnR"}]},{"client_msg_id":"b0faa1b1-4ffa-4d45-a71d-ea011b81677e","type":"message","user":"U9S4G0LJW","text":"実際OOPそこまで悪くないと思ってる、複雑に継承したりするから滅茶苦茶になるだけで","ts":"1609561880.404700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"fiQd"}]},{"client_msg_id":"2082b8c9-2891-4908-a6ff-05b99b663786","type":"message","user":"U8996GYBF","text":"implって普通にガンガンやるものなんでしょうか","ts":"1609561861.404200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"aZgrE"}]},{"client_msg_id":"5402e4a6-fc4c-4d5e-9ff4-e281c9a9a890","type":"message","user":"U8996GYBF","text":"structにimplは確かにOOPっぽい","ts":"1609561838.403500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rQAK"}]},{"client_msg_id":"90131064-dce1-4be6-86db-25a332b4e27a","type":"message","user":"U9S4G0LJW","text":"関数型言語の経験が先にあったので漸進的型付けめっちゃ気持ち悪かったけど、誰かが型は最も成功したテストの手法って言ってるの聞いて納得してから気にならなくなったな","ts":"1609561769.403200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"C=htI"}]},{"client_msg_id":"7d002ce0-0527-41f2-8dcc-e6ca2fb8e2b0","type":"message","user":"U8R597E9H","text":"Rust で struct に impl して、それを取り回しているのはほぼ OOP だと思っています。そういうのやらないならあれかもですが。","ts":"1609561765.403000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"3m0"}]},{"client_msg_id":"fa146a8b-60a4-45d5-a471-47311693bf69","type":"message","user":"U8996GYBF","text":"自分もOOP辛いからインスタンスの取り回しできるだけしないですね、objectのclone的なのはやりますが・・・（スプレッド演算子）","ts":"1609561705.401500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/0dOb"}]},{"client_msg_id":"50ed03b8-ba4f-4b0b-88e6-bab1de7983fb","type":"message","user":"U8R597E9H","text":"OOP で、作ったインスタンスを後から書き換える。みたいなことあるじゃないですか。でもそういうのやり始めるとどこで何がどう変化したとかわからなくなる。普段はこういうのなるべくやらないように気をつけてますが、やろうと思えばゴリ押せてしまう。Rust だとライフタイムで死んだりするので。（もしくは clone しまくるか。）","ts":"1609561643.400700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"vkzd"}]},{"client_msg_id":"c9c4511f-ca05-497a-823a-f669c9bc2a3b","type":"message","user":"U8996GYBF","text":"ただclassとかは書かずに、全部オブジェクトで取り回してますね\n自分はfzf-previewで8000行書いたけどclassに状態持たせるみたいなのやってないです","ts":"1609561592.399600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"iIyP3"}]},{"client_msg_id":"0d7c3271-c657-43e7-8397-da3e36867c0f","type":"message","user":"U8996GYBF","text":"漸進的型付けなんで、気持ち悪い部分多そう","ts":"1609561556.398600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"UfjeU"}]},{"client_msg_id":"2d45f1ba-2ae8-4bd2-b0d5-d87077e111d1","type":"message","user":"UL6CFN8NR","text":"私は逆に関数型言語から入って、JS はほぼ触ってないので、 TS の方は割と覚えることが多そうですね…","ts":"1609561538.398000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"pNC"}]},{"client_msg_id":"a86de36e-94d1-4295-a853-52ec8daac539","type":"message","user":"U9S4G0LJW","text":"雰囲気で書いても動かないという差はありそう","ts":"1609561521.397500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rhWIl"}]},{"client_msg_id":"bec7d4f0-498d-431f-89b0-694d01516fe3","type":"message","user":"U8996GYBF","text":"JSのバックグラウンドの有無の差だろうけど、Rustは覚える言語機能が多そう・・・","ts":"1609561479.396600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"a+j"}]},{"client_msg_id":"42f3001d-4a3f-47f5-9096-d809adc2b361","type":"message","user":"U8996GYBF","text":"自分はfzf-preview書いててTSで割と設計磨かれた感ある","ts":"1609561403.396000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"tZPe"}]},{"client_msg_id":"99c45780-1250-4e2f-bf9e-858acec77ebb","type":"message","user":"UL6CFN8NR","text":"Rust のパターンマッチの文法はそれなりにややこしいですが、 `let` 式の左辺などと文法が概ね共通しているので、一度把握してしまえば融通がきいてとても便利です。（といっても私もまだ全然使いこなせてない）","ts":"1609561374.395500","edited":{"user":"UL6CFN8NR","ts":"1609561394.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"d2f0"}]},{"client_msg_id":"5cf72f6c-9c75-4166-9023-0f52dc9673b5","type":"message","user":"U8996GYBF","text":"設計って意味だとTSでもいいかなって気がしてます\nなんというかより強力なメモリや型安全の使い方を今学んでる感がある","ts":"1609561370.395400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xncqu"}]},{"client_msg_id":"ee391bc0-13ef-4557-8816-6ea59e9929c5","type":"message","user":"U8R597E9H","text":"かといってゼロから書き始める勇気はない。","ts":"1609561332.394300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"drCUZ"}]},{"client_msg_id":"28e45f9f-04d3-4452-a1ab-c417eed45c73","type":"message","user":"U8R597E9H","text":"Rust は以前から「これでスラスラ書けるようになると設計とかが磨かれるだろうな」と思っていたんですが、ゼロから書かないとその効能も得られなさそうだったので羨ましいな。","ts":"1609561319.394000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"p6nl"}]},{"client_msg_id":"b4ee2f9b-0a1a-4212-a999-f9ce2b98c217","type":"message","user":"U8996GYBF","text":"`derive` あたり何なのか分かってないとかあるので、この辺も含めて調べてみます\nありがとうございます","ts":"1609561203.392300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"2o/nk"}]},{"client_msg_id":"677a09ee-b408-4739-9128-f36d7eb29874","type":"message","user":"UL6CFN8NR","text":"私が上で書いたような Data 型の場合、\n```    match data1 {\n        Data::Data1(data1) =\u0026gt; println!(\"{}\", data1.value1),\n        Data::Data2(data2) =\u0026gt; println!(\"{}\", data2.value2),\n    };```\nこんな感じの書き方になります。`data1` には Data1 型、 `data2` には Data2 型が格納されます。\nパターンマッチの文法については、公式リファレンスを読むのが結局一番早いのではないかな…と思いますね。\n\u003chttps://doc.rust-jp.rs/book-ja/ch18-00-patterns.html\u003e","ts":"1609560917.390200","edited":{"user":"UL6CFN8NR","ts":"1609560980.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"nu+"}]},{"client_msg_id":"eab802c4-f424-4e96-ac80-24e257d56723","type":"message","user":"U8996GYBF","text":"あ、いや手元でやってみてたんですがエラー回避できなくて・・・\nすみません・・・","ts":"1609560894.390000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"bvPm+"}]},{"client_msg_id":"f3dc04a6-2bbb-45c0-886f-fc8d2f09d960","type":"message","user":"UAZ33BKV2","text":"できるかよりかは、やってみたほうが早い、か?\nまあコンパイルエラーしなければいけそうだしな(暴言)、いやまあrustならそうかもだけどw","ts":"1609560843.388900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"G0B"}]},{"client_msg_id":"6bda2dfa-a196-459f-afbb-cdab3aeae244","type":"message","user":"UL6CFN8NR","text":"できます。\n\u003chttps://play.rust-lang.org/?version=stable\u0026amp;mode=debug\u0026amp;edition=2018\u0026amp;gist=3b79cedd7f68786e334edd66b8a634dd\u003e","ts":"1609560801.387700","attachments":[{"fallback":"Rust Playground","id":1,"title":"Rust Playground","title_link":"https://play.rust-lang.org/?version=stable\u0026mode=debug\u0026edition=2018\u0026gist=3b79cedd7f68786e334edd66b8a634dd","text":"A browser interface to the Rust compiler to experiment with the language","blocks":null,"service_name":"play.rust-lang.org","from_url":"https://play.rust-lang.org/?version=stable\u0026mode=debug\u0026edition=2018\u0026gist=3b79cedd7f68786e334edd66b8a634dd","original_url":"https://play.rust-lang.org/?version=stable\u0026amp;mode=debug\u0026amp;edition=2018\u0026amp;gist=3b79cedd7f68786e334edd66b8a634dd"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"7A0"}]},{"client_msg_id":"19f4e7f3-31c3-427d-b3de-fbf83aaabd56","type":"message","user":"U8996GYBF","text":"Rust、書き方がむずすぎる・・・","ts":"1609560697.387400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ab5cn"}]},{"client_msg_id":"3e1873b2-5ec9-4d38-8393-a9e20160aa0c","type":"message","user":"U8996GYBF","text":"```    let data1: Data = serde_json::from_str(r#\"{\"type\": \"Data1\", \"value1\": \"foo\"}\"#).unwrap();\n\n    match data1 {\n        Data1(data) =\u0026gt; println(\"{}\", data.value1),\n        Data2(data) =\u0026gt; println(\"{}\", data.value2),\n    };```\nこんな感じのがやりたいんですけど、これってできますか？","ts":"1609560509.387000","edited":{"user":"U8996GYBF","ts":"1609560540.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dQBm"}]},{"client_msg_id":"c0e25c50-2654-48d1-8487-0b7dcd76c078","type":"message","user":"UL6CFN8NR","text":"`cargo-feature` なんてものもあるらしい\n\u003chttps://www.reddit.com/r/rust/comments/fnj8xp/cargofeature_dont_suffer_from_adding_or_removing/\u003e","ts":"1609560377.386000","attachments":[{"fallback":"reddit: cargo-feature - Don't suffer from adding or removing feature","id":1,"title":"cargo-feature - Don't suffer from adding or removing feature","title_link":"https://www.reddit.com/r/rust/comments/fnj8xp/cargofeature_dont_suffer_from_adding_or_removing/","text":"[\u003chttps://github.com/Riey/cargo-feature\u003e](\u003chttps://github.com/Riey/cargo-feature\u003e) \u0026amp;#x200B; Just type cargo feature serde...","thumb_url":"https://www.redditstatic.com/new-icon.png","blocks":null,"service_name":"reddit","service_icon":"http://www.redditstatic.com/desktop2x/img/favicon/apple-icon-57x57.png","thumb_width":256,"thumb_height":256,"from_url":"https://www.reddit.com/r/rust/comments/fnj8xp/cargofeature_dont_suffer_from_adding_or_removing/","original_url":"https://www.reddit.com/r/rust/comments/fnj8xp/cargofeature_dont_suffer_from_adding_or_removing/"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"MQI"}]},{"client_msg_id":"6d2637ec-ced2-40cc-8e7f-0a83cfe7d764","type":"message","user":"UAZ33BKV2","text":"よくできてるなserde","ts":"1609560327.385700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qd1H"}]},{"client_msg_id":"8b8159ae-943f-4549-a977-f8d621c711cb","type":"message","user":"U01D44KSY9Z","text":"スペース区切りでよさそうだった","ts":"1609560319.385600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"E2=f"}]},{"client_msg_id":"9fb72e0c-5856-4294-86e5-6f9544d9331c","type":"message","user":"U01D44KSY9Z","text":"ただfeature複数指定のやり方が未だにわからない……","ts":"1609560285.385300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"EZMTY"}]},{"client_msg_id":"5c9aafa4-7bb3-427c-9de7-0ccecda4bd9c","type":"message","user":"U01D44KSY9Z","text":"devとかもちゃんとフラグ用意されてるんですよね","ts":"1609560257.385000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"YDf"}]},{"client_msg_id":"08e5f547-e1ed-4b6d-8722-2e4a8752ca74","type":"message","user":"UL6CFN8NR","text":"`cargo-edit` って feature も指定できるんですね（ちゃんと使い方調べたことなかった）。 :benri:","ts":"1609560238.384500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"IAY"}]},{"client_msg_id":"ab843ce2-ef77-4fa2-81ed-529949f00b6f","type":"message","user":"U01D44KSY9Z","text":"オプションの構文少し違うかも知れない","ts":"1609560230.384400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"5sKW"}]},{"client_msg_id":"e4d05f7b-0951-46d0-84b3-884051e9099c","type":"message","user":"U01D44KSY9Z","text":"ちなみに僕がTOML書くときは `cargo-edit` っていうクレート使ってます\n`cargo add serde --features=derive` ってコマンドでよしなにTOMLに追記してくれる","ts":"1609560201.383500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"VspdG"}]},{"client_msg_id":"4b152845-7d3e-42ff-8c23-0a75b0f52fa0","type":"message","user":"U8996GYBF","text":"あ、今それやってみてましたー","ts":"1609560160.382800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"OY7"}]},{"client_msg_id":"6c6ec1f4-2aa2-40d2-a05e-401adf76aeaf","type":"message","user":"U8R597E9H","text":"enum のどれかにマッチさせてパースする場合は、タグを指定するとよしなにパースしてくれるということか。便利。","ts":"1609560128.381600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Iym"}]},{"client_msg_id":"b2baf036-de0c-4521-bd9a-75135039d515","type":"message","user":"UL6CFN8NR","text":"```serde = { version = \"1.0\", features = [\"derive\"] }```\nみたいな感じで、 Cargo.toml の中に書いてもらえますか？（バージョンは適当に新しめのものを）","ts":"1609560048.380400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"lh8"}]},{"client_msg_id":"39224987-9f80-4468-b4b8-5b97b681a8df","type":"message","user":"U8996GYBF","text":"Rustむずい","ts":"1609560023.379800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"IFr"}]},{"client_msg_id":"3682a53b-e79e-441a-b788-b3d6cea09f5e","type":"message","user":"U8996GYBF","text":"知らないので調べてみます！","ts":"1609560020.379600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0KU"}]},{"client_msg_id":"6b898c8c-8e49-4ed4-aa8e-8c21fbe858d9","type":"message","user":"UL6CFN8NR","text":"あ、 derive feature が必要かも","ts":"1609560000.379200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"kJR"}]},{"client_msg_id":"e7138231-2371-4b57-9d7b-c9704fd039bd","type":"message","user":"U8996GYBF","text":"```cannot find derive macro `Serialize` in this scope```\nうーん","ts":"1609559986.378900","edited":{"user":"U8996GYBF","ts":"1609559998.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"h0A"}]},{"client_msg_id":"59acc188-c334-4d81-a4c9-0a465aeec3ba","type":"message","user":"U8996GYBF","text":"cargo.tomlにserde入れてるのに\n```unused imports: `Deserialize`, `Serialize````\nになる・・・","ts":"1609559969.378700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"TYEOO"}]},{"client_msg_id":"179aaf00-da85-4adb-b7b5-5830c487ecfa","type":"message","user":"UL6CFN8NR","text":"列挙型を JSON で表現するときに色々やり方があると思うんですが、今回はその中の \"Internally tagged\" に該当します。「オブジェクトの中にタグとなるキーと値のペアが含まれる形式」ですね。\nそうすると「どの enum を使って格納してほしいか」を表すJSONフィールドを指定する必要があり、それを指定するのが `tag=\"type\"` の記述ですね。","ts":"1609559953.378400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=zU4"}]},{"client_msg_id":"0e71047d-d5c2-4dad-b367-dd4a884733d1","type":"message","user":"UL6CFN8NR","text":"`tag=\"type\"` の意味は\n\u003chttps://igaguri.hatenablog.com/entry/2018/12/28/120500\u003e\nという記事に書いてありました。","ts":"1609559844.376700","attachments":[{"fallback":"igagurimk2の日記: serdeの機能で様々な形態のJSONを列挙型として扱う - igagurimk2の日記","id":1,"title":"serdeの機能で様々な形態のJSONを列挙型として扱う - igagurimk2の日記","title_link":"https://igaguri.hatenablog.com/entry/2018/12/28/120500","text":"JSONはREST API呼び出し、データ保存、多言語との連携などに数多く使用されている。 一方で、JSONは言語でサポートされる表現が整数と浮動小数点数・文字列・配列・オブジェクト・そしてnull程度しかなく、それ以上に複雑な表現はこれらの基本機能を組み合わせて表現することになる。 機能の組み合わせ方には複数の方法があり、特に複数の型の構造体やクラスが混在する時の表現形式は複数ある。 Rustでは、表現したいデータ型が既知であれば、複数の型のうちどれかであることを表現するために列挙型が使える。 そして、Rustのシリアライザ・デシリアライザのライブラリであるserdeを用いて、列挙型とJSO…","image_url":"https://ogimage.blog.st-hatena.com/8599973812284836991/10257846132690966624/1566630528","blocks":null,"ts":1545966300,"service_name":"igagurimk2の日記","service_icon":"https://igaguri.hatenablog.com/icon/touch","from_url":"https://igaguri.hatenablog.com/entry/2018/12/28/120500","original_url":"https://igaguri.hatenablog.com/entry/2018/12/28/120500"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ymQD3"}]},{"client_msg_id":"760a0bdd-4fd0-4823-99d6-e0f2fa6d94f9","type":"message","user":"UAZ33BKV2","text":"```type```\nに対応しているマーカー?","ts":"1609559823.376200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"suyGG"}]},{"client_msg_id":"f092778e-5012-4ef1-83f6-ca018db0e358","type":"message","user":"UL6CFN8NR","text":"もうちょっと ycino さんのリクエストに寄せてみた\n\u003chttps://play.rust-lang.org/?version=stable\u0026amp;mode=debug\u0026amp;edition=2018\u0026amp;gist=f1228b5496e5c4e0cc61778cd42cd0da\u003e","ts":"1609559821.376000","attachments":[{"fallback":"Rust Playground","id":1,"title":"Rust Playground","title_link":"https://play.rust-lang.org/?version=stable\u0026mode=debug\u0026edition=2018\u0026gist=f1228b5496e5c4e0cc61778cd42cd0da","text":"A browser interface to the Rust compiler to experiment with the language","blocks":null,"service_name":"play.rust-lang.org","from_url":"https://play.rust-lang.org/?version=stable\u0026mode=debug\u0026edition=2018\u0026gist=f1228b5496e5c4e0cc61778cd42cd0da","original_url":"https://play.rust-lang.org/?version=stable\u0026amp;mode=debug\u0026amp;edition=2018\u0026amp;gist=f1228b5496e5c4e0cc61778cd42cd0da"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"PWQX"}]},{"client_msg_id":"17ee9a4f-bd3e-4057-ba14-f30efc819889","type":"message","user":"U8996GYBF","text":"ありがとうございます\n`tag=\"type\"` ってどういう意味になるんでしょう","ts":"1609559781.375300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Vqg"}]},{"client_msg_id":"5e030cdd-40cd-4dc8-b61c-1769dbf61c1b","type":"message","user":"UL6CFN8NR","text":"\u003chttps://play.rust-lang.org/?version=stable\u0026amp;mode=debug\u0026amp;edition=2018\u0026amp;gist=60949d6ec58d2e4d725b0d39770b5de6\u003e","ts":"1609559633.374700","attachments":[{"fallback":"Rust Playground","id":1,"title":"Rust Playground","title_link":"https://play.rust-lang.org/?version=stable\u0026mode=debug\u0026edition=2018\u0026gist=60949d6ec58d2e4d725b0d39770b5de6","text":"A browser interface to the Rust compiler to experiment with the language","blocks":null,"service_name":"play.rust-lang.org","from_url":"https://play.rust-lang.org/?version=stable\u0026mode=debug\u0026edition=2018\u0026gist=60949d6ec58d2e4d725b0d39770b5de6","original_url":"https://play.rust-lang.org/?version=stable\u0026amp;mode=debug\u0026amp;edition=2018\u0026amp;gist=60949d6ec58d2e4d725b0d39770b5de6"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Axi3q"}]},{"client_msg_id":"db09373c-1d75-4d29-b0ac-cb6e1bdbd1f2","type":"message","user":"UL6CFN8NR","text":"```use serde::{Serialize, Deserialize};\n\n#[derive(Debug, Serialize, Deserialize)]\n#[serde(tag=\"type\")]\nenum Data {\n\n    Data1 {value: String},\n    Data2 {value: String},\n}\n\nfn main() {\n    let data: Data = serde_json::from_str(r#\"{\"type\": \"Data1\", \"value\": \"hoge\"}\"#).unwrap();\n    println!(\"{:?}\", data);\n}```\nこれでいけました","ts":"1609559618.374500","team":"T03C4RC8V","reactions":[{"name":"naruho","count":1,"users":["U9S4G0LJW"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xLkc"}]},{"client_msg_id":"f7c9e6fe-ecd2-4d7a-9aec-ef8594992f7b","type":"message","user":"U8996GYBF","text":"いけるならこれ使えばよさそうな気がします、ありがとうございます！","ts":"1609559439.373900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"BeA+"}]},{"client_msg_id":"ec8cdfe2-b5ac-4b59-a80b-72f35fb956dd","type":"message","user":"U8996GYBF","text":"```let data: Data = serde_json::from_str(json_str).unwrap();```\nしておいて、そのあとでパターンマッチで分岐できるのかな","ts":"1609559404.373500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"aweF"}]},{"client_msg_id":"e894da47-237d-47ad-b120-014cb3d183b7","type":"message","user":"UL6CFN8NR","text":"できるはず","ts":"1609559404.373400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"QIE"}]},{"client_msg_id":"993bdd4c-43dd-480f-b279-3734c156e201","type":"message","user":"U8996GYBF","text":"これ、JSONの型自体がData1 or Data2で対応する構造体が確定しない場合は適切な方に入れてくれるとかあるんですかね・・・","ts":"1609559327.372600","edited":{"user":"U8996GYBF","ts":"1609559334.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"+Tlw2"}]},{"client_msg_id":"884741fb-1709-464c-bad0-74a370f5b9d5","type":"message","user":"U9S4G0LJW","text":"リフレクションでやってなさそうなのがいかにもRustっぽい","ts":"1609559303.372000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"SeGVb"}]},{"client_msg_id":"961e1b3c-b249-4329-8376-1cebc5ff2c16","type":"message","user":"U9S4G0LJW","text":"miteru \u003chttps://qiita.com/garkimasera/items/0442ee896403c6b78fb2\u003e","ts":"1609559260.371100","attachments":[{"fallback":"Qiita: RustのSerdeの簡単な紹介 - Qiita","id":1,"title":"RustのSerdeの簡単な紹介 - Qiita","title_link":"https://qiita.com/garkimasera/items/0442ee896403c6b78fb2","text":"serdeはRustのデータ構造をシリアライズ/デシリアライズするためのフレームワークです。これで何ができるか大雑把に紹介すると、Rustの構造体等のデータ構造を、自動的にJSONやTOML、YAML等のフォーマットと相互変換ができる...","image_url":"https://qiita-user-contents.imgix.net/https%3A%2F%2Fcdn.qiita.com%2Fassets%2Fpublic%2Farticle-ogp-background-1150d8b18a7c15795b701a55ae908f94.png?ixlib=rb-1.2.2\u0026w=1200\u0026mark=https%3A%2F%2Fqiita-user-contents.imgix.net%2F~text%3Fixlib%3Drb-1.2.2%26w%3D840%26h%3D380%26txt%3DRust%25E3%2581%25AESerde%25E3%2581%25AE%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E7%25B4%25B9%25E4%25BB%258B%26txt-color%3D%2523333%26txt-font%3DHiragino%2520Sans%2520W6%26txt-size%3D54%26txt-clip%3Dellipsis%26txt-align%3Dcenter%252Cmiddle%26s%3D2e2cf56637a1751110010b49942ec7b8\u0026mark-align=center%2Cmiddle\u0026blend=https%3A%2F%2Fqiita-user-contents.imgix.net%2F~text%3Fixlib%3Drb-1.2.2%26w%3D840%26h%3D500%26txt%3D%2540garkimasera%26txt-color%3D%2523333%26txt-font%3DHiragino%2520Sans%2520W6%26txt-size%3D45%26txt-align%3Dright%252Cbottom%26s%3De0ee8679f89a8e65206bc128e8637a39\u0026blend-align=center%2Cmiddle\u0026blend-mode=normal\u0026s=148fa6c07299dc5ecd2142f74f51ce8f","blocks":null,"service_name":"Qiita","service_icon":"https://cdn.qiita.com/assets/favicons/public/apple-touch-icon-ec5ba42a24ae923f16825592efdc356f.png","from_url":"https://qiita.com/garkimasera/items/0442ee896403c6b78fb2","original_url":"https://qiita.com/garkimasera/items/0442ee896403c6b78fb2"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"5r8"}]},{"client_msg_id":"ca4c801a-cd65-45f7-a325-734dd20af547","type":"message","user":"U8996GYBF","text":"```struct Data1 {\n    type: String::from(\"data1\"),\n    value1: \"v1\",\n}\n\nstruct Data2 {\n    type: String::from(\"data2\"),\n    value2: \"v2\",\n}\n\nenum Data {\n    Data1\n    Data2\n}```\nで\n```{\n  \"type\": \"data1\",\n  \"value\": \"data1_value\"\n}```\nを受け取ったときに\n```let data: Data = parsed_json // Data1```\nになってほしいみたいな","ts":"1609559222.370900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rIo"}]},{"client_msg_id":"53fe36ea-39b5-4bbe-b96f-965662cdff99","type":"message","user":"UAZ33BKV2","text":"それはライブラリが陰蔽してればよくて、通常プログラム組む側が気にしないのでは...","ts":"1609559114.369700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"u4Fc"}]},{"client_msg_id":"ff076b09-080c-43df-855a-9e8e213b7585","type":"message","user":"U8996GYBF","text":"ちょっと書いてみます","ts":"1609559101.369400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"NlY6"}]},{"client_msg_id":"6e254af9-de7f-4af3-974c-30667e19cd93","type":"message","user":"UL6CFN8NR","text":"どんな感じの JSON をどんな感じの struct/enum にぶち込みたい、みたいなのって具体的にありますか？","ts":"1609559086.368800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"I5+"}]},{"client_msg_id":"0dbebe03-7aac-4d5e-8fc3-0717048e0589","type":"message","user":"U8996GYBF","text":"`json.name == \"data1\"` のときにData1に型を特定するみたいな処理が必要そう","ts":"1609559077.368600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"gRKLc"}]},{"client_msg_id":"e3641849-930a-4a5d-9e44-539920ed5992","type":"message","user":"U8996GYBF","text":"JSONをparseして最終的に（パターンマッチで？）型を判定するためにはJSONから取得したstring（上でいうData1と2のname）を使うことになりそうな気がしてるんですが、そこっていい感じに書けるんでしょうか","ts":"1609559033.367800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Rzfz"}]},{"client_msg_id":"b0e6bc2a-59cc-4721-8cb2-afe47361c8a4","type":"message","user":"UL6CFN8NR","text":"JSON をパースして自身の定義した struct/enum 型にするなら、 serde_json を使うのが楽だと思います。","ts":"1609558922.366500","edited":{"user":"UL6CFN8NR","ts":"1609558999.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"IWOny"}]},{"client_msg_id":"5a336d13-38a6-43a6-ab4d-d911d3863645","type":"message","user":"U8996GYBF","text":"TSはこの辺もasがあるから楽だったんだろうな・・・","ts":"1609558670.365500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ck+9"}]},{"client_msg_id":"bfb96028-4080-4d54-a540-ab6644b86533","type":"message","user":"U8996GYBF","text":"TSとRust混ざってる感じで書くとこういう感じのがしたいです（書き直し）\n```struct Data1 {\n    name: String::from(\"data1\"),\n    value1: \"v1\",\n}\n\nstruct Data2 {\n    name: String::from(\"data2\"),\n    value2: \"v2\",\n}\n\nenum Data {\n    Data1\n    Data2\n}\n\nlet data: Data = parsed_json\n\nif data.name === String::from(\"data1\") {\n    println!(\"{}\", data.value1) // v1\n} else if data.name === String::from(\"data2\") {\n    println!(\"{}\", data.value2) // v2\n}```","ts":"1609558440.365000","edited":{"user":"U8996GYBF","ts":"1609558583.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"HhV86"}]},{"client_msg_id":"74069af1-4200-444f-98d4-5a86c9e827ae","type":"message","user":"U8R597E9H","text":"であれば、まずは json から望みの型を得る方法からになるのかな","ts":"1609558302.362500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"VhiK5"}]},{"client_msg_id":"880ae67b-cd7e-428d-a520-f44fe47ba4eb","type":"message","user":"U8996GYBF","text":"fzfと連携したCLI作ろうとしているので、そこでJSONとかをparseして構造体にしてからタイプガード（パターンマッチ）したい","ts":"1609558218.361600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"p/jvG"}]},{"client_msg_id":"222b8646-06dd-4709-84ea-51eb028d2eef","type":"message","user":"U8996GYBF","text":"あ、Rustでも似たような事しようと思ってます","ts":"1609558166.360700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ziT"}]},{"client_msg_id":"fe4bdb48-9374-4311-a3b4-f3a4c01582f4","type":"message","user":"U8R597E9H","text":"あ、すいません。いま Rust で作ろうとしてる方の話でした。","ts":"1609558154.360400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Ncuf"}]},{"client_msg_id":"22ac67c3-e7f3-487b-aefe-5ea1569844ca","type":"message","user":"U8996GYBF","text":"具体的にはfzfから渡されてきた値を受け取るcallbackがあって、そこでタイプガードしてます","ts":"1609558126.359500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"43Jt"}]},{"client_msg_id":"fda7fe91-2825-4923-81c9-3d7263d741ed","type":"message","user":"U8996GYBF","text":"\u003chttps://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/fzf/process/consumer/git-action.ts#L10-L18\u003e\n使ってるのはこんな感じ","ts":"1609558087.358200","attachments":[{"fallback":"GitHub: yuki-ycino/fzf-preview.vim","id":1,"title":"yuki-ycino/fzf-preview.vim","title_link":"https://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/fzf/process/consumer/git-action.ts#L10-L18","text":"The plugin that powerfully integrates fzf and (Neo)vim. It is also possible to integrate with coc.nvim. - yuki-ycino/fzf-preview.vim","thumb_url":"https://avatars1.githubusercontent.com/u/5423775?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/fzf/process/consumer/git-action.ts#L10-L18","original_url":"https://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/fzf/process/consumer/git-action.ts#L10-L18"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"03uJ"}]},{"client_msg_id":"fca472f0-3a48-4e64-bf44-2d5f98198465","type":"message","user":"U8996GYBF","text":"入力から動的ですね","ts":"1609558057.358000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Oxw"}]},{"client_msg_id":"09a9ecb2-5f41-498e-ae95-93df3dc42884","type":"message","user":"U8996GYBF","text":"話ちょっと違うんですけど、Rustちょっと書いてて構文覚えにくい感じがする","ts":"1609558046.357800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"TL6M"}]},{"client_msg_id":"6e107df9-68cf-4b89-95a8-c24c8742f7d6","type":"message","user":"U8R597E9H","text":"この、なんちゃらコマンドは「ユーザ入力の json などから動的に解決される」のか、「プログラムのどこかでリテラルとして書かれる」のかどっちなんでしょうか","ts":"1609558023.357300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"p+g"}]},{"client_msg_id":"58c5a989-8463-40c2-9ae8-50bb454f86d4","type":"message","user":"U8996GYBF","text":"TS、漸進的型付けなんだけど推論とかが意味不明に強くてちゃんとした静的型付けに近い感覚で書けてるような気がする（なおちゃんとした漸進的型付け言語はあまり触ったことがない）","ts":"1609557902.354600","edited":{"user":"U8996GYBF","ts":"1609557915.000000"},"team":"T03C4RC8V","reactions":[{"name":"wakaru","count":1,"users":["U9S4G0LJW"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"sQL"}]},{"client_msg_id":"3f5fa064-13b3-44d5-a4c7-f319ed7aa138","type":"message","user":"U01D44KSY9Z","text":"確かに厳密な意味での（静的）型ではないのか","ts":"1609557858.353700","edited":{"user":"U01D44KSY9Z","ts":"1609557873.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ApK"}]},{"client_msg_id":"f6a3e764-6567-4409-8ce3-9fc79ac758f9","type":"message","user":"U8996GYBF","text":"あー、漸進的型付けとの違いか","ts":"1609557806.352300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"zAT"}]},{"client_msg_id":"9da3f853-78f1-4402-865c-81fb289249c6","type":"message","user":"U9S4G0LJW","text":"TSというか漸進的型付けと他の言語は比較してはいけないと思う","ts":"1609557787.351600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/=S24"}]},{"client_msg_id":"1e019091-db8d-4b86-8b84-23db4c47acfe","type":"message","user":"U8996GYBF","text":"\u003chttps://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/type/resource.ts#L11-L175\u003e\nとかなんですけど、これは下でUnion Type生成してて使う時に文字列でタイプガードしてます\nもう自分の中では直感的で使いやすいんですけど、こういうのを多分パターンマッチでやるんですよね","ts":"1609557748.350200","attachments":[{"fallback":"GitHub: yuki-ycino/fzf-preview.vim","id":1,"title":"yuki-ycino/fzf-preview.vim","title_link":"https://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/type/resource.ts#L11-L175","text":"The plugin that powerfully integrates fzf and (Neo)vim. It is also possible to integrate with coc.nvim. - yuki-ycino/fzf-preview.vim","thumb_url":"https://avatars1.githubusercontent.com/u/5423775?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/type/resource.ts#L11-L175","original_url":"https://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/type/resource.ts#L11-L175"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"H2=FJ"}]},{"client_msg_id":"8c919ef2-a24c-43ba-8aaa-00e76f752426","type":"message","user":"U01D44KSY9Z","text":"まあ静的型付け自体TSとRustしかやってないのでアレですけど","ts":"1609557722.349600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"M1m"}]},{"client_msg_id":"49d500e4-0b36-438e-a3fd-04a5be116934","type":"message","user":"U01D44KSY9Z","text":"コマンド一つ作って思い知った感がある\n型システム一つとっても言語によってこんな違いがあるのかと","ts":"1609557686.348200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1exJK"}]},{"client_msg_id":"eae58fca-148b-4535-be58-3d77a643a0da","type":"message","user":"U8R597E9H","text":"Rust やりたいこととかはなんとなくわかるんですけど、trait 多いので頻出 trait 知りたいのと、文法が難しすぎる…","ts":"1609557682.348100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"yLPWn"}]},{"client_msg_id":"8e83c5c2-0c1a-491b-996d-f8bf8b2225b5","type":"message","user":"U8996GYBF","text":"Rust書いてる人一回TS書いてみて欲しい","ts":"1609557647.346700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"LRqB"}]},{"client_msg_id":"d2aee513-cdb7-4f10-8614-42a3c7f42b0b","type":"message","user":"U9S4G0LJW","text":"パラダイム違いすぎるのわかる","ts":"1609557606.344800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"vaiJf"}]},{"client_msg_id":"16b8d17d-abfa-4b49-8d1f-9f06140ba139","type":"message","user":"UL6CFN8NR","text":"私は OCaml から Rust に入ったので、かなり書きやすくてびびりました","ts":"1609557596.344400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rIndN"}]},{"client_msg_id":"3baef6ff-afb3-4c1d-87b1-d84a0958133b","type":"message","user":"U9S4G0LJW","text":"TSのstring unionはEnumないので仕方なくやってる認識、あれはあれでよきものだが","ts":"1609557586.344100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1Dm"}]},{"client_msg_id":"b9d3121d-d6ec-45cd-abf0-a91883dd42ec","type":"message","user":"U8996GYBF","text":"悪い意味ではなくて、よさそうなんだけど常識が通じない感じ","ts":"1609557577.343800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"fVR=8"}]},{"client_msg_id":"a96d99bb-9a5d-4507-b9b8-19ad59786bf4","type":"message","user":"U8996GYBF","text":"書き味が違いすぎて驚いてる","ts":"1609557562.343100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"I+BS/"}]},{"client_msg_id":"b5cbffbc-1066-4bbd-b8b2-01087feb3573","type":"message","user":"U01D44KSY9Z","text":"TSの癖で書いてるとRustのお作法が分からなくなる","ts":"1609557544.342200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"DFv"}]},{"client_msg_id":"60579cdd-0942-4bd3-a748-e099c2c011e3","type":"message","user":"U8996GYBF","text":"TSがJSに縛られた中で型頑張ってるからパターンマッチがあるならそっちの方が本来楽なのかもって思ってきました","ts":"1609557522.341600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"tr/c"}]},{"client_msg_id":"b4a45631-2a42-43ce-9642-549e5c0edb9b","type":"message","user":"UAZ33BKV2","text":"JS/TSだと文字列でenumなアレする必要あるけど、普通逆に最初からenumあるような言語ならstring \u0026lt;-\u0026gt; symbol 的な厄介なの持せない(させないことで安全)にする気がするけど...","ts":"1609557477.340000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"FHT6"}]},{"client_msg_id":"21cb5203-83ab-4fe0-933a-fba270c70d10","type":"message","user":"U8996GYBF","text":"型の取り回しがTSと全然違って混乱がすごい","ts":"1609557473.339700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"529X"}]},{"client_msg_id":"5ecbecf2-b178-4f95-95d6-6d0ed7489206","type":"message","user":"U8R597E9H","text":"さっきの、BaseFzfCommand みたいな例なら、そもそも構造体自体を enum にするほうがそれっぽい気もする","ts":"1609557473.339600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"WIAUZ"}]},{"client_msg_id":"0de20dc5-cdf8-404e-a535-a88eb51f119b","type":"message","user":"U9S4G0LJW","text":"パターンマッチじゃなくてもhrsh7thさんが言ってるtostringとか","ts":"1609557403.336400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"fLPu"}]},{"client_msg_id":"3c159efb-da59-4f07-955f-c1c4eaea8197","type":"message","user":"UL6CFN8NR","text":"`From\u0026lt;\u0026amp;str\u0026gt;`  を impl する必要があるんじゃないかなーと思います。ちょっとあまり自信ないですが。\n上で私が示すコードだと、 `\"hoge\"` みたいなのを弾く際に Result 型で返すか実行時エラーかになってしまうので、ちょっと微妙ですね。\n私も、自分で書くなら kuu さんと同じ方針を取ると思います。\nもちろんユーザ入力等の文字列から FooBar 型に変換する需要があるなら、結局 String から FooBar を生成するようなコードは必要になりますが。","ts":"1609557403.336300","edited":{"user":"UL6CFN8NR","ts":"1609557514.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"aeci"}]},{"client_msg_id":"2e199b62-8d8d-404b-a870-2339437a3bfa","type":"message","user":"U8996GYBF","text":"あーなるほど、言語的にパターンマッチの方が強いからそっちに任せた方がいいのか","ts":"1609557377.334500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"RZo"}]},{"client_msg_id":"d3a50ff8-92a5-48d6-8f4c-662881b2daa5","type":"message","user":"U9S4G0LJW","text":"ぎりぎりまでEnumで持っていて必要な場所でパターンマッチングでstringにするほうがよさそうな気がするけどどうなんだろう","ts":"1609557351.333500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"5mI"}]},{"client_msg_id":"ce886ced-e943-4657-8a78-67278cf8296c","type":"message","user":"U8996GYBF","text":"お、それできるならいけそうかも\nただ周辺に実装入れないといけなくてコードが冗長になる・・・？","ts":"1609557300.330600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"X/Qp"}]},{"client_msg_id":"0209d14a-1568-4ba7-992b-cb394882295a","type":"message","user":"UL6CFN8NR","text":"```enum FooBar {\n    Foo,\n    Bar,\n}\n\nlet foo = FooBar::from(\"hoge\"); // error\nlet bar = FooBar::from(\"bar\"); // ok```\nならできそうですけどね。","ts":"1609557255.329000","edited":{"user":"UL6CFN8NR","ts":"1609557303.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"TJCH"}]},{"client_msg_id":"9d21698e-2e06-454d-b3b1-34959f362418","type":"message","user":"U8R597E9H","text":"from/to_string をりょうほう実装するのかなと。いや、自分も全然わかってないですが","ts":"1609557246.328500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"RZB"}]},{"client_msg_id":"65cc6746-dcb8-4161-9bfe-e376b411fbf1","type":"message","user":"U8996GYBF","text":"```enum FooBar {\n    Foo,\n    Bar,\n}\n\nlet foo: FooBar = \"hoge\" // error\nlet bar: FooBar = \"bar\"  // ok```\nみたいなのがしたいんですよねー","ts":"1609557206.326700","edited":{"user":"U8996GYBF","ts":"1609557237.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"8R0/P"}]},{"client_msg_id":"b9891fd4-4b1a-4122-a41e-ce402504b83f","type":"message","user":"UL6CFN8NR","text":"これは直和型であって、「特定の文字列だけ認める」みたいなやつでは多分ないのでちょっと違いそうですが","ts":"1609557198.326300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"RUW"}]},{"client_msg_id":"45805b32-c652-48b4-962b-c543c735b95e","type":"message","user":"U8R597E9H","text":"ねこかわいい","ts":"1609557179.325700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"TqU+2"}]},{"client_msg_id":"7714b515-7ace-4346-b39c-74be6dabeb0a","type":"message","user":"U01D44KSY9Z","text":"enumだと文字列でパラメータを渡せないのでいちいちenumの定義を引っ張って来る必要があると思ってるんですけどどうなんですかね","ts":"1609557175.325300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"=h5g"}]},{"client_msg_id":"91c00d79-0d5e-4a96-91af-9c17dcd4f31e","type":"message","user":"UL6CFN8NR","text":"annonymous sum types に関する RFC\n\u003chttps://github.com/rust-lang/rfcs/issues/294\u003e","ts":"1609557154.324200","attachments":[{"fallback":"GitHub: Anonymous sum types · Issue #294 · rust-lang/rfcs","id":1,"title":"Anonymous sum types · Issue #294 · rust-lang/rfcs","title_link":"https://github.com/rust-lang/rfcs/issues/294","text":"Issue by glaebhoerl Saturday Aug 03, 2013 at 23:58 GMT For earlier discussion, see rust-lang/rust#8277 This issue was labelled with: B-RFC in the Rust repository Rust has an anonymous form of produ...","thumb_url":"https://avatars1.githubusercontent.com/u/5430905?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/rust-lang/rfcs/issues/294","original_url":"https://github.com/rust-lang/rfcs/issues/294"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"lka"}]},{"client_msg_id":"7c4c3b5c-8fac-4fdb-85f8-ca12cec11c4f","type":"message","user":"U01AQ5BFNLX","text":"これとか？（Rust詳しくないので違ったらすいません:man-bowing: )\n\u003chttps://qiita.com/fujitayy/items/b492c533bb015dcc755b#%E7%9B%B4%E5%92%8C%E5%9E%8B%E3%81%A8%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%83%9E%E3%83%83%E3%83%81|https://qiita.com/fujitayy/items/b492c533bb015dcc755b#%E7%9B%B4%E5%92%8C%E5%9E%8B%E3%81%A8%E3%83%91[…]F%E3%83%BC%E3%83%B3%E3%83%9E%E3%83%83%E3%83%81\u003e","ts":"1609557111.323100","attachments":[{"fallback":"Qiita: Rustのいいところ - Qiita","id":1,"title":"Rustのいいところ - Qiita","title_link":"https://qiita.com/fujitayy/items/b492c533bb015dcc755b#%E7%9B%B4%E5%92%8C%E5%9E%8B%E3%81%A8%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%83%9E%E3%83%83%E3%83%81","text":"この記事はWanoグループ Advent Calendar 2017の9日目の記事です。 どうも、社内でRustイイヨーと唱えている人です。 今日は具体的にRustのどういった言語機能が便利なのかをご紹介したいと思います。 目...","image_url":"https://qiita-user-contents.imgix.net/https%3A%2F%2Fcdn.qiita.com%2Fassets%2Fpublic%2Farticle-ogp-background-1150d8b18a7c15795b701a55ae908f94.png?ixlib=rb-1.2.2\u0026w=1200\u0026mark=https%3A%2F%2Fqiita-user-contents.imgix.net%2F~text%3Fixlib%3Drb-1.2.2%26w%3D840%26h%3D380%26txt%3DRust%25E3%2581%25AE%25E3%2581%2584%25E3%2581%2584%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%26txt-color%3D%2523333%26txt-font%3DHiragino%2520Sans%2520W6%26txt-size%3D54%26txt-clip%3Dellipsis%26txt-align%3Dcenter%252Cmiddle%26s%3Daecc350d673c5b7f5b552e26700ec0f1\u0026mark-align=center%2Cmiddle\u0026blend=https%3A%2F%2Fqiita-user-contents.imgix.net%2F~text%3Fixlib%3Drb-1.2.2%26w%3D840%26h%3D500%26txt%3D%2540fujitayy%26txt-color%3D%2523333%26txt-font%3DHiragino%2520Sans%2520W6%26txt-size%3D45%26txt-align%3Dright%252Cbottom%26s%3Df24657e8ea0e280247680a65233540ba\u0026blend-align=center%2Cmiddle\u0026blend-mode=normal\u0026s=fb0c174f42a75f4c9dbd5ea8d7c270d3","blocks":null,"service_name":"Qiita","service_icon":"https://cdn.qiita.com/assets/favicons/public/apple-touch-icon-ec5ba42a24ae923f16825592efdc356f.png","from_url":"https://qiita.com/fujitayy/items/b492c533bb015dcc755b#%E7%9B%B4%E5%92%8C%E5%9E%8B%E3%81%A8%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%83%9E%E3%83%83%E3%83%81","original_url":"https://qiita.com/fujitayy/items/b492c533bb015dcc755b#%E7%9B%B4%E5%92%8C%E5%9E%8B%E3%81%A8%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%83%9E%E3%83%83%E3%83%81"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jBvf"}]},{"client_msg_id":"b518e9a4-177e-4420-8a01-1483b26c71b8","type":"message","user":"U01D44KSY9Z","text":"これ僕もやろうとして調べたんですけど見つからずに諦めました\n文字列の判定ロジックを別で書かないといけなくなりそう","ts":"1609557085.322500","edited":{"user":"U01D44KSY9Z","ts":"1609557096.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dpN"}]},{"client_msg_id":"5dd02572-dc40-45b3-bdbc-88925f9be96e","type":"message","user":"U8R597E9H","text":"enum に to string あたりを実装するのかなと考えている","ts":"1609557048.321400","team":"T03C4RC8V","reactions":[{"name":"me-too","count":1,"users":["UL6CFN8NR"]},{"name":"naruhodo","count":1,"users":["UEB0VGD7E"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"u/21W"}]},{"client_msg_id":"c240ba02-02ea-41e6-9dea-f19a9f7f3ce6","type":"message","user":"U8996GYBF","text":"こんな感じで絞り込んでて、\n```const foo: BaseFzfCommand = {\n  ...,\n  commandName: 'foo' // error\n}```\nがしたいです","ts":"1609557045.321200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"inqYU"}]},{"client_msg_id":"d61577db-a4b4-4419-ac81-fa93cdc2becb","type":"message","user":"UL6CFN8NR","text":"ロジックは enum でも書けるけど記述が面倒、みたいな感じですかね。 union 型、たしかに便利そう","ts":"1609557027.320000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ZV9"}]},{"client_msg_id":"f23ffbf6-079a-43a2-b790-c0f1084965cc","type":"message","user":"U8996GYBF","text":"\u003chttps://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/type/fzf.ts#L17-L97\u003e","ts":"1609556961.318100","attachments":[{"fallback":"GitHub: yuki-ycino/fzf-preview.vim","id":1,"title":"yuki-ycino/fzf-preview.vim","title_link":"https://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/type/fzf.ts#L17-L97","text":"The plugin that powerfully integrates fzf and (Neo)vim. It is also possible to integrate with coc.nvim. - yuki-ycino/fzf-preview.vim","thumb_url":"https://avatars1.githubusercontent.com/u/5423775?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/type/fzf.ts#L17-L97","original_url":"https://github.com/yuki-ycino/fzf-preview.vim/blob/master/src/type/fzf.ts#L17-L97"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"zeHsW"}]},{"client_msg_id":"87953f54-3e44-4316-a490-373eb7fb66ec","type":"message","user":"U8996GYBF","text":"上に書いてるとおりTSだと `type FooBar = \"foo\" | \"bar\"` なんですけど、Rustで `type Foo = \"foo\"` ができるなら実現できそうです","ts":"1609556937.317900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ZRZ0S"}]},{"client_msg_id":"79d28612-cedc-4dd3-b072-5064acb0a2b1","type":"message","user":"U9S4G0LJW","text":"string literalを渡したいけど特定の文字列以外弾きたいというやつですよね？","ts":"1609556912.317400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"kn1+K"}]},{"client_msg_id":"5823bf67-571a-4334-b1f5-3d0b66173420","type":"message","user":"UL6CFN8NR","text":"私TS全く知らないので前 ycino さんのライブコーディング見たときも疑問だったんですが、\n```enum FooBar {\n    Foo,\n    Bar,\n}```\nとはできることが違う感じですか？","ts":"1609556841.315800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"sgXG"}]},{"client_msg_id":"281f8251-2d3a-4e4f-8198-e321c18de4f4","type":"message","user":"U8996GYBF","text":"TSでVimプラグイン書いたときはstring渡すところにほぼ全てUnion Type使ってて型安全にしていたので","ts":"1609556625.314200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"fO9L"}]},{"client_msg_id":"5a0e43e3-7066-4ca5-a38d-f76a8a70f6a0","type":"message","user":"U8996GYBF","text":"ですです","ts":"1609556115.313500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dWes9"}]},{"client_msg_id":"e00c6528-cb3a-4bac-94ac-3fa5fe13f0f8","type":"message","user":"U01ATUT6PL3","text":"TS でいう type FooBar = \"foo\" | \"bar\" みたいな、ですかね","ts":"1609553520.313300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"wqyHS"}]},{"client_msg_id":"6bb6e426-6a39-49a8-9b01-33996fa90567","type":"message","user":"U01ATUT6PL3","text":"\u003c@U8996GYBF\u003e 特定の文字列だけが許される型、ということですか？","ts":"1609553496.312900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Q8KI"}]},{"client_msg_id":"fbace6a7-1649-411f-bbed-c9656b2b9dbc","type":"message","user":"U8996GYBF","text":"```enum FooBar {\n    String::from(\"foo\"),\n    String::from(\"bar\"),\n}```\nRustはこういう感じのUnion Type的なのはできなそう？","ts":"1609552727.312300","team":"T03C4RC8V","reactions":[{"name":"eyes","count":1,"users":["U01ATUT6PL3"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"MSxOR"}]},{"client_msg_id":"5ea16514-698a-4eb9-bbb7-bb981631b69d","type":"message","user":"U8996GYBF","text":"TSと違う感じで型が強そうで楽しい感じがする","ts":"1609513318.311600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"egY"}]}]
