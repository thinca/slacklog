[{"client_msg_id":"7151a31c-04c9-4dae-a2eb-20e08a5cf96e","type":"message","user":"U06BRP8VD","text":"あれ、おわりますよ…","ts":"1597917749.038200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"cuqBw"}]},{"client_msg_id":"eb53b30a-df9a-4727-8e8e-83502df78d21","type":"message","user":"UAZ33BKV2","text":"洗濯機の乾燥とすすぎみたい...","ts":"1597917452.037900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"TPy"}]},{"client_msg_id":"73c1a8d5-8fde-449b-8414-ac782fcdebd3","type":"message","user":"UNJ2DANJC","text":"ふんわり設計としっかり設計を無限にループしてる","ts":"1597917257.037400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"HfIw"}]},{"client_msg_id":"3c81f960-7d81-413c-b387-12f28d5957d0","type":"message","user":"U8CC7MDCL","text":"技術的には可能おじさん「技術的には可能です」","ts":"1597913036.035300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"l1d"}]},{"client_msg_id":"d2c1034b-20c1-4df7-8db6-34437746f821","type":"message","user":"U03C71D7H","text":"やってみないとわからないって言いたくなる (ダメ)","ts":"1597911756.034900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"dSRq"}]},{"client_msg_id":"6a8cd652-cb51-49cb-b501-be1297590660","type":"message","user":"U7B4ZD49X","text":"場所によっては相変わらず求められますけどね・・・","ts":"1597911097.033300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0bZMG"}]},{"client_msg_id":"1f3ce601-2b79-4e70-b770-312901a5c3e9","type":"message","user":"U06BRP8VD","text":"昔に比べたら、独立した設計書を書くこと少なくなったなぁ…","ts":"1597911065.032900","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":2,"users":["U7B4ZD49X","UAZ33BKV2"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"C0MY"}]},{"client_msg_id":"41d6d110-1da0-4b60-9103-2fdd806a2a19","type":"message","user":"U7B4ZD49X","text":"まともな設計書を書く","ts":"1597911015.032400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0GS/"}]},{"client_msg_id":"b45b9111-7f77-4a9d-af30-2377cc7cd88d","type":"message","user":"U06BRP8VD","text":"妥当な小さなタスクに分けること","ts":"1597910976.032100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qNjam"}]},{"client_msg_id":"9c7d0345-6f54-4ea9-9c30-14129d2136bc","type":"message","user":"U7B4ZD49X","text":"Vimの終了のさせ方","ts":"1597910727.031700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"mLFCF"}]},{"client_msg_id":"dd3262a0-0bbd-447b-ac46-cd4976dc2818","type":"message","user":"U9S4G0LJW","text":"プログラミング自体が本質的に難しい","ts":"1597910528.031500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"A4qru"}]},{"client_msg_id":"af753903-fc7e-4640-a4f6-d6c4ef0539db","type":"message","user":"U9S4G0LJW","text":"最適化、デバッグ、テスト…","ts":"1597910516.031000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"vVIi"}]},{"client_msg_id":"9d6e2afa-64e9-47df-8377-af39254899f5","type":"message","user":"UNJ2DANJC","text":"プログラミングで難しいことランキング上位\n名前付け\nキャッシュ\n見積もり\n\nあとは...","ts":"1597910449.030600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"2a8O"}]},{"client_msg_id":"69c577c8-75c7-4b10-a425-3fb275eeecc6","type":"message","user":"U03C71D7H","text":"私もそうだと思っていたので、ナニモワカランってなってる","ts":"1597907978.029100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"FYul3"}]},{"client_msg_id":"08a6ba7a-4747-4206-81d5-b2fe7f713855","type":"message","user":"UDDCM376D","text":"奥が深かった","ts":"1597906676.029000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Yuo"}]},{"client_msg_id":"4badfc77-a51a-4a7b-a4a2-ec3871daf893","type":"message","user":"UG6DF6W87","text":"イメージレイヤの hash が合ってりゃなんでもキャッシュされる、とか思ってましたが、そんな単純じゃないんですねぇ...","ts":"1597901988.028600","team":"T03C4RC8V","reactions":[{"name":"me-too","count":2,"users":["U7B4ZD49X","U06BRP8VD"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Yf5w"}]},{"client_msg_id":"440c243c-70b5-40fb-b6bb-c870f66fc2c3","type":"message","user":"U03C71D7H","text":"なるほど","ts":"1597901453.027700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"v9m"}]},{"client_msg_id":"9e33b29d-d9bd-457c-98ac-d2433f66dc0b","type":"message","user":"UG6DF6W87","text":"\u003chttps://docs.docker.com/develop/develop-images/multistage-build/#use-an-external-image-as-a-stage\u003e\nこれか","ts":"1597901143.027400","attachments":[{"fallback":"Docker Documentation: Use multi-stage builds","id":1,"title":"Use multi-stage builds","title_link":"https://docs.docker.com/develop/develop-images/multistage-build/#use-an-external-image-as-a-stage","text":"Multi-stage builds are a new feature requiring Docker 17.05 or higher on the daemon and client. Multistage builds are useful to anyone who has struggled to optimize Dockerfiles while keeping...","thumb_url":"https://docs.docker.com/favicons/docs@2x.ico","blocks":null,"ts":1597753891,"service_name":"Docker Documentation","service_icon":"https://docs.docker.com/favicons/docs@2x.ico","thumb_width":129,"thumb_height":128,"from_url":"https://docs.docker.com/develop/develop-images/multistage-build/#use-an-external-image-as-a-stage","original_url":"https://docs.docker.com/develop/develop-images/multistage-build/#use-an-external-image-as-a-stage"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"3cB"}]},{"client_msg_id":"df597a80-ef44-4367-989a-4e8e5e1037bb","type":"message","user":"UG6DF6W87","text":"COPY --from は任意の docker image が指定できたはず\n// 必要なら pull される","ts":"1597901115.027100","team":"T03C4RC8V","reactions":[{"name":"hee","count":1,"users":["U7B4ZD49X"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ONOB8"}]},{"client_msg_id":"cf000bed-2e2e-4679-a4e6-0cdb9230528a","type":"message","user":"U03C71D7H","text":"--cache-from で自動で pull されるのが、BUILDKIT だからなのかどうかはよくわかってない…","ts":"1597899547.026500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"r1Cg"}]},{"client_msg_id":"31cda289-f408-4581-85be-375f2c6179cf","type":"message","user":"U03C71D7H","text":"この castage ってやつはたぶん BUILDKIT は想定していなさそうですねぇ。実際には pull は自動でされるので不要のはず","ts":"1597899506.025900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"YbAh"}]},{"client_msg_id":"04720991-7b6b-46b1-ade7-e7ab1cebe521","type":"message","user":"U03C71D7H","text":"とはいえそれでキャッシュ効くならって話もある","ts":"1597899389.024900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rZQ"}]},{"client_msg_id":"a3b6d9b9-5023-4f65-b600-095510e3d544","type":"message","user":"U03C71D7H","text":"Dockerfile としての取り回しは下がりそうかな…特定の名前で build していかないと動かないものになるので","ts":"1597899370.024800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"eIJud"}]},{"client_msg_id":"93d8d86c-6da3-4836-b088-3614aa1312d6","type":"message","user":"U03C71D7H","text":"別イメージから `COPY --from` ってできるんですかね? やってみたことがない","ts":"1597899260.024700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"t8V"}]},{"client_msg_id":"911668b1-327f-4ed0-81d8-f181f16ef76d","type":"message","user":"UEACRCY0Z","text":"マルチステージのキャッシュはめんどいですよね\n\u003chttps://github.com/orisano/castage\u003e","ts":"1597899189.024200","attachments":[{"fallback":"GitHub: orisano/castage","id":1,"title":"orisano/castage","title_link":"https://github.com/orisano/castage","text":"castage is multi-stage builds helper for caching. Contribute to orisano/castage development by creating an account on GitHub.","thumb_url":"https://avatars2.githubusercontent.com/u/1029249?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/orisano/castage","original_url":"https://github.com/orisano/castage"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"0bt"}]},{"client_msg_id":"c94d9036-61af-434e-9e72-969d14d6ef15","type":"message","user":"U9S4G0LJW","text":"うーん、素直にベースを別イメージとして分離するのはだめなんです？","ts":"1597898893.023800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"4By"}]},{"client_msg_id":"c51d2c5f-41db-4644-9713-1ed3e792d06d","type":"message","user":"U03C71D7H","text":"その可能性はありそう","ts":"1597897509.023500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qLHnI"}]},{"client_msg_id":"a0e7e39e-9964-4636-8bbf-a5f6a5bf9dad","type":"message","user":"U03C71D7H","text":"私は今やろうとしているのは、見ての通り Vim のイメージのビルドなんですけど、ベース部分のイメージをキャッシュさせておけば、単にビルドが速くなるだけじゃなくて他の人が image を利用する時に複数バージョンの pull でベース部分が共有できる、はず、なので、pull の時間やディスク容量を節約できるはずなんですよね","ts":"1597897420.023200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Cp2q"}]},{"client_msg_id":"fbb32260-24fa-46c1-afad-1592a9745c90","type":"message","user":"U06BRP8VD","text":"となるとGitHub Packagesがdocker repositoryの最新の機能をキャッチアップできていないってことかな?","ts":"1597897420.023100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"GK/"}]},{"client_msg_id":"306ed474-8014-494f-be96-6887aa68ef86","type":"message","user":"U03C71D7H","text":"一度 `--cache-from` をしておくと、該当イメージ(?)がキャッシュとして認識されて、次回(同じ dockerd 環境)は `--cache-from` がなくてもキャッシュが使われる。たぶん自前でビルドした時と同じ感じになる","ts":"1597897301.020700","team":"T03C4RC8V","reactions":[{"name":"hee","count":1,"users":["U7B4ZD49X"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"vTi"}]},{"client_msg_id":"d26b6a66-7b4e-46e4-b0d8-845b06d40563","type":"message","user":"U7B4ZD49X","text":"GitLabCIだとホスト側とイメージ置き場共有してキャッシュしたりしますね。（runner側の設定）\nパラで走ると事故るから私は結局使ってないですが・・・","ts":"1597897293.020400","edited":{"user":"U7B4ZD49X","ts":"1597897350.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"kBv1"}]},{"client_msg_id":"49d9da46-f757-4591-a7ae-bd05c246f762","type":"message","user":"U03C71D7H","text":"逆に pull しておくだけではキャッシュとして使われないこともわかった。Docker むずかしい…","ts":"1597897149.018400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"5rh"}]},{"client_msg_id":"53e50ce5-321c-4ea5-8919-706889296acb","type":"message","user":"U03C71D7H","text":"いや、そうではない。GitHub Packages が何かおかしい","ts":"1597897086.017900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"e2exf"}]},{"client_msg_id":"055b5029-c9d8-45a2-a8bf-dbbc047b0a46","type":"message","user":"UDDCM376D","text":"CIが原因か","ts":"1597897060.017500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"uhe"}]},{"client_msg_id":"b5621add-9902-4b61-8161-31ee4ba21413","type":"message","user":"U03C71D7H","text":"お。 Docker Hub から `--cache-from` で取ってくると、取ってきてくれるぞ…?","ts":"1597896963.017200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"U2t3O"}]},{"client_msg_id":"0968feeb-7712-40c8-9f9d-ade5b2d3af82","type":"message","user":"U03C71D7H","text":"マルチステージビルドが怪しい気もする…あとで、もっとシンプルな Dockerfile で試してみるか…","ts":"1597895819.016600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"VTUX"}]},{"client_msg_id":"0156b9ad-0394-42fa-b0d6-80528ec87fb7","type":"message","user":"U03C71D7H","text":"1. 手元でビルド\n2. Docker Hub or GitHub Packages に push\n3. `docker system prune -af`\n4. `docker pull ...`\n5. 再びビルド\n\nで試したけど、Docker Hub でも GHP でもキャッシュは再利用されず","ts":"1597895793.016000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"z4aY4"}]},{"client_msg_id":"bb045c3a-83e8-47bc-9214-2f600ad67959","type":"message","user":"U03C71D7H","text":"Docker Hub で試すか…","ts":"1597895041.014200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"no/"}]},{"client_msg_id":"a81c4d76-18c8-496f-913d-db43a8b1f8ab","type":"message","user":"U03C71D7H","text":"`--cache-from` がメタデータを取ってくるのだとすると、事前に pull してしまえば勝手にキャッシュを使ってくれてもよさそうなものなのだけど、使ってくれない","ts":"1597895019.014000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"OLGN"}]},{"client_msg_id":"7e3a6ac7-512a-49ba-a0b3-56c1d31ce939","type":"message","user":"U06BRP8VD","text":"つまりキャッシュのエクスポート＆インポートに対応してないか方法が違うってことか。","ts":"1597895016.013700","thread_ts":"1597893408.003600","subtype":"thread_broadcast","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Z=rQ"}],"root":{"client_msg_id":"b5ebc5e0-da70-40fb-a0f0-6d4e1b9321e1","type":"message","user":"U03C71D7H","text":"全部消えた状態で `--cache-from` を指定してビルド → not found と出ているので当然だが、キャッシュは利用されず\n事前に `docker pull` してビルド → キャッシュ利用されず…","ts":"1597893408.003600","thread_ts":"1597893408.003600","last_read":"1597895016.013700","subscribed":true,"reply_count":1,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ceqD"}]}},{"client_msg_id":"fd364c42-630e-4607-b86b-2f1ab2e594f3","type":"message","user":"UDDCM376D","text":"buildkit 、 buildx プラグイン、どちらかを使うみたい","ts":"1597894877.012500","edited":{"user":"UDDCM376D","ts":"1597894883.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"QHz"}]},{"client_msg_id":"fb220d8e-6197-44bf-a0d9-babdbbc2481e","type":"message","user":"U03C71D7H","text":"あとそもそも buildkit かどうかで事情が変わるみたいなので資料読む時はどの実装向けの情報なのか意識する必要がある…","ts":"1597894672.012000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"cpF6N"}]},{"client_msg_id":"83314337-ca71-40cb-8417-c475651ca59e","type":"message","user":"U03C71D7H","text":"`--build-arg BUILDKIT_INLINE_CACHE=1` これはやってます","ts":"1597894632.011200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"DJn"}]},{"client_msg_id":"0562bce7-e1b1-4eb6-b258-16057acfa732","type":"message","user":"UDDCM376D","text":"一度ビルドしたら勝手にキャッシュしてくれると思っていた","ts":"1597894126.010600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"05xKN"}]},{"client_msg_id":"c7dcb486-30be-4c39-b8a7-353e7a258758","type":"message","user":"U9S4G0LJW","text":"キャッシュって構築しかけのイメージのスナップショットだと思ってた\nキャッシュにしかない情報あるのね","ts":"1597894013.009400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"WAA"}]},{"client_msg_id":"b1a4150a-4411-4339-a163-8d6870af9572","type":"message","user":"UDDCM376D","text":"ビルドしたイメージをキャッシュとして使いたいなら、 --build-arg BUILDKIT_INLINE_CACHE=1 を渡さないとだめっぽい","ts":"1597893994.009100","team":"T03C4RC8V","reactions":[{"name":"naruhodo","count":1,"users":["U06BRP8VD"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Joct"}]},{"client_msg_id":"1adb1dce-4d5a-4c9f-bb72-db001acca895","type":"message","user":"UDDCM376D","text":"普通にビルドするだけじゃだめっぽい","ts":"1597893954.007800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"bJB"}]},{"client_msg_id":"08bd1371-1a8a-400a-ac73-fbba10f36ac1","type":"message","user":"UDDCM376D","text":"\u0026gt; This can be done by setting `--build-arg BUILDKIT_INLINE_CACHE=1` when building the image. After that, the built image can be used as a cache source for subsequent builds.","ts":"1597893934.007200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"/W0"}]},{"client_msg_id":"b74596e9-65f3-4d48-b593-76723fc70836","type":"message","user":"UDDCM376D","text":"\u0026gt; To use an image as a cache source, cache metadata needs to be written into the image on creation","ts":"1597893920.006900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"C0zo"}]},{"client_msg_id":"3a58b86d-172e-4ee9-ba78-f74fd582c92a","type":"message","user":"UDDCM376D","text":"イメージをpullするだけじゃだめで、キャッシュとして使いたいならキャッシュメタデータを書き込む必要がある","ts":"1597893914.006500","edited":{"user":"UDDCM376D","ts":"1597894071.000000"},"team":"T03C4RC8V","reactions":[{"name":"rikai","count":1,"users":["U9S4G0LJW"]},{"name":"+1","count":1,"users":["U06BRP8VD"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"6kemS"}]},{"client_msg_id":"fc7d5d23-13be-4114-b007-9bb753da8298","type":"message","user":"U9S4G0LJW","text":"ん、イメージ無かったら勝手にpullしてくれる？","ts":"1597893865.006000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"h1Okg"}]},{"client_msg_id":"070e50e3-e897-4916-b984-9ede4b103837","type":"message","user":"UDDCM376D","text":"\u0026gt; In addition to local build cache, the builder can reuse the cache generated from previous builds with the `--cache-from` flag pointing to an image in the registry.","ts":"1597893837.005700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"vPgu"}]},{"client_msg_id":"b979265b-0ef6-4c73-ac5e-75cd5474aeff","type":"message","user":"UDDCM376D","text":"\u003chttps://docs.docker.com/engine/reference/commandline/build/#specifying-external-cache-sources\u003e","ts":"1597893818.005400","attachments":[{"fallback":"Docker Documentation: docker build","id":1,"title":"docker build","title_link":"https://docs.docker.com/engine/reference/commandline/build/#specifying-external-cache-sources","text":"Description Build an image from a Dockerfile Usage docker build [OPTIONS] PATH | URL | - Extended description The docker build command builds Docker images from a Dockerfile and a...","thumb_url":"https://docs.docker.com/favicons/docs@2x.ico","blocks":null,"ts":1597753891,"service_name":"Docker Documentation","service_icon":"https://docs.docker.com/favicons/docs@2x.ico","thumb_width":129,"thumb_height":128,"from_url":"https://docs.docker.com/engine/reference/commandline/build/#specifying-external-cache-sources","original_url":"https://docs.docker.com/engine/reference/commandline/build/#specifying-external-cache-sources"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"psL1h"}]},{"client_msg_id":"948033bb-4fb6-499a-91d5-775c3ac97ea2","type":"message","user":"U9S4G0LJW","text":"これ見てる \u003chttps://cloud.google.com/cloud-build/docs/speeding-up-builds?hl=ja#using_a_cached_docker_image\u003e","ts":"1597893783.005000","edited":{"user":"U9S4G0LJW","ts":"1597893791.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"snHr6"}]},{"client_msg_id":"4453f400-c157-4ffc-8843-a71013dd6c42","type":"message","user":"U9S4G0LJW","text":"使い方見た感じpullした上で`--cache-from`でpullしたイメージを指定してキャッシュに載せるように見える","ts":"1597893706.004800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"m2sG"}]},{"client_msg_id":"630a347e-04f0-433f-a194-4f94cc25cb46","type":"message","user":"U03C71D7H","text":"Docker のキャッシュまじでわからん","ts":"1597893431.003900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"cE+/0"}]},{"client_msg_id":"b5ebc5e0-da70-40fb-a0f0-6d4e1b9321e1","type":"message","user":"U03C71D7H","text":"全部消えた状態で `--cache-from` を指定してビルド → not found と出ているので当然だが、キャッシュは利用されず\n事前に `docker pull` してビルド → キャッシュ利用されず…","ts":"1597893408.003600","thread_ts":"1597893408.003600","last_read":"1597895016.013700","subscribed":true,"reply_count":1,"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"ceqD"}]},{"client_msg_id":"202bea52-92d0-4027-b72f-7278f74d05f4","type":"message","user":"U03C71D7H","text":"ちゃんと消えた :pray:","ts":"1597893330.002700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"NAS=T"}]},{"client_msg_id":"875bd921-18b1-4bcd-b128-e7d3edc030b6","type":"message","user":"U03C71D7H","text":"あー、system、やってみます","ts":"1597893155.002500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"fCZ"}]},{"client_msg_id":"5908bdca-d910-4a2a-bde9-69728ff8ccb5","type":"message","user":"U9S4G0LJW","text":"結構色々消えるけど","ts":"1597893115.002000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"emhW1"}]},{"client_msg_id":"f976c1e6-7ebe-409f-be4b-3d78a119f301","type":"message","user":"U9S4G0LJW","text":"`docker system prune`を使うといいです","ts":"1597893109.001700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"gx3xx"}]},{"client_msg_id":"d076810a-6ab8-4c6e-a4d2-1eec82a1ff3a","type":"message","user":"U03C71D7H","text":"ゆるぼ: Docker イメージのキャッシュを完全に消す方法\n`docker image list -a` で見えるイメージは全部消したのだけど、 `docker build ...` すると `CACHED` って出て一瞬で終わってしまう…","ts":"1597893078.001500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"MXgKy"}]},{"client_msg_id":"493dc4cf-e230-496e-ae77-5ddbd23c6cb0","type":"message","user":"U03C71D7H","text":"buildx という別のコマンドがある?","ts":"1597892356.000500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"7xnNA"}]},{"client_msg_id":"919640c1-5d5d-4f0d-9246-9c0620d1fd2f","type":"message","user":"UNJ2DANJC","text":"\u003chttps://github.com/docker/buildx\u003e --cache-toなるオプションがある","ts":"1597891511.000100","attachments":[{"fallback":"GitHub: docker/buildx","id":1,"title":"docker/buildx","title_link":"https://github.com/docker/buildx","text":"Docker CLI plugin for extended build capabilities with BuildKit - docker/buildx","thumb_url":"https://avatars2.githubusercontent.com/u/5429470?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/docker/buildx","original_url":"https://github.com/docker/buildx"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"86f"}]},{"client_msg_id":"ab0600aa-11e3-4431-99b7-9b51db0b66dc","type":"message","user":"U06BRP8VD","text":"dockerdの起動オプションいじって、キャッシュ置き場変えるとかできないかしらね。","ts":"1597887553.063400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"wzh"}]},{"client_msg_id":"7def9203-6ca4-4bd3-b9f3-ae2d198aa233","type":"message","user":"U06BRP8VD","text":"やっぱローカルで試さないとねぇ。","ts":"1597887538.063000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"bzE"}]},{"client_msg_id":"b36eeee4-ff73-4eb6-84c8-1053feb62e09","type":"message","user":"U03C71D7H","text":"\u003chttp://docker.pkg.github.com|docker.pkg.github.com\u003e が怪しい、は、ありそうだなぁって気がしてます…。Docker Hub に新規のイメージ作ってそっちでためそうかな…","ts":"1597887384.062600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"42UBR"}]},{"client_msg_id":"f596f2e3-001f-465b-a2e5-42a9b622b46c","type":"message","user":"U03C71D7H","text":"まずはキャッシュの消し方だなぁ。関係なさそうなイメージも一旦全部消してみないとダメかな…","ts":"1597887340.062000","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Si+2"}]},{"client_msg_id":"fa94eff2-688c-47df-9e36-adcc50696a10","type":"message","user":"U06BRP8VD","text":"前提としてpullが機能してないとかdocker.pkg.github.comが一部機能に対応してないとか、そういうことを疑えて…","ts":"1597887334.061800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Cixa"}]},{"client_msg_id":"58ec8f70-b443-414e-8a23-ea4c286d6fa7","type":"message","user":"U06BRP8VD","text":"まずローカルで条件整えるほうが良いのでは。","ts":"1597887297.060700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"fzCL"}]},{"client_msg_id":"3dc19ceb-06b4-472d-a1be-5a4efaa0792f","type":"message","user":"U03C71D7H","text":"Dockerfile が今ちょっと複雑なので、目的から離れてもっとシンプルな例で実験した方がよさそうだなぁ","ts":"1597887266.060300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"BZ5d"}]},{"client_msg_id":"2213b2ce-d449-467d-a3b3-441bca6ae7f6","type":"message","user":"U03C71D7H","text":"なので `--cache-from` なくても事前に pull していたらキャッシュにヒットしそうな気がするんですが…お察しの通りコメントアウトされてる部分は最初はコメントアウトしてなくて、それでもうまくキャッシュを使ってくれませんでした…","ts":"1597887234.059600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"IHaV8"}]},{"client_msg_id":"e177ac3f-e842-420f-876b-08f936542d58","type":"message","user":"U03C71D7H","text":"私も昨日の質問をした後に調べていて知ったんですけど、\n`docker build` の `--cache-from` は、指定するとまず JSON でメタデータを取ってきて、キャッシュがヒットしそうだ、となったら pull する、なので事前に pull するより無駄が少ない！ってものらしいです。","ts":"1597887170.058600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"f8dbK"}]},{"client_msg_id":"0838a65f-2b38-4c3b-9da9-161b9d9cffb3","type":"message","user":"U06BRP8VD","text":"docker pull 成功してます? さっき見せてもらったDockerfileだとコメントアウトされてるけど","ts":"1597887112.057400","edited":{"user":"U06BRP8VD","ts":"1597887119.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"JSbxb"}]},{"client_msg_id":"ab5adf1f-fc45-4460-93f4-95fb59bb683a","type":"message","user":"U03C71D7H","text":"docker build です","ts":"1597887086.056600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rRA"}]},{"client_msg_id":"60a2af64-44f4-4969-9666-a2cf4b0a41c5","type":"message","user":"U06BRP8VD","text":"そのエラーってどこで出てます? docker build ? docker pull?","ts":"1597887065.056400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"xYEG"}]},{"client_msg_id":"fb118e56-142c-4125-bf1b-7584ed1f0049","type":"message","user":"U03C71D7H","text":"ローカルでやった場合、キャッシュはヒットするんですけど、 `--cache-from` は同様に `could not fetch ...` ってエラーが出ちゃいますね。docker login しているはずなので認証は通っているはずだけど…なぜ見つからないのか","ts":"1597886945.055900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"zMvjG"}]},{"client_msg_id":"181ca688-fcca-48a4-a319-44c927a1bc86","type":"message","user":"U03C71D7H","text":"vim-jp-bot 用に `thinca/vim:latest` なイメージとそれを使ってるコンテナは残っているけど…こいつらは multi stage にする前の Dockerfile でビルドされているはずだから関係なさそうなんだけどなぁ","ts":"1597886842.054600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qMwa"}]},{"client_msg_id":"63618a8f-bbcf-483b-bbea-35c1aaad81a4","type":"message","user":"U03C71D7H","text":"Exited なコンテナはないですね","ts":"1597886783.053500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Iys"}]},{"client_msg_id":"02473863-587f-4317-a6d1-6fba48881995","type":"message","user":"U8CC7MDCL","text":"ビルド失敗とかした時のコンテナが残ってるとか？\ndocker ps -aでExitedなコンテナあれば消してもいいかも `docker container prune`","ts":"1597886703.053200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"yXA"}]},{"client_msg_id":"5b7b94be-c03b-430e-9b56-803436675277","type":"message","user":"U06BRP8VD","text":"pruneって使用(タグ)しているイメージ残るんじゃなかったっけ?","ts":"1597886662.052700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"V1a8"}]},{"client_msg_id":"22394213-fa6a-4442-b17c-b1d383fb8882","type":"message","user":"U03C71D7H","text":"それを試したいんですけど docker image prune -f してもなぜかキャッシュが消えてくれない…参照しているイメージは全部消したつもりなんですけど、よくわからず…","ts":"1597886523.051100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"EMH"}]},{"client_msg_id":"3ff8b328-0a9c-4bbc-a871-1dc49a3c53ff","type":"message","user":"U06BRP8VD","text":"あああとはローカルでいったんイメージ消して、pullしてキャッシュ効くかか","ts":"1597886476.050200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"+XN"}]},{"client_msg_id":"6112931a-6323-4112-a894-3c8b22bfcb18","type":"message","user":"U06BRP8VD","text":"となると GitHub Actions 固有の問題になるのかな。","ts":"1597886441.049300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"2zjM9"}]},{"client_msg_id":"f60595b2-1b2b-4ca4-9af3-f0042ab5778f","type":"message","user":"U03C71D7H","text":"ローカルだと効きます","ts":"1597886414.048900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"L82"}]},{"client_msg_id":"78d54d85-9fd1-4595-9768-4123949393cf","type":"message","user":"U03C71D7H","text":"ARG がたくさんあるのでその辺りも関係しているのかな、とも思ったんですが、iconv は ARG ないので関係ないはず… iconv すらキャッシュが効きません","ts":"1597886404.048600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"nY0f"}]},{"client_msg_id":"33cd8520-1dd2-45e7-94b6-1706869e74ad","type":"message","user":"U06BRP8VD","text":"ローカルでdocker buildしたとき、キャッシュ再利用されます?","ts":"1597886394.048400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"OPLzj"}]},{"client_msg_id":"d6d1a370-77cb-4c4f-82b5-8fd471b423e9","type":"message","user":"U03C71D7H","text":"そうです","ts":"1597886349.047400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rtpGI"}]},{"client_msg_id":"3d925933-cec5-4788-8ca1-d08e6ebb56de","type":"message","user":"U03C71D7H","text":"push 先は GitHub Packages です。GitHub Packages は一度 push すると削除ができないらしくて(このリポジトリにゴミイメージを push してしまった…)、その関係で実際のビルドや push のテストは別のリポジトリでやってます","ts":"1597886341.047200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"LMCo"}]},{"client_msg_id":"33272cf4-fd99-422c-8d54-b3beafacdb03","type":"message","user":"U06BRP8VD","text":"この場合baseで作成されたimageが再利用できないってことかな?","ts":"1597886332.046900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"F6B33"}]},{"client_msg_id":"24400e31-a5f2-4dcb-92ea-deba037809f1","type":"message","user":"U06BRP8VD","text":"ちょっと自分のDockerfileみなおそう","ts":"1597886248.045200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"W2y"}]},{"client_msg_id":"2fd19026-1a1f-453e-8119-75d63c85d417","type":"message","user":"U03C71D7H","text":"色々試している最中なので汚いですが、試している Dockerfile と GitHub Actions の workflow はこちら\n\u003chttps://github.com/thinca/dockerfile-vim/blob/build-on-gha/base/Dockerfile\u003e\n\u003chttps://github.com/thinca/dockerfile-vim/blob/build-on-gha/.github/workflows/docker_build.yml\u003e","ts":"1597886246.045100","attachments":[{"fallback":"GitHub: thinca/dockerfile-vim","id":1,"title":"thinca/dockerfile-vim","title_link":"https://github.com/thinca/dockerfile-vim/blob/build-on-gha/base/Dockerfile","text":"Dockerfile for Vim. Contribute to thinca/dockerfile-vim development by creating an account on GitHub.","thumb_url":"https://avatars1.githubusercontent.com/u/20474?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/thinca/dockerfile-vim/blob/build-on-gha/base/Dockerfile","original_url":"https://github.com/thinca/dockerfile-vim/blob/build-on-gha/base/Dockerfile"},{"fallback":"GitHub: thinca/dockerfile-vim","id":2,"title":"thinca/dockerfile-vim","title_link":"https://github.com/thinca/dockerfile-vim/blob/build-on-gha/.github/workflows/docker_build.yml","text":"Dockerfile for Vim. Contribute to thinca/dockerfile-vim development by creating an account on GitHub.","thumb_url":"https://avatars1.githubusercontent.com/u/20474?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":400,"thumb_height":400,"from_url":"https://github.com/thinca/dockerfile-vim/blob/build-on-gha/.github/workflows/docker_build.yml","original_url":"https://github.com/thinca/dockerfile-vim/blob/build-on-gha/.github/workflows/docker_build.yml"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"1p9"}]},{"client_msg_id":"e3b9c136-e74e-4e25-a551-76a8dfc8aae3","type":"message","user":"U06BRP8VD","text":"\u003chttps://tech.plaid.co.jp/improve_docker_build_efficiency/#dockerfile--2\u003e","ts":"1597886224.044700","attachments":[{"fallback":"PLAID Engineer Blog: Docker Buildにおけるリードタイム短縮のための3つの改善ポイント | PLAID engineer blog","id":1,"title":"Docker Buildにおけるリードタイム短縮のための3つの改善ポイント | PLAID engineer blog","title_link":"https://tech.plaid.co.jp/improve_docker_build_efficiency/#dockerfile--2","text":"Dockerfile効率化のベストプラクティスを、リードタイム(CI/CDの実行時間)を短縮し開発生産性を向上させる為に行うべき事という観点でまとめました。 1.Docker Daemonへの転送ファイル削減 2.Docker Imageのサイズ削減 3.cacheの有効活用","image_url":"https://tech.plaid.co.jp/content/images/2020/03/shutterstock_1378652867.jpg","fields":[{"title":"Written by","value":"Takuya Ogawa","short":true},{"title":"Filed under","value":"Docker","short":true}],"blocks":null,"ts":1583806478,"service_name":"PLAID Engineer Blog","service_icon":"https://tech.plaid.co.jp/favicon.png","from_url":"https://tech.plaid.co.jp/improve_docker_build_efficiency/#dockerfile--2","original_url":"https://tech.plaid.co.jp/improve_docker_build_efficiency/#dockerfile--2"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"jHXm"}]},{"client_msg_id":"ab51fc45-521d-41ff-b07c-23fb95576b2b","type":"message","user":"U06BRP8VD","text":"途中のステップまではキャッシュ生きてるけど、ある命令から先はキャッシュ無効化されちゃうとかありそうね。","ts":"1597886048.043900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"z=6"}]},{"client_msg_id":"065bdec2-a59b-44f4-84bb-24eb5a12ae6f","type":"message","user":"U06BRP8VD","text":"あとココにキャッシュの利用戦略が書かれてる。実装が完全に一致するかはわからないけど、参考にはなると思う。\n\u003chttps://docs.docker.jp/engine/articles/dockerfile_best-practice.html#build-cache\u003e","ts":"1597885956.043100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"YorR"}]},{"client_msg_id":"24f07de2-c51e-46c8-9765-057ac0ce2642","type":"message","user":"U06BRP8VD","text":"ふーんFetchが動いちゃってるのか。なか詳しくないからここまでたどり着いちゃうのがおかしい気がする\n\n\u003chttps://github.com/containerd/containerd/blob/0f08a55d6b62409e3568b976e4d0a8927846d435/remotes/docker/fetcher.go#L140-L144\u003e","ts":"1597885699.042400","attachments":[{"fallback":"GitHub: containerd/containerd","id":1,"title":"containerd/containerd","title_link":"https://github.com/containerd/containerd/blob/0f08a55d6b62409e3568b976e4d0a8927846d435/remotes/docker/fetcher.go#L140-L144","text":"An open and reliable container runtime. Contribute to containerd/containerd development by creating an account on GitHub.","thumb_url":"https://avatars0.githubusercontent.com/u/14037953?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":46,"thumb_height":46,"from_url":"https://github.com/containerd/containerd/blob/0f08a55d6b62409e3568b976e4d0a8927846d435/remotes/docker/fetcher.go#L140-L144","original_url":"https://github.com/containerd/containerd/blob/0f08a55d6b62409e3568b976e4d0a8927846d435/remotes/docker/fetcher.go#L140-L144"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"u51S0"}]},{"client_msg_id":"9ada4930-0649-4113-8347-a87c1b43a8e8","type":"message","user":"U06BRP8VD","text":"あとは動かないDockerfileをみせたほうがよいのでは?","ts":"1597885569.041800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"qLH+J"}]},{"client_msg_id":"cd5e27f1-7982-4181-b915-168b634f069e","type":"message","user":"U06BRP8VD","text":"つまりもとの「Docker を CI でビルドしようとしていて」が混乱の元なのね。","ts":"1597885428.041100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"3Oo=l"}]},{"client_msg_id":"09bd991b-7f60-423b-ab3e-d90584a635f7","type":"message","user":"U03C71D7H","text":"`--cache-from` も使ってみたのだけど、 `ERROR: httpReaderSeeker: failed open: could not fetch content descriptor sha256:bac9ca3ea9b89b423e468ed7c9a5b6cd49b8b02c9357633cdf0926c6532fa9a8 (application/vnd.docker.distribution.manifest.v2+json) from remote: not found` こんな感じで見つからないって言われちゃうんですよね…。全く同じ Dockerfile でビルドしたイメージが push してあるんですけど…","ts":"1597885374.040600","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"lpV4"}]},{"client_msg_id":"dff994b2-04f7-4fab-bb00-5f4871a6dd58","type":"message","user":"U03C71D7H","text":"CI のキャッシュ機構の話はしてないです。キャッシュとして使いたいイメージは `docker pull` で取得しています。","ts":"1597885277.039700","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"9k/TD"}]},{"client_msg_id":"bb44c089-a38b-4d2f-a9db-8f7c6dd92234","type":"message","user":"U06BRP8VD","text":"dockerのキャッシュ機構はimage単位でdockerdの動いてるマシンにそのimageがあるかどうかなのに対して、CIのキャッシュ機構はマシンのファイルシステムの一部をどこかに保存・復帰する機構だから、連携するには一手間いる。\n\nたとえばCircleCIに関していうとdockerdがリモートで動いてて、そのイメージキャッシュにクライアント(`docker build` を実行する方)はアクセス・制御する手段がないから、基本的にはキャッシュが効かない。\n\nってのが僕の認識。","ts":"1597884921.039000","edited":{"user":"U06BRP8VD","ts":"1597885240.000000"},"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"rIh7"}]},{"client_msg_id":"1cfe40ee-6276-46aa-902b-253e4d0e6fa7","type":"message","user":"U06BRP8VD","text":"なんか言葉とか環境とかの前提のすり合わせができてないように見える。","ts":"1597884723.035800","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"G1Sa"}]},{"client_msg_id":"2643caa7-4055-4e7d-b9a7-6369913e8368","type":"message","user":"U03C71D7H","text":"`docker build` を実行した時に、キャッシュが使われずに普通にビルドされてしまうのです","ts":"1597884286.034900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Yl8"}]},{"client_msg_id":"569f9a1c-249a-4b34-bd0c-0aa9d515b3ff","type":"message","user":"UDDCM376D","text":"キャッシュを試したことがないけど…\n↑はどうですか？","ts":"1597877068.034200","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"EyRLQ"}]},{"client_msg_id":"48b41d06-edf1-4ede-8861-855c293f7a00","type":"message","user":"UDDCM376D","text":"\u003chttps://docs.github.com/ja/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows\u003e","ts":"1597877024.033300","attachments":[{"fallback":"依存関係をキャッシュしてワークフローのスピードを上げる - GitHub Docs","id":1,"title":"依存関係をキャッシュしてワークフローのスピードを上げる - GitHub Docs","title_link":"https://docs.github.com/ja/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows","text":"ワークフローを高速化して効率を上げるために、依存関係や広く再利用されるファイルに対するキャッシュを作成して利用できます。","blocks":null,"service_name":"docs.github.com","from_url":"https://docs.github.com/ja/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows","original_url":"https://docs.github.com/ja/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows"}],"team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"H/pm"}]},{"client_msg_id":"3bd34245-1354-4f6b-867f-d2d14c3b964a","type":"message","user":"UDDCM376D","text":"Docker自体をビルドしているのか","ts":"1597877019.033100","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"YVtpy"}]},{"client_msg_id":"0d3392f9-9850-4532-91a0-2e76a5d8e9a2","type":"message","user":"UDDCM376D","text":"Ciってactionsですか？","ts":"1597876825.032900","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"YdwKI"}]},{"client_msg_id":"4aeadfb9-327c-43ea-b5a9-be5c6e8bf2db","type":"message","user":"U03C71D7H","text":"【質問】\nDocker を CI でビルドしようとしていて、2回目以降はキャッシュの恩恵に与りたいんですがうまくいきません…。\nmulti stage build で、前半は内容が変わっていない部分、後半は build arg でパラメータを変えて実行、という感じで、\n`--target` 指定で stage 毎にビルド \u0026amp; stage 毎にレジスタラー(GitHub Packages)に push、\nそして2回目以降のために CI の先頭でレジスタラーからイメージを stage 毎に pull \u0026amp; CI ローカルでビルド時に使うタグ名を付ける、というのをやっています。\n`DOCKER_BUILDKIT='1'` でビルドしていて、一応 `--cache-from` も指定してみているけど特に変わらず…。\nDocker のビルドのキャッシュの利用について詳しい人いたら教えてください :pray:","ts":"1597851751.032500","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"b/NHc"}]}]
