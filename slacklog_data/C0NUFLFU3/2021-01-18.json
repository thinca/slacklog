[{"type":"message","text":"\u003chttps://github.com/vim/vim/commit/82aa6e09e02b138ab7ee6b79ecac487813f117e5|patch 8.2.2374: accessing uninitialized memory in test_undo\u003e\npatch 8.2.2374: accessing uninitialized memory in test_undo\n\nProblem:    Accessing uninitialized memory in test_undo.\nSolution:   Do not look in typebuf.tb_buf if it is empty. (Dominique Pellé,\n            closes #7697)","ts":"1610918895.005900","attachments":[{"fallback":"GitHub: patch 8.2.2374: accessing uninitialized memory in test_undo · vim/vim@82aa6e0","id":1,"title":"patch 8.2.2374: accessing uninitialized memory in test_undo · vim/vim@82aa6e0","title_link":"https://github.com/vim/vim/commit/82aa6e09e02b138ab7ee6b79ecac487813f117e5","text":"Problem: Accessing uninitialized memory in test_undo. Solution: Do not look in typebuf.tb_buf if it is empty. (Dominique Pellé, closes #7697)","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/82aa6e09e02b138ab7ee6b79ecac487813f117e5","original_url":"https://github.com/vim/vim/commit/82aa6e09e02b138ab7ee6b79ecac487813f117e5"}],"edited":{"user":"BPV6T0C1J","ts":"1610918895.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"\u003chttps://github.com/vim/vim/commit/f30a14db3b26e510f193f50ee0dd8a41303e4740|patch 8.2.2373: Vim9: list assignment only accepts a number index\u003e\npatch 8.2.2373: Vim9: list assignment only accepts a number index\n\nProblem:    Vim9: list assignment only accepts a number index.\nSolution:   Accept \"any\" and do a runtime type check. (closes #7694)","ts":"1610917694.005700","attachments":[{"fallback":"GitHub: patch 8.2.2373: Vim9: list assignment only accepts a number index · vim/vim@f30a14d","id":1,"title":"patch 8.2.2373: Vim9: list assignment only accepts a number index · vim/vim@f30a14d","title_link":"https://github.com/vim/vim/commit/f30a14db3b26e510f193f50ee0dd8a41303e4740","text":"Problem: Vim9: list assignment only accepts a number index. Solution: Accept \"any\" and do a runtime type check. (closes #7694)","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/f30a14db3b26e510f193f50ee0dd8a41303e4740","original_url":"https://github.com/vim/vim/commit/f30a14db3b26e510f193f50ee0dd8a41303e4740"}],"edited":{"user":"BPV6T0C1J","ts":"1610917694.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"\u003chttps://github.com/vim/vim/commit/585587dadbc2558520c33969098db9ff49598785|patch 8.2.2372: confusing error message for wrong :let command\u003e\npatch 8.2.2372: confusing error message for wrong :let command\n\nProblem:    Confusing error message for wrong :let command.\nSolution:   Only check for type in Vim9 script.","ts":"1610914087.005500","attachments":[{"fallback":"GitHub: patch 8.2.2372: confusing error message for wrong :let command · vim/vim@585587d","id":1,"title":"patch 8.2.2372: confusing error message for wrong :let command · vim/vim@585587d","title_link":"https://github.com/vim/vim/commit/585587dadbc2558520c33969098db9ff49598785","text":"Problem: Confusing error message for wrong :let command. Solution: Only check for type in Vim9 script.","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/585587dadbc2558520c33969098db9ff49598785","original_url":"https://github.com/vim/vim/commit/585587dadbc2558520c33969098db9ff49598785"}],"edited":{"user":"BPV6T0C1J","ts":"1610914088.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"\u003chttps://github.com/vim/vim/commit/036d07144efe213199b1ed8de998e6f12a056499|patch 8.2.2371: Vim9: crash when using types in :for with unpack\u003e\npatch 8.2.2371: Vim9: crash when using types in :for with unpack\n\nProblem:    Vim9: crash when using types in :for with unpack.\nSolution:   Check for skip_var_list() failing. Pass include_type to\n            skip_var_one(). Skip type when compiling. (closes #7694)","ts":"1610912887.005300","attachments":[{"fallback":"GitHub: patch 8.2.2371: Vim9: crash when using types in :for with unpack · vim/vim@036d071","id":1,"title":"patch 8.2.2371: Vim9: crash when using types in :for with unpack · vim/vim@036d071","title_link":"https://github.com/vim/vim/commit/036d07144efe213199b1ed8de998e6f12a056499","text":"Problem: Vim9: crash when using types in :for with unpack. Solution: Check for skip_var_list() failing. Pass include_type to skip_var_one(). Skip type when compiling. (closes #7694)","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/036d07144efe213199b1ed8de998e6f12a056499","original_url":"https://github.com/vim/vim/commit/036d07144efe213199b1ed8de998e6f12a056499"}],"edited":{"user":"BPV6T0C1J","ts":"1610912887.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"\u003chttps://github.com/vim/vim/commit/1430ceeb2d4185a8d60fa81007fbc8b74fd68c46|patch 8.2.2370: Vim9: command fails in catch block\u003e\npatch 8.2.2370: Vim9: command fails in catch block\n\nProblem:    Vim9: command fails in catch block.\nSolution:   Reset force_abort and need_rethrow. (closes #7692)","ts":"1610908090.005100","attachments":[{"fallback":"GitHub: patch 8.2.2370: Vim9: command fails in catch block · vim/vim@1430cee","id":1,"title":"patch 8.2.2370: Vim9: command fails in catch block · vim/vim@1430cee","title_link":"https://github.com/vim/vim/commit/1430ceeb2d4185a8d60fa81007fbc8b74fd68c46","text":"Problem: Vim9: command fails in catch block. Solution: Reset force_abort and need_rethrow. (closes #7692)","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/1430ceeb2d4185a8d60fa81007fbc8b74fd68c46","original_url":"https://github.com/vim/vim/commit/1430ceeb2d4185a8d60fa81007fbc8b74fd68c46"}],"edited":{"user":"BPV6T0C1J","ts":"1610908090.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"\u003chttps://github.com/vim/vim/commit/3af15ab7888033fdfae0ae7085172aab794339a2|patch 8.2.2369: Vim9: functions return true/false but can't be used a…\u003e\npatch 8.2.2369: Vim9: functions return true/false but can't be used as bool\n\nProblem:    Vim9: functions return true/false but can't be used as bool.\nSolution:   Add ret_number_bool(). (closes #7693)","ts":"1610897283.004900","attachments":[{"fallback":"GitHub: patch 8.2.2369: Vim9: functions return true/false but can't be used a… · vim/vim@3af15ab","id":1,"title":"patch 8.2.2369: Vim9: functions return true/false but can't be used a… · vim/vim@3af15ab","title_link":"https://github.com/vim/vim/commit/3af15ab7888033fdfae0ae7085172aab794339a2","text":"…s bool Problem: Vim9: functions return true/false but can't be used as bool. Solution: Add ret_number_bool(). (closes #7693)","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400\u0026v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/3af15ab7888033fdfae0ae7085172aab794339a2","original_url":"https://github.com/vim/vim/commit/3af15ab7888033fdfae0ae7085172aab794339a2"}],"edited":{"user":"BPV6T0C1J","ts":"1610897284.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null}]
