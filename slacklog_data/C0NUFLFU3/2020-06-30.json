[{"type":"message","text":"<https://github.com/vim/vim/commit/f151ad1c70825a91afb112e611db5c712e2656ef|patch 8.2.1096: Vim9: return type of getqflist() is wrong>\npatch 8.2.1096: Vim9: return type of getqflist() is wrong\n\nProblem:    Vim9: return type of getqflist() is wrong.\nSolution:   Let the return type depend on the arguments.  Also for\n            getloclist(). (closes #6367)","ts":"1593517688.136500","attachments":[{"fallback":"GitHub: patch 8.2.1096: Vim9: return type of getqflist() is wrong · vim/vim@f151ad1","id":1,"title":"patch 8.2.1096: Vim9: return type of getqflist() is wrong · vim/vim@f151ad1","title_link":"https://github.com/vim/vim/commit/f151ad1c70825a91afb112e611db5c712e2656ef","text":"Problem: Vim9: return type of getqflist() is wrong. Solution: Let the return type depend on the arguments. Also for getloclist(). (closes #6367)","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/f151ad1c70825a91afb112e611db5c712e2656ef","original_url":"https://github.com/vim/vim/commit/f151ad1c70825a91afb112e611db5c712e2656ef"}],"edited":{"user":"BPV6T0C1J","ts":"1593517689.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/91639195eff7b29213a0a3c279ac46e46ac76edd|patch 8.2.1082: Coverity complains about ignoring dict_add() return v…>\npatch 8.2.1082: Coverity complains about ignoring dict_add() return value\n\nProblem:    Coverity complains about ignoring dict_add() return value.\nSolution:   Add (void).","ts":"1593454093.133800","attachments":[{"fallback":"GitHub: patch 8.2.1082: Coverity complains about ignoring dict_add() return v… · vim/vim@9163919","id":1,"title":"patch 8.2.1082: Coverity complains about ignoring dict_add() return v… · vim/vim@9163919","title_link":"https://github.com/vim/vim/commit/91639195eff7b29213a0a3c279ac46e46ac76edd","text":"…alue Problem: Coverity complains about ignoring dict_add() return value. Solution: Add (void).","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/91639195eff7b29213a0a3c279ac46e46ac76edd","original_url":"https://github.com/vim/vim/commit/91639195eff7b29213a0a3c279ac46e46ac76edd"}],"edited":{"user":"BPV6T0C1J","ts":"1593454094.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/fda20c4cc59008264676a6deb6a3095ed0c248e0|patch 8.2.1083: crash when using reduce() on a NULL list>\npatch 8.2.1083: crash when using reduce() on a NULL list\n\nProblem:    Crash when using reduce() on a NULL list.\nSolution:   Only access the list when not NULL.","ts":"1593455293.134000","attachments":[{"fallback":"GitHub: patch 8.2.1083: crash when using reduce() on a NULL list · vim/vim@fda20c4","id":1,"title":"patch 8.2.1083: crash when using reduce() on a NULL list · vim/vim@fda20c4","title_link":"https://github.com/vim/vim/commit/fda20c4cc59008264676a6deb6a3095ed0c248e0","text":"Problem: Crash when using reduce() on a NULL list. Solution: Only access the list when not NULL.","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/fda20c4cc59008264676a6deb6a3095ed0c248e0","original_url":"https://github.com/vim/vim/commit/fda20c4cc59008264676a6deb6a3095ed0c248e0"}],"edited":{"user":"BPV6T0C1J","ts":"1593455293.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/7d2ac92ebc36049f9ce2f4ce08b8a80ca212ace2|patch 8.2.1084: Lua: registering function has useless code>\npatch 8.2.1084: Lua: registering function has useless code\n\nProblem:    Lua: registering function has useless code.\nSolution:   Remove clearing grow arrays.","ts":"1593455293.134100","attachments":[{"fallback":"GitHub: patch 8.2.1084: Lua: registering function has useless code · vim/vim@7d2ac92","id":1,"title":"patch 8.2.1084: Lua: registering function has useless code · vim/vim@7d2ac92","title_link":"https://github.com/vim/vim/commit/7d2ac92ebc36049f9ce2f4ce08b8a80ca212ace2","text":"Problem: Lua: registering function has useless code. Solution: Remove clearing grow arrays.","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/7d2ac92ebc36049f9ce2f4ce08b8a80ca212ace2","original_url":"https://github.com/vim/vim/commit/7d2ac92ebc36049f9ce2f4ce08b8a80ca212ace2"}],"edited":{"user":"BPV6T0C1J","ts":"1593455293.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/6d90c61c5a6437ff5058b6c5874ba71bff574e60|patch 8.2.1085: Coverity complains about ignoring dict_add() return v…>\npatch 8.2.1085: Coverity complains about ignoring dict_add() return value\n\nProblem:    Coverity complains about ignoring dict_add() return value.\nSolution:   Add (void).","ts":"1593456495.134400","attachments":[{"fallback":"GitHub: patch 8.2.1085: Coverity complains about ignoring dict_add() return v… · vim/vim@6d90c61","id":1,"title":"patch 8.2.1085: Coverity complains about ignoring dict_add() return v… · vim/vim@6d90c61","title_link":"https://github.com/vim/vim/commit/6d90c61c5a6437ff5058b6c5874ba71bff574e60","text":"…alue Problem: Coverity complains about ignoring dict_add() return value. Solution: Add (void).","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/6d90c61c5a6437ff5058b6c5874ba71bff574e60","original_url":"https://github.com/vim/vim/commit/6d90c61c5a6437ff5058b6c5874ba71bff574e60"}],"edited":{"user":"BPV6T0C1J","ts":"1593456496.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/cf30643ae607ae1a97b50e19c622dc8303723fa2|patch 8.2.1086: possibly using freed memory when text properties used>\npatch 8.2.1086: possibly using freed memory when text properties used\n\nProblem:    Possibly using freed memory when text properties used when\n            changing indent of a line.\nSolution:   Compute the offset before calling ml_replace().","ts":"1593456495.134500","attachments":[{"fallback":"GitHub: patch 8.2.1086: possibly using freed memory when text properties used · vim/vim@cf30643","id":1,"title":"patch 8.2.1086: possibly using freed memory when text properties used · vim/vim@cf30643","title_link":"https://github.com/vim/vim/commit/cf30643ae607ae1a97b50e19c622dc8303723fa2","text":"Problem: Possibly using freed memory when text properties used when changing indent of a line. Solution: Compute the offset before calling ml_replace().","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/cf30643ae607ae1a97b50e19c622dc8303723fa2","original_url":"https://github.com/vim/vim/commit/cf30643ae607ae1a97b50e19c622dc8303723fa2"}],"edited":{"user":"BPV6T0C1J","ts":"1593456496.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/566cc8c72bb8036f015a435800f28ef9f6a9a3b6|patch 8.2.1087: possible memory leak when file expansion fails>\npatch 8.2.1087: possible memory leak when file expansion fails\n\nProblem:    Possible memory leak when file expansion fails.\nSolution:   Clear the grow array when returning FAIL.  Use an error message\n            instead of an empty string.","ts":"1593458897.134800","attachments":[{"fallback":"GitHub: patch 8.2.1087: possible memory leak when file expansion fails · vim/vim@566cc8c","id":1,"title":"patch 8.2.1087: possible memory leak when file expansion fails · vim/vim@566cc8c","title_link":"https://github.com/vim/vim/commit/566cc8c72bb8036f015a435800f28ef9f6a9a3b6","text":"Problem: Possible memory leak when file expansion fails. Solution: Clear the grow array when returning FAIL. Use an error message instead of an empty string.","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/566cc8c72bb8036f015a435800f28ef9f6a9a3b6","original_url":"https://github.com/vim/vim/commit/566cc8c72bb8036f015a435800f28ef9f6a9a3b6"}],"edited":{"user":"BPV6T0C1J","ts":"1593458897.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/6378b21d6dd38cc0f80aa6d31d747db6c287483b|patch 8.2.1088: a very long translation might cause a buffer overflow>\npatch 8.2.1088: a very long translation might cause a buffer overflow\n\nProblem:    A very long translation might cause a buffer overflow.\nSolution:   Trunctate the message if needed.","ts":"1593460090.135000","attachments":[{"fallback":"GitHub: patch 8.2.1088: a very long translation might cause a buffer overflow · vim/vim@6378b21","id":1,"title":"patch 8.2.1088: a very long translation might cause a buffer overflow · vim/vim@6378b21","title_link":"https://github.com/vim/vim/commit/6378b21d6dd38cc0f80aa6d31d747db6c287483b","text":"Problem: A very long translation might cause a buffer overflow. Solution: Trunctate the message if needed.","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/6378b21d6dd38cc0f80aa6d31d747db6c287483b","original_url":"https://github.com/vim/vim/commit/6378b21d6dd38cc0f80aa6d31d747db6c287483b"}],"edited":{"user":"BPV6T0C1J","ts":"1593460091.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/927b7dd0fe9a0a82b39d600779edb4390ecdeda6|patch 8.2.1089: Coverity warns for pointer computation>\npatch 8.2.1089: Coverity warns for pointer computation\n\nProblem:    Coverity warns for pointer computation.\nSolution:   Avoid computing a pointer to invalid memory.","ts":"1593463691.135200","attachments":[{"fallback":"GitHub: patch 8.2.1089: Coverity warns for pointer computation · vim/vim@927b7dd","id":1,"title":"patch 8.2.1089: Coverity warns for pointer computation · vim/vim@927b7dd","title_link":"https://github.com/vim/vim/commit/927b7dd0fe9a0a82b39d600779edb4390ecdeda6","text":"Problem: Coverity warns for pointer computation. Solution: Avoid computing a pointer to invalid memory.","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/927b7dd0fe9a0a82b39d600779edb4390ecdeda6","original_url":"https://github.com/vim/vim/commit/927b7dd0fe9a0a82b39d600779edb4390ecdeda6"}],"edited":{"user":"BPV6T0C1J","ts":"1593463691.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/9b5384b97e832958573ffdcd3c1e230635b434e4|patch 8.2.1090: may use NULL pointer when skipping over name>\npatch 8.2.1090: may use NULL pointer when skipping over name\n\nProblem:    May use NULL pointer when skipping over name.\nSolution:   Always set ll_name_end.","ts":"1593463691.135300","attachments":[{"fallback":"GitHub: patch 8.2.1090: may use NULL pointer when skipping over name · vim/vim@9b5384b","id":1,"title":"patch 8.2.1090: may use NULL pointer when skipping over name · vim/vim@9b5384b","title_link":"https://github.com/vim/vim/commit/9b5384b97e832958573ffdcd3c1e230635b434e4","text":"Problem: May use NULL pointer when skipping over name. Solution: Always set ll_name_end.","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/9b5384b97e832958573ffdcd3c1e230635b434e4","original_url":"https://github.com/vim/vim/commit/9b5384b97e832958573ffdcd3c1e230635b434e4"}],"edited":{"user":"BPV6T0C1J","ts":"1593463691.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/d034220c54c63daaa2841e97b653842a47f5e90e|patch 8.2.1091: no check if opening a pty works>\npatch 8.2.1091: no check if opening a pty works\n\nProblem:    No check if opening a pty works.\nSolution:   Check for invalid file descriptor.","ts":"1593463691.135400","attachments":[{"fallback":"GitHub: patch 8.2.1091: no check if opening a pty works · vim/vim@d034220","id":1,"title":"patch 8.2.1091: no check if opening a pty works · vim/vim@d034220","title_link":"https://github.com/vim/vim/commit/d034220c54c63daaa2841e97b653842a47f5e90e","text":"Problem: No check if opening a pty works. Solution: Check for invalid file descriptor.","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/d034220c54c63daaa2841e97b653842a47f5e90e","original_url":"https://github.com/vim/vim/commit/d034220c54c63daaa2841e97b653842a47f5e90e"}],"edited":{"user":"BPV6T0C1J","ts":"1593463691.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/cf070112ca2a6ac9ec5466be1cdc667f6abe8fd0|patch 8.2.1092: not checking if saving for undo succeeds>\npatch 8.2.1092: not checking if saving for undo succeeds\n\nProblem:    Not checking if saving for undo succeeds.\nSolution:   Bail out if u_savesub() returns FAIL.","ts":"1593464892.135800","attachments":[{"fallback":"GitHub: patch 8.2.1092: not checking if saving for undo succeeds · vim/vim@cf07011","id":1,"title":"patch 8.2.1092: not checking if saving for undo succeeds · vim/vim@cf07011","title_link":"https://github.com/vim/vim/commit/cf070112ca2a6ac9ec5466be1cdc667f6abe8fd0","text":"Problem: Not checking if saving for undo succeeds. Solution: Bail out if u_savesub() returns FAIL.","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/cf070112ca2a6ac9ec5466be1cdc667f6abe8fd0","original_url":"https://github.com/vim/vim/commit/cf070112ca2a6ac9ec5466be1cdc667f6abe8fd0"}],"edited":{"user":"BPV6T0C1J","ts":"1593464893.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/de19b745eee06a8a204988ae9989d97143caece9|patch 8.2.1093: Python: double free when adding item to dict fails>\npatch 8.2.1093: Python: double free when adding item to dict fails\n\nProblem:    Python: double free when adding item to dict fails.\nSolution:   Remove vim_free() call.","ts":"1593466093.136000","attachments":[{"fallback":"GitHub: patch 8.2.1093: Python: double free when adding item to dict fails · vim/vim@de19b74","id":1,"title":"patch 8.2.1093: Python: double free when adding item to dict fails · vim/vim@de19b74","title_link":"https://github.com/vim/vim/commit/de19b745eee06a8a204988ae9989d97143caece9","text":"Problem: Python: double free when adding item to dict fails. Solution: Remove vim_free() call.","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/de19b745eee06a8a204988ae9989d97143caece9","original_url":"https://github.com/vim/vim/commit/de19b745eee06a8a204988ae9989d97143caece9"}],"edited":{"user":"BPV6T0C1J","ts":"1593466093.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/a53618dd1dd91c7bb67b5dfc83dc29371b47f55b|patch 8.2.1094: dead code in libvterm>\npatch 8.2.1094: dead code in libvterm\n\nProblem:    Dead code in libvterm.\nSolution:   Remove condition that is always true.","ts":"1593466093.136100","attachments":[{"fallback":"GitHub: patch 8.2.1094: dead code in libvterm · vim/vim@a53618d","id":1,"title":"patch 8.2.1094: dead code in libvterm · vim/vim@a53618d","title_link":"https://github.com/vim/vim/commit/a53618dd1dd91c7bb67b5dfc83dc29371b47f55b","text":"Problem: Dead code in libvterm. Solution: Remove condition that is always true.","thumb_url":"https://avatars0.githubusercontent.com/u/11618545?s=400&v=4","blocks":null,"service_name":"GitHub","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/github.png","thumb_width":48,"thumb_height":48,"from_url":"https://github.com/vim/vim/commit/a53618dd1dd91c7bb67b5dfc83dc29371b47f55b","original_url":"https://github.com/vim/vim/commit/a53618dd1dd91c7bb67b5dfc83dc29371b47f55b"}],"edited":{"user":"BPV6T0C1J","ts":"1593466093.000000"},"subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null},{"type":"message","text":"<https://github.com/vim/vim/commit/6b949615edac2dd33d5e865be8328561f296b045|patch 8.2.1095: may use pointer after freeing it>\npatch 8.2.1095: may use pointer after freeing it\n\nProblem:    May use pointer after freeing it when text properties are used.\nSolution:   Update redo buffer before calling ml_replace().","ts":"1593466093.136200","subtype":"bot_message","bot_id":"BPV6T0C1J","username":"Recent Commits to vim:master","icons":{"image_48":"https://a.slack-edge.com/80588/img/services/rss_48.png"},"replace_original":false,"delete_original":false,"blocks":null}]
