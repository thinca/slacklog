[{"client_msg_id":"413c8eb2-c759-4af8-8d40-4b55526d881a","type":"message","user":"U9S4G0LJW","text":"ひーつらい","ts":"1603433771.147400","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"Jn5FP"}]},{"client_msg_id":"d1c28dba-ab37-482e-8bd6-7f818cf3458f","type":"message","user":"U03C71D7H","text":"後からルールが追加(ver up で新規実装)されて、それに対応してコードを直したりするんですよ…","ts":"1603433643.147200","team":"T03C4RC8V","reactions":[{"name":"hiee","count":1,"users":["U013QL1RAPN"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"A/d"}]},{"client_msg_id":"2f0245ca-4e1e-4ac7-8844-911e05d2fe38","type":"message","user":"U9S4G0LJW","text":"PRの段階でフォーマットしろって弾くのがよさそうな気が","ts":"1603433237.146300","team":"T03C4RC8V","reactions":[{"name":"wakaru","count":1,"users":["U013QL1RAPN"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"yDfe"}]},{"client_msg_id":"216da6ac-f8f4-4fd0-acdf-60c013853f26","type":"message","user":"UAZ33BKV2","text":"botアカウントなら無視するようにじゃないと、commitがすごい数になりそうだけど...","ts":"1603433151.145300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"YAYs"}]},{"client_msg_id":"59c15e69-785a-4bd2-9acd-d4fe5b7101d7","type":"message","user":"U03C71D7H","text":"この機能いつも忘れる","ts":"1603431833.144300","team":"T03C4RC8V","replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"K3o"}]},{"client_msg_id":"833209ac-3ca9-4fdb-b0c9-1accea6c69c5","type":"message","user":"UAZ33BKV2","text":"を、知らなかった\n\u003chttps://tech.hey.jp/entry/2020/10/23/111200\u003e\n\u0026gt; *自動修正で git-blame が汚れることの対策*\n\u0026gt; RuboCopに限らず、フォーマッターによるコードの自動修正は「git-blameが汚れる」という難点があります。しかしGit 2.23から`--ignore-revs-file` オプションで指定したファイルに列挙されたコミットを無視できるようになりました。\n\u0026gt; 列挙するファイルの名前は、いくつかの\u003chttp://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA|リポジトリ\u003eを見ると `.git-blame-ignore-revs` とするのが定番のようです。`git config blame.ignoreRevsFile .git-blame-ignore-revs` で`git-blame`時にこのファイルにあるリビジョンを自動的に無視するようになります。","ts":"1603429229.143900","attachments":[{"fallback":"STORES Tech Blog: たまってしまった .rubocop_todo.yml をGitHub Actionsで継続的かつ自動的に倒す方法 - STORES Tech Blog","id":1,"title":"たまってしまった .rubocop_todo.yml をGitHub Actionsで継続的かつ自動的に倒す方法 - STORES Tech Blog","title_link":"https://tech.hey.jp/entry/2020/10/23/111200","text":"こんにちは。heyのCTOをやっている藤村です。 実はCTOになる前はSTORESのRailsのコードを改善する仕事をしていました。その頃に、たまってしまっている.rubocop_todo.ymlをなんとか手間をかけずに消化していきたいな〜と思い、少しづつ自動的に消化する仕組みを作りました。この記事ではその仕組みをご紹介します。 rubocop_todo.yml とは 既存のコードベースに対してRuboCopを適用すると大量の違反箇所が出てしまい使い物にならないという問題があります。それの解決策として、既存のコードで違反しているファイルを無視する設定を .rubocop_todo.yml とい…","image_url":"https://ogimage.blog.st-hatena.com/26006613559034397/26006613637626170/1603421981","blocks":null,"ts":1603419120,"service_name":"STORES Tech Blog","service_icon":"https://cdn.image.st-hatena.com/image/apple_touch_icon/367a3d4478c54480576ad38dda55f71df67aedb1/version=1/https%3A%2F%2Fcdn.user.blog.st-hatena.com%2Fblog_custom_icon%2F155986517%2F1591181936692910","from_url":"https://tech.hey.jp/entry/2020/10/23/111200","original_url":"https://tech.hey.jp/entry/2020/10/23/111200"}],"edited":{"user":"UAZ33BKV2","ts":"1603429240.000000"},"team":"T03C4RC8V","reactions":[{"name":"majika","count":2,"users":["U7B4ZD49X","UEB0VGD7E"]},{"name":"hee","count":1,"users":["U013QL1RAPN"]}],"replace_original":false,"delete_original":false,"blocks":[{"type":"rich_text","block_id":"MKSRj"}]}]
